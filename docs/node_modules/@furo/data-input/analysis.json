{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-data-bool-icon`\ntodo Describe your element",
      "summary": "todo shortdescription",
      "path": "packages/furo-data-input/furo-data-bool-icon.js",
      "properties": [
        {
          "name": "myBool",
          "type": "boolean | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 51,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "symboltrue",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 12
            },
            "end": {
              "line": 52,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "symbolfalse",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 12
            },
            "end": {
              "line": 53,
              "column": 39
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "toggle",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSymbol",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-bool-icon",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataBoolIcon",
      "attributes": [
        {
          "name": "my-bool",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 51,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "symboltrue",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 12
            },
            "end": {
              "line": 52,
              "column": 38
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "symbolfalse",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 12
            },
            "end": {
              "line": 53,
              "column": 39
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-bool-icon",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-collection-dropdown`\n\nThis component displays a dropdown. The options can be injected with injectList.\n\nIt is also possible to put a simple comma separated list of items on the `list` attribute. In this case the display\nand id are the same.\n\nIf the bounded field haves an `options` attribute in the metas, it will use these options.\n\nThe options must have a signature like this:\n```json\n[\n {\n  \"id\": 34,\n  \"display_name\":\"Option 34\"\n }\n]\n```\nIt is possible to put any other signatures (`[{}]`) by setting the attribute *display-field* and *value-field*.\nThe value in *value-field* will be set on the bounded field and the values in *display-field* are used for the dropdown.\n\n\n<sample-furo-data-collection-dropdown></sample-furo-data-collection-dropdown>\n\nTags: input",
      "summary": "bindable dropdown",
      "path": "packages/furo-data-input/furo-data-collection-dropdown.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "list",
          "type": "string | null | undefined",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"] by furo-select-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "subfield",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "subfieldDisplay",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 242,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayField",
          "type": "string | null | undefined",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueField",
          "type": "string | null | undefined",
          "description": "The name of the field from the injected collection that contains the value you want to assign to the attribute value and the bounded field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 274,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_dropdownList",
          "type": "Array | null | undefined",
          "description": "the dropdown list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 324,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_findDisplayNameByValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "_notifiySelectedItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyAndTriggerUpdate",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "arr"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 2
            },
            "end": {
              "line": 333,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the furo input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 347,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkIsComplexType",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 2
            },
            "end": {
              "line": 393,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildListWithMetaOptions",
          "description": "Build the dropdown list with given options from meta",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_mapDataToList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 477,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ]
        },
        {
          "name": "_setItemSelectedViaSelectedMark",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 2
            },
            "end": {
              "line": 492,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ]
        },
        {
          "name": "injectList",
          "description": "Inject the array with the selectable options.\n\nThe array with objects should have a signature like this. This could be the response of a collection agent (`--response(*.entities)`)\n```json\n[\n {\n  \"id\": 34,\n  \"display_name\":\"Option A\"\n },\n {\n  \"id\": 223,\n  \"display_name\":\"Option X\"\n },\n]\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 2
            },
            "end": {
              "line": 520,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectEntities",
          "description": "Inject the array with entities for the selectable options.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 2
            },
            "end": {
              "line": 576,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entities"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 583,
              "column": 2
            },
            "end": {
              "line": 596,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-collection-dropdown",
          "description": "inject collection demo"
        },
        {
          "url": "demo-furo-data-collection-dropdown-bind-entity",
          "description": "bind entity without inject demo"
        },
        {
          "url": "demo-furo-data-collection-reference-dropdown",
          "description": "combine with reference dropdown demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 597,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataCollectionDropdown",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "list",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"] by furo-select-input",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "subfield",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "subfield-display",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 242,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-field",
          "description": "The name of the field from the injected collection that contains the value you want to assign to the attribute value and the bounded field.",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 274,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "item-selected",
          "description": "item-selected\nFired when a item from the dropdown was selected\n\ndetail payload: the original item object",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from the component inside.\n\ndetail payload: {*} the value from the value-field. By default the value field is \"id\"\n\n*bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-collection-dropdown",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-checkbox-input`\nfuro-data-checkbox-input element which uses a  `<furo-checkbox-input >` element. Works best with furo-data components.\n\n  ### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-data-checkbox-input  ƒ-bind-data=\"--entity(*.fields.open)\"></furo-data-checkbox-input>\n  </template>\n </furo-demo-snippet>\n\nTags: data-input",
      "summary": "furo data checkbox input element",
      "path": "packages/furo-data-input/furo-data-checkbox-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 12
            },
            "end": {
              "line": 123,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 131,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 139,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 12
            },
            "end": {
              "line": 145,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 152,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 165,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the furo-data-checkbox-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 4
            },
            "end": {
              "line": 204,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-checkbox-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 205,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataCheckboxInput",
      "attributes": [
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 12
            },
            "end": {
              "line": 123,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 131,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 139,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 12
            },
            "end": {
              "line": 145,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 152,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 165,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ALL_BUBBLING_EVENTS_FROM_furo-checkbox-input",
          "description": "ALL_BUBBLING_EVENTS_FROM_furo-checkbox-input\n\nAll bubbling events from [furo-checkbox-input](../../input/doc/furo-checkbox-input) will be fired, because furo-data-checkbox-input uses furo-checkbox-input internally.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-checkbox-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-input-color`\n  Binds a entityObject field to a furo-color-input field\n\nTags: input",
      "summary": "Binds a entityObject field to a furo-color-input field",
      "path": "packages/furo-data-input/furo-data-color-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the text-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 314,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-color-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 316,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataColorInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the text value\n\nComes from underlying component furo-text-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-color-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-data-date-input`\nBinds a entityObject field to a furo-date-input field\n\n\nTags: input",
      "summary": "Bind a entityObject.field to a date input",
      "path": "packages/furo-data-input/furo-data-date-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_step",
          "type": "?",
          "description": "Updater for the step attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "string | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 247,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the date-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 2
            },
            "end": {
              "line": 267,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFieldBranch",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_convertDateObjToString",
          "description": "convert google date object to ISO 8601",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ]
        },
        {
          "name": "_convertStringToDateObj",
          "description": "convert date string ISO 8601 to object for google.type.Dates",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            },
            {
              "name": "obj"
            }
          ]
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-date-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 374,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataDateInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "step",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {Date} the date value\n\nComes from underlying component furo-date-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-date-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-display`\n Displays a data field. If the type is a complex type (like google.type.Date), the display_name field is used.",
      "summary": "Displays a data field",
      "path": "packages/furo-data-input/furo-data-display.js",
      "properties": [
        {
          "name": "displayfield",
          "type": "string | null | undefined",
          "description": "If your field type does not have a display_name, use this attribute to set the field that should be used\ninstead of display_name.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the text-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 2
            },
            "end": {
              "line": 332,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-display",
          "description": ""
        },
        {
          "url": "demo-furo-data-display-condensed",
          "description": "Condensed variant"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 333,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataDisplay",
      "attributes": [
        {
          "name": "displayfield",
          "description": "If your field type does not have a display_name, use this attribute to set the field that should be used\ninstead of display_name.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 34
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-display",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-number-input`\nBinds a entityObject field to a furo-number-input field\n\n<sample-furo-data-number-input></sample-furo-data-number-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a number input",
      "path": "packages/furo-data-input/furo-data-number-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_step",
          "type": "?",
          "description": "Updater for the step attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the number-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-number-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 293,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataNumberInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {Number} the number value\n\nComes from underlying component furo-number-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-number-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-money-input`\nBinds a entityObject field google.type.Money to a furo-number-input and currency dropdown fields\n <sample-furo-data-money-input></sample-furo-data-money-input>\n\n you can set currencies dropdown with options in meta or set options attribute as json in element or set currencies as string in element. the three\n ways have priority : currencies > options as attribute > options in meta. When no currencies is setted. Default currency will be `CHF`\n\n <furo-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" options='{\"list\": [ \"chf\",\"eur\",\"usd\" ]}'></furo-data-money-input>\n <furo-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" options='{\"list\": [ {\"id\":\"CHF\",\"label\":\"Schweiz\"},{\"id\":\"EUR\",\"label\":\"Europa\", \"selected\": true}'></furo-data-money-input>\n <furo-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" currencies=\"chf,eur,usd\"></furo-data-money-input>\n\nTags: money input",
      "summary": "Bind a entityObject.field to a number and dropdown fields",
      "path": "packages/furo-data-input/furo-data-money-input.js",
      "properties": [
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr for amount",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_readonly",
          "type": "?",
          "description": "Updater for the readonly attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_options",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 2
            },
            "end": {
              "line": 313,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "currencies",
          "type": "string | null | undefined",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "options",
          "type": "Array | null | undefined",
          "description": "The list of currencies. Can be a simple list like [\"A\",\"B\",\"C\"]. In this case the value is equals the label\n\nWith ids (key value):\n\n[{\"id\":1,\"label\":\"AAA\"},{\"id\":2,\"label\":\"BBB\"}]\n\n\nWith preselect state in data:\n\n[{\"id\":23,\"label\":\"AAA\",\"selected\":false},{\"id\":44,\"label\":\"BBB\",\"selected\":true}]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "amount field label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_convertDataToMoneyObj",
          "description": "convert data to google.type.Money format",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currency"
            },
            {
              "name": "amount"
            },
            {
              "name": "obj"
            }
          ]
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the number-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOptions",
          "description": "Set the options programmatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optionArray"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setCurrencies",
          "description": "Set the list programmatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currencies"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateSelectOptions",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collection"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 2
            },
            "end": {
              "line": 406,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-money-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 408,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataMoneyInput",
      "attributes": [
        {
          "name": "errortext",
          "description": "Updater for the errortext attr",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "currencies",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"]",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 2
            },
            "end": {
              "line": 321,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "options",
          "description": "The list of currencies. Can be a simple list like [\"A\",\"B\",\"C\"]. In this case the value is equals the label\n\nWith ids (key value):\n\n[{\"id\":1,\"label\":\"AAA\"},{\"id\":2,\"label\":\"BBB\"}]\n\n\nWith preselect state in data:\n\n[{\"id\":23,\"label\":\"AAA\",\"selected\":false},{\"id\":44,\"label\":\"BBB\",\"selected\":true}]",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "label",
          "description": "amount field label",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the component\ndetail payload: google money object",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-money-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-password-input`\nBinds a entityObject field to a furo-password-input field\n\n<sample-furo-data-password-input></sample-furo-data-password-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a password input",
      "path": "packages/furo-data-input/furo-data-password-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_pattern",
          "type": "?",
          "description": "Updater for the pattern attr, the prop alone with pattern=\"${this.pattern}\" wont work,\nbecaue it set \"undefined\" (as a Sting!)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 104,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the number-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-password-input",
          "description": "Data binding"
        },
        {
          "url": "demo-furo-data-input-together",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 297,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataPasswordInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "pattern",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the text value\n\nComes from underlying component furo-password-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-password-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-property`\n Field for type furo.Property. It works with repeated types an nonrepeating type. Supported\n\n ```html\n <!-- single Property -->\n <furo-data-property ƒ-bind-data=\"--entity(*.single_type_property)\"></furo-data-property>\n <!-- repeated Property -->\n <furo-data-property ƒ-bind-data=\"--entity(*.type_property)\"></furo-data-property>\n\n ```\n\n ## Example data for the data-object looks like this\n\n ```json\n \"single_type_property\": {\n   \"data\": {\n     \"@type\": \"google.type.Date\",\n     \"day\": 8,\n     \"month\":  11,\n     \"year\": 2022\n   },\n   \"display_name\": \"a date\",\n   \"id\": \"date\",\n   \"code\": \"date\",\n   \"meta\": {\n     \"fields\": {\n       \"data\": {\n         \"meta\": {\n           \"label\": \"Additional fields\",\n           \"hint\": \"this is data\"\n         },\n         \"constraints\": {\n           \"min\": {\n             \"value\": \"2019-09-09\",\n             \"message\": \"to small\"\n           }\n         }\n       }\n     }\n   }\n }\n ```\n## Example StringOptions Field\n\n```json\n{\n  \"data\": {\n       \"@type\": \"furo.StringOptionProperty\",\n       \"id\": \"bb\",\n       \"display_name\": \"Display\"\n     },\n     \"display_name\": \"Display\",\n     \"id\": \"opt\",\n     \"code\": \"option\",\n     \"meta\": {\n       \"fields\": {\n         \"data\": {\n           \"meta\": {\n             \"label\": \"Please select\",\n             \"hint\": \"datehint is data\",\n             \"repeated\": false,\n             \"options\": [\n               {\n                 \"id\": \"aa\",\n                 \"display_name\": \"The display a\"\n               },\n               {\n                 \"id\": \"bb\",\n                 \"display_name\": \"The display b\"\n               }\n             ]\n           }\n         }\n       }\n     }\n   }\n\n```\n\n The current type mappings are:\n\n- \"google.type.Date\": \"furo-data-date-input\"\n- \"furo.StringProperty\": \"furo-data-text-input\"\n- \"furo.IntegerProperty\": \"furo-data-number-input\"\n- \"furo.NumberProperty\": \"furo-data-number-input\"\n- \"furo.StringOptionProperty\": \"furo-data-collection-dropdown\"",
      "summary": "property input",
      "path": "packages/furo-data-input/furo-data-property.js",
      "properties": [],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 163,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createPropComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-property",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 99,
          "column": 0
        },
        "end": {
          "line": 226,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataProperty",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-property",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-property-display`\n Field for type furo.Property. It works with repeated types an nonrepeating type. Supported\n\n ```html\n <!-- single Property -->\n <furo-data-property-display ƒ-bind-data=\"--entity(*.single_type_property)\"></furo-data-property-display>\n <!-- repeated Property -->\n <furo-data-property-display ƒ-bind-data=\"--entity(*.type_property)\"></furo-data-property-display>\n\nThis component uses the same data like `furo-data-property`\n\n\n\n```\n\n The current type mappings are:\n\n- \"google.type.Date\": \"furo-data-display\"\n- \"furo.StringProperty\": \"furo-data-display\"\n- \"furo.IntegerProperty\": \"furo-data-display\"\n- \"furo.NumberProperty\": \"furo-data-display\"\n- \"furo.StringOptionProperty\": \"furo-data-display\"",
      "summary": "property display",
      "path": "packages/furo-data-input/furo-data-property-display.js",
      "properties": [],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createPropComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-property-display",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 150,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataPropertyDisplay",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-property-display",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-radio-button-input`\nfuro-data-radio-button-input element which uses a  `<furo-radio-button-input >` element. Works best with furo-data components.\n\n  ### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-data-radio-button-input  ƒ-bind-data=\"--entity(*.fields.open)\"></furo-data-radio-button-input>\n  </template>\n </furo-demo-snippet>\n\nTags: data-input",
      "summary": "furo data radio-button input element",
      "path": "packages/furo-data-input/furo-data-radio-buton-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 130,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 12
            },
            "end": {
              "line": 138,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 152,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 166,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 172,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the furo-data-radio-button-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-radio-button-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataRadioButtonInput",
      "attributes": [
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 130,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 12
            },
            "end": {
              "line": 138,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 152,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 166,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 12
            },
            "end": {
              "line": 172,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ALL_BUBBLING_EVENTS_FROM_furo-radio-button-input",
          "description": "ALL_BUBBLING_EVENTS_FROM_furo-radio-button-input\n\nAll bubbling events from [furo-radio-button-input](../../input/doc/furo-radio-button-input) will be fired, because furo-data-radio-button-input uses furo-radio-button-input internally.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-radio-button-input",
      "mixins": [
        "FBP",
        "FuroInputBase"
      ]
    },
    {
      "description": "`furo-data-range-input`\nBinds a entityObject field to a furo-range-input field\n\n<sample-furo-data-range-input></sample-furo-data-range-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a range input",
      "path": "packages/furo-data-input/furo-data-range-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 106,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_step",
          "type": "?",
          "description": "Updater for the step attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the range-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 287,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-range-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 289,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataRangeInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {Range} the range value\n\nComes from underlying component furo-range-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-range-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`reference-search-item`\nRepeated item to display the search result set",
      "summary": "representation of a result item",
      "path": "packages/furo-data-input/reference-search-item.js",
      "properties": [
        {
          "name": "myBool",
          "type": "boolean | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 12
            },
            "end": {
              "line": 28,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "injectItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "preselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "select",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/reference-search-item.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 7
        },
        "end": {
          "line": 100,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ReferenceSearchItem",
      "attributes": [
        {
          "name": "my-bool",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 12
            },
            "end": {
              "line": 28,
              "column": 35
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "item-selected",
          "description": "item-selected\nFired when item is selected\ndetail payload: item",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "reference-search-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-reference-search`\n Sucht eine Referenz\n bounded data should be furo-reference\n\n```\n<!--  furo-data-object will eine Referenz auflösen -->\n<furo-data-object type=\"task.Task\" @-object-ready=\"--entityReady\"></furo-data-object>\n\n<furo-horizontal-flex>\n   <!--  furo-data-reference-search kann eine Referenz die entity-objekt besitzt darstellen.\n   Bei einer Texteingabe wird ^^search mit dem eingegebenen Text gesucht. Diesr geht via wire --term an den furo-collection-agent.\n   Wenn furo-collection-agent eine Kollektion zurückliefert, klappt die Auswahl auf. -->\n   <furo-data-reference-search autofocus  flex ƒ-bind-data=\"--entityReady(*.fields.ref)\" @-search=\"--term\" ƒ-collection-in=\"--refCol\"></furo-data-reference-search>\n\n   <furo-data-reference-search  flex ƒ-bind-data=\"--entityReady(*.fields.ref)\" min-term-length=\"2\" @-search=\"--term\" ƒ-collection-in=\"--refCol\"></furo-data-reference-search>\n\n</furo-horizontal-flex>\n\n<!-- Der furo-collection-agent erhält die hts von ref.value, wenn ein term eingegeben wurde beginnt dieser zu suchen.\nDie Resultate werden an furo-data-reference-search zurück gegeben. -->\n<furo-collection-agent service=\"tasks\" ƒ-search=\"--term\" ƒ-hts-in=\"--entityReady(*.fields.ref._value)\" @-response=\"--refCol\"></furo-collection-agent>\n\n```\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property                                | Description | Default  | Fallback\n-----------------------------------------------|-------------|----------|----------\n`--furo-data-reference-search-list-background` | Background color of result list | --surface | #ffffff;\n`--reference-search-no-result-hint` | color of hint when no result found | --accent | #ddb13d;",
      "summary": "shortdescription",
      "path": "packages/furo-data-input/furo-data-reference-search.js",
      "properties": [
        {
          "name": "_minTermLength",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "valueField",
          "type": "string | null | undefined",
          "description": "the field name of reference-item which should be used to asign to value (likes id) field of the the data entity object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 12
            },
            "end": {
              "line": 283,
              "column": 64
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayField",
          "type": "string | null | undefined",
          "description": "the field name of reference-item which should be used as display which will be showed in the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 12
            },
            "end": {
              "line": 290,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "subfield",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 12
            },
            "end": {
              "line": 298,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_displayName",
          "type": "string | null | undefined",
          "description": "this property saves the value of the displayField of selected item from collection",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 12
            },
            "end": {
              "line": 304,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_hasCollection",
          "type": "boolean | null | undefined",
          "description": "mark if the collection is already loaded",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 12
            },
            "end": {
              "line": 310,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_collection",
          "type": "Array | null | undefined",
          "description": "the loaded collection",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 12
            },
            "end": {
              "line": 316,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 12
            },
            "end": {
              "line": 324,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "noResultHint",
          "type": "string | null | undefined",
          "description": "hint text when result not found by search",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 12
            },
            "end": {
              "line": 331,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 12
            },
            "end": {
              "line": 339,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 12
            },
            "end": {
              "line": 347,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "minTermLength",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 12
            },
            "end": {
              "line": 356,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "searchOnEnterOnly",
          "type": "boolean | null | undefined",
          "description": "Enable this, to avoid the automatic triggering of \"search\".\n\nThe user have to press enter to trigger the search. Min-term-length is respected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 12
            },
            "end": {
              "line": 365,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 12
            },
            "end": {
              "line": 373,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 12
            },
            "end": {
              "line": 379,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 12
            },
            "end": {
              "line": 386,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 12
            },
            "end": {
              "line": 393,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 12
            },
            "end": {
              "line": 399,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 12
            },
            "end": {
              "line": 405,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_init",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireSearchEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeList",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clear",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 4
            },
            "end": {
              "line": 232,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the search-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 4
            },
            "end": {
              "line": 420,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "collectionIn",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "collection"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearNoResultHint",
          "description": "clear no result hint. reset hint to original value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 2
            },
            "end": {
              "line": 472,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 522,
              "column": 4
            },
            "end": {
              "line": 543,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-reference-search",
          "description": ""
        },
        {
          "url": "demo-furo-data-reference-search-no-result",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 0
        },
        "end": {
          "line": 545,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataReferenceSearch",
      "attributes": [
        {
          "name": "value-field",
          "description": "the field name of reference-item which should be used to asign to value (likes id) field of the the data entity object",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 12
            },
            "end": {
              "line": 283,
              "column": 64
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field",
          "description": "the field name of reference-item which should be used as display which will be showed in the dropdown.",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 12
            },
            "end": {
              "line": 290,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "subfield",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 12
            },
            "end": {
              "line": 298,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 12
            },
            "end": {
              "line": 324,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "no-result-hint",
          "description": "hint text when result not found by search",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 12
            },
            "end": {
              "line": 331,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 12
            },
            "end": {
              "line": 339,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 12
            },
            "end": {
              "line": 347,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min-term-length",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 12
            },
            "end": {
              "line": 356,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "search-on-enter-only",
          "description": "Enable this, to avoid the automatic triggering of \"search\".\n\nThe user have to press enter to trigger the search. Min-term-length is respected.",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 12
            },
            "end": {
              "line": 365,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 12
            },
            "end": {
              "line": 373,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 12
            },
            "end": {
              "line": 379,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 12
            },
            "end": {
              "line": 386,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 12
            },
            "end": {
              "line": 393,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 397,
              "column": 12
            },
            "end": {
              "line": 399,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 12
            },
            "end": {
              "line": 405,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "search",
          "description": "search\nFired when term is entered and bigger then min-term-length\ndetail payload: {String} term",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-cleared",
          "description": "value-cleared\nFired when input value is cleared\ndetail payload: empty",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-reference-search",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`data-repeat-delete`\nDeletes a repeated item. Built for furo-data-repeat",
      "summary": "",
      "path": "packages/furo-data-input/lib/data-repeat-delete.js",
      "properties": [
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "bindItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeatedNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DataRepeatDelete",
      "attributes": [
        {
          "name": "icon",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 23,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "data-repeat-delete",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-repeat`\n Display for repeated fields.\n\n ```html\n <furo-data-repeat ƒ-bind-data=\"--data(*.repeaterfield)\"\n     repeated-component=\"furo-date-input\"\n     condensed\n     delete-icon=\"remove\"\n     add-icon=\"star\"\n     add-text=\"add another date\"\n     ƒ-add=\"--additionalDateClicked\"\n     ></furo-data-repeat>\n\n     <!-- Add is controlled from outside, delete from inside of the item -->\n     <furo-data-repeat ƒ-bind-data=\"--data(*.repeatedcomplextype)\"\n     repeated-component=\"my big form\"\n     ƒ-add=\"--additionalDateClicked\"\n     ></furo-data-repeat>\n\n ```\n\n Every Attribute (boolean or string) which is set on furo-data-repeat which is not part of its own api, will be set on the child element.\n If you set condensed as an example, it will be set on the repeated element. It is not possible to set wires to the children.",
      "summary": "todo shortdescription",
      "path": "packages/furo-data-input/furo-data-repeat.js",
      "properties": [
        {
          "name": "deleteIcon",
          "type": "undefined",
          "description": "Set the delete icon to enable deleting of a repeated element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "undefined"
        },
        {
          "name": "repeatedComponent",
          "type": "string | null | undefined",
          "description": "repeated-component to be used for the items.\nThe component must support ƒ-bind-data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "createAttribute",
          "description": "Create a attribute for map<string,type> types\ncreate a field in a FieldNode, this is useful when using map<string,something>\nset the value option to init with values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "description": "{\"fieldName\":\"name\",\"type\":\"string\", \"spec\":{..}}  spec is optional"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 156,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeats"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkSize",
          "description": "hide the element if array is empty",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "add",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-repeat",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 205,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataRepeat",
      "attributes": [
        {
          "name": "repeated-component",
          "description": "repeated-component to be used for the items.\nThe component must support ƒ-bind-data",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-repeat",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-search-input`\nBinds a entityObject field to a furo-search-input field\n\n<sample-furo-data-search-input></sample-furo-data-search-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a search input",
      "path": "packages/furo-data-input/furo-data-search-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_pattern",
          "type": "?",
          "description": "Updater for the pattern attr, the prop alone with pattern=\"${this.pattern}\" wont work,\nbecaue it set \"undefined\" (as a Sting!)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the search-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-search-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 285,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataSearchInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "pattern",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 6
            },
            "end": {
              "line": 229,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the text value\n\nComes from underlying component furo-search-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-search-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-text-input`\nBinds a entityObject field to a furo-text-input field\n\n<sample-furo-data-text-input></sample-furo-data-text-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a text input",
      "path": "packages/furo-data-input/furo-data-text-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_pattern",
          "type": "?",
          "description": "Updater for the pattern attr, the prop alone with pattern=\"${this.pattern}\" wont work,\nbecaue it set \"undefined\" (as a Sting!)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr\nsame problem like in pattern",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 2
            },
            "end": {
              "line": 113,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr\n* same problem like in pattern",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the text-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 254,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-text-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 300,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataTextInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "pattern",
          "description": "Overrides the pattern from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 6
            },
            "end": {
              "line": 165,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 6
            },
            "end": {
              "line": 173,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 231,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the text value\n\nComes from underlying component furo-text-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-text-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-textarea-input`\nBinds a entityObject field to a furo-textarea-input field\n\n<sample-furo-data-textarea-input></sample-furo-data-textarea-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a textarea input",
      "path": "packages/furo-data-input/furo-data-textarea-input.js",
      "properties": [
        {
          "name": "_cols",
          "type": "?",
          "description": "Updater for the cols attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_rows",
          "type": "?",
          "description": "Updater for the rows attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "passes always float the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rows",
          "type": "number | null | undefined",
          "description": "The number of visible text lines for the control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "cols",
          "type": "number | null | undefined",
          "description": "The visible width of the text control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the textarea-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 189,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-textarea-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 237,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataTextareaInput",
      "attributes": [
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 110,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 118,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "passes always float the label",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "rows",
          "description": "The number of visible text lines for the control.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "cols",
          "description": "The visible width of the text control",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the text value\n\nComes from underlying component furo-textarea-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-textarea-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-time-input`\nBinds a entityObject field to a furo-time-input field\n\n<sample-furo-data-time-input></sample-furo-data-time-input>\n\nTags: input",
      "summary": "Bind a entityObject.field to a time input",
      "path": "packages/furo-data-input/furo-data-time-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_hint",
          "type": "?",
          "description": "Updater for the hint attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the leadingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Updater for the trailingIcon attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "?",
          "description": "Updater for the errortext attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_min",
          "type": "?",
          "description": "Updater for the min => minlength attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_max",
          "type": "?",
          "description": "Updater for the max attr*",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_step",
          "type": "?",
          "description": "Updater for the step attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "min",
          "type": "string | null | undefined",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the time-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 2
            },
            "end": {
              "line": 279,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-time-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 281,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataTimeInput",
      "attributes": [
        {
          "name": "leading-icon",
          "description": "Updater for the leadingIcon attr",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Updater for the trailingIcon attr",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "Overrides the min value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "max",
          "description": "Overrides the max value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "step",
          "description": "Overrides the step value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {String} the time value\n\nComes from underlying component furo-time-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-time-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-file-input`\nBinds a entityObject field to a furo-file-input field\n\nTags: input",
      "summary": "Bind a entityObject.field to a text input",
      "path": "packages/furo-data-input/furo-data-file-input.js",
      "properties": [
        {
          "name": "_label",
          "type": "?",
          "description": "Updater for the label attr",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "accept",
          "type": "string | null | undefined",
          "description": "Hint for expected file type in file upload controls\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers\ne.g. .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "multiple",
          "type": "boolean | null | undefined",
          "description": "Whether to allow multiple values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "capture",
          "type": "string | null | undefined",
          "description": "What source to use for capturing image or video data\nThe capture attribute value is a string that specifies which camera to use for capture of\nimage or video data, if the accept attribute indicates that the input should be of one of those types.\nA value of user indicates that the user-facing camera and/or microphone should be used. A value of environment\nspecifies that the outward-facing camera and/or microphone should be used. If this attribute is missing,\nthe user agent is free to decide on its own what to do. If the requested facing mode isn't available,\nthe user agent may fall back to its preferred default mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 12
            },
            "end": {
              "line": 101,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 141,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 12
            },
            "end": {
              "line": 148,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "outline",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "unelevated",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "primary",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 12
            },
            "end": {
              "line": 157,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "secondary",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "accent",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 12
            },
            "end": {
              "line": 163,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the text-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 232,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-file-input",
          "description": "Data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 234,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataFileInput",
      "attributes": [
        {
          "name": "accept",
          "description": "Hint for expected file type in file upload controls\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers\ne.g. .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "multiple",
          "description": "Whether to allow multiple values",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "capture",
          "description": "What source to use for capturing image or video data\nThe capture attribute value is a string that specifies which camera to use for capture of\nimage or video data, if the accept attribute indicates that the input should be of one of those types.\nA value of user indicates that the user-facing camera and/or microphone should be used. A value of environment\nspecifies that the outward-facing camera and/or microphone should be used. If this attribute is missing,\nthe user agent is free to decide on its own what to do. If the requested facing mode isn't available,\nthe user agent may fall back to its preferred default mode.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "Overrides the label text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 12
            },
            "end": {
              "line": 101,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 141,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 12
            },
            "end": {
              "line": 148,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "outline",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "unelevated",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "primary",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 12
            },
            "end": {
              "line": 157,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "secondary",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "accent",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 12
            },
            "end": {
              "line": 163,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the input field.\n\ndetail payload: {Array} Base64 String\n\nComes from underlying component furo-file-input. **bubbles**",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-file-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-sign-pad`\nDescribe your element",
      "summary": "shortdescription",
      "path": "packages/furo-data-input/furo-data-sign-pad.js",
      "properties": [],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "clear",
          "description": "Clears the image",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "resize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 102,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_setEmpty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_setActive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "setImage",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "encodedImage"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "encodeImage",
          "description": "Encodes the image using the type and encodingOptions (quality) defined.\nThe encoded image is available in the `image` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBegin",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_onEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 162,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_dotSizeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_minWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 175,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_maxWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_backgroundColorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_penColorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_velocityFilterWeightChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 192,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "_onEncodingChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/input/furo-sign-pad.js",
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "encoderOptions"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FuroSignPad"
        },
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entityField"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-data-sign-pad",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 44,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "FuroSignPad",
      "name": "FuroDataSignPad",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "sign-updated",
          "description": "sign-updated\nFired when sign gets new painting\ndetail payload: base encoded image",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-sign-pad",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "packages/furo-data-input/lib/CheckMetaAndOverrides.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "UpdateMetaAndConstraints",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "CheckAttributeOverrides",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 0,
          "column": 7
        },
        "end": {
          "line": 118,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "CheckMetaAndOverrides"
    },
    {
      "description": "",
      "summary": "",
      "path": "packages/furo-data-input/lib/helper.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "UpdateInputAttribute",
          "description": "update Attribute on input element actively, so we dont have things like pattern=\"undefined\" on the native element.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "attribute"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "BindData",
          "description": "Bind a entity field to the input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 7
        },
        "end": {
          "line": 81,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Helper"
    }
  ]
}
