{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`hp-35` is a declarative rpn calculator component.\n\nsee https://hansklav.home.xs4all.nl/rpn/\nhttp://h10032.www1.hp.com/ctg/Manual/c01579350",
      "summary": "calculator component",
      "path": "packages/furo-math/furo-hp-35.js",
      "properties": [
        {
          "name": "x",
          "type": "number | null | undefined",
          "description": "current x",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "y",
          "type": "number | null | undefined",
          "description": "current y",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 25,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "z",
          "type": "number | null | undefined",
          "description": "current z",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 8
            },
            "end": {
              "line": 29,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "t",
          "type": "number | null | undefined",
          "description": "current t",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "stack",
          "type": "Array | null | undefined",
          "description": "the stack.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "radMode",
          "type": "boolean | null | undefined",
          "description": "Set to true to use rad, default is deg",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 41,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_PIdivby180",
          "type": "number | null | undefined",
          "description": "so we dont have to calculate Math.PI / 180  every time\nused to calculate rad from angle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 8
            },
            "end": {
              "line": 46,
              "column": 61
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0.017453292519943295"
        }
      ],
      "methods": [
        {
          "name": "_stackchange",
          "description": "publish the stack",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enter",
          "description": "Enter a number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateXYZT",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "swap",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "rot",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "roll",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "add",
          "description": "Process an addition",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "substract",
          "description": "Process an addition",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "sqrt",
          "description": "Perform square root operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "ln",
          "description": "Perform log operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "cos",
          "description": "Perform cos operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 198,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "sin",
          "description": "Perform sin operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "tan",
          "description": "Perform tan operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "abs",
          "description": "Perform abs operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "reciprocal",
          "description": "Perform reciprocal operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "exp",
          "description": "Perform exp operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "xroot",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 305,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "multiply",
          "description": "Process a multiplication",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "pow",
          "description": "Process power",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 345,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "divide",
          "description": "Process a division",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "clear",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 2
        },
        "end": {
          "line": 374,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "ForthStack",
      "name": "FuroHp35",
      "attributes": [
        {
          "name": "x",
          "description": "current x",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 8
            },
            "end": {
              "line": 21,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "y",
          "description": "current y",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 8
            },
            "end": {
              "line": 25,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "z",
          "description": "current z",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 8
            },
            "end": {
              "line": 29,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "t",
          "description": "current t",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "stack",
          "description": "the stack.",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 58
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "rad-mode",
          "description": "Set to true to use rad, default is deg",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 41,
              "column": 45
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "stackchange",
          "description": "Fired when something in stack changes\ndetail payload:",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "x-changed",
          "description": "Fired when the `x` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "y-changed",
          "description": "Fired when the `y` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "z-changed",
          "description": "Fired when the `z` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "t-changed",
          "description": "Fired when the `t` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "stack-changed",
          "description": "Fired when the `stack` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-hp-35"
    }
  ]
}
