{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "Todo Describe and explain env",
      "summary": "",
      "path": "packages/framework/environment.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 7
        },
        "end": {
          "line": 6,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Env"
    },
    {
      "description": "Todo Describe and explain",
      "summary": "",
      "path": "packages/framework/i18n.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "registerResBundle",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "bundle"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "t",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key"
            }
          ]
        },
        {
          "name": "n",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key"
            },
            {
              "name": "num"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 6,
          "column": 7
        },
        "end": {
          "line": 21,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "i18n"
    },
    {
      "description": "Todo Describe and explain",
      "summary": "",
      "path": "packages/framework/system.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "registerEnv",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 10,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "section"
            },
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "registerApiServices",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "services"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "registerApiTypes",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "types"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 6,
          "column": 7
        },
        "end": {
          "line": 20,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Init"
    },
    {
      "description": "Todo Describe and explain SYS",
      "summary": "",
      "path": "packages/framework/system.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "setLocale",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 33,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Sys"
    },
    {
      "description": "We differ themeing and styling. *Themes* are in regular a rewrite of the components css and can contain style vars. We do not use mixins as long they are not \"standard\". *Styles* are used to set style vars like `--primary-color`. They give you the possibility to configure your themes in a simple way. Components which are using theming, give you *full control* over the css.\n\nIt is recommended to keep the original style vars when writing a theme set, this gives you the possibility to change themes, without the need to style them again.\n\n## register a themeset\nYou have to register the desired themeset, before your app starts. Otherwise the default themeset will be applied.\nThe best way is to do it in your `index.html`.\n\n```\n<script type=\"module\">\nimport {Init,Sys, Theme} from \"@furo/framework\";\nimport {MyThemeset} from \"./custom/themeset\"\nTheme.registerThemeset(MyThemeset);\n...\n```\n\n\n## Apply themeing your components\nApplying a theme to a component can be achieved by:\n\n```\nimport {Theme} from \"@furo/framework/theme\"\n\n\n// @private\n// @return {CSSResult}\nstatic get styles() {\n\nreturn Theme.getThemeForComponent(this.name) || css`\n   :host {\n       height: 100%;\n   }\n   side-navigation {\n       background-color: var(--nav-color);\n   }\n`\n}\n\n```\n\nto apply theming to your main app:\n\n```js\nimport {Theme} from \"@furo/framework/theme\"\n\n\n\n// @private\n// @return {CSSResult}\nstatic get styles() {\n   let theme = Theme.getThemeForComponent(this.name);\n   if (theme) {\n       return [theme, Styling.theme]\n   } else {\n       // language=CSS\n       return [css`\n           :host {\n               display: block;\n               height: 100vh;\n               overflow: hidden;\n           }\n       `, Styling.theme]\n   }\n}\n\n```\n\n##Writing a themeset\nJust watch at the example in [themeset.js](./themes/default_theme.js).",
      "summary": "",
      "path": "packages/framework/theme.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "getThemeForComponent",
          "description": "Get the theme for the component if it exists",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 1
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "componentName"
            }
          ],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "registerThemeset",
          "description": "Register a themeset",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 1
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "theme"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 75,
          "column": 7
        },
        "end": {
          "line": 93,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Theme"
    }
  ]
}
