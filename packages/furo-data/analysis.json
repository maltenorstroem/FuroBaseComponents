{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-api-fetch`\n\nfuro-api-fetch can be used for network requests via FETCH API\n\n```html\n<furo-api-fetch ƒ-invoke-request=\"\" ƒ-abort-request=\"\"></furo-api-fetch>\n```",
      "summary": "fetch data from network",
      "path": "src/furo-api-fetch.js",
      "properties": [
        {
          "name": "lastRequest",
          "type": "Object",
          "description": "LastRequest's response.\n\nNote that lastResponse is set when ongoing request finishes, so if loading is true,\nthen lastResponse will correspond to the result of the previous request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "invokeRequest",
          "description": "Sends a HTTP request to the server",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Request",
              "description": "(The Request interface of the Fetch API represents a resource request.) https://developer.mozilla.org/en-US/docs/Web/API/Request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "abortRequest",
          "description": "Aborts a pending request\nYou have to submit an AbortController",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "controller",
              "type": "AbortController",
              "description": "(The AbortController interface represents a controller object that allows you to abort one or more DOM requests as and when desired.)\nhttps://developer.mozilla.org/en-US/docs/Web/API/AbortController"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_executeRequest",
          "description": "Requests are made via the Fetch API if possible.\nFallback XMLHttpRequest\n\n**payload** request object",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_reworkRequest",
          "description": "Errorhandling according to Google rest-api-v3 Status Codes\n(https://developers.google.com/maps-booking/reference/rest-api-v3/status_codes)\n\nDispatches event `response-error` and a specific error event with status code",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parseResponse",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 354,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "response"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 355,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroApiFetch",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "fatal-error",
          "description": "Requests are made via the Fetch API if possible.\nFallback XMLHttpRequest\n\n*payload** request object",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-aborted",
          "description": "Fired when a request was canceled.\nPayload: request",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-started",
          "description": "Fired when a request is sent.\nPayload: request",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response",
          "description": "Fired when a response is received.\nHere you will get the parsed response\nFormat depends on request header `content-type`\nsupported types:\n- text/plain\n- application/json\n- image/jpeg (Blob)\n- application/octet-stream (ArrayBuffer)\n- application/pdf (Blob)\n\nPayload: parsed response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-error",
          "description": "Fired when an error has occoured.\nThis is a general error event. The specific error events are fired additionally.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-error-[status-code]",
          "description": "Fired when an error has occoured.\nThis is a specific error event.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-raw",
          "description": "Fired when a response is received.\nHere you will get the raw response object\nPayload: Raw response",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-api-fetch"
    },
    {
      "description": "`furo-collection-agent` is an interface component to handle collection requests. It helps you with paginating collection data.\n\n\n\n\nHow to use:\n```html\n<furo-collection-agent ƒ-hts-in=\"--x\"\n                     service=\"\"\n                     ƒ-prev-page=\"\"\n                     ƒ-next-page=\"\"\n                     ƒ-last-page=\"\"\n                     ƒ-first-page=\"\"\n                     ƒ-list=\"--triggerGetCollection\"\n                     ƒ-hts-in=\"--hts\"\n                     list-on-hts-in",
      "summary": "",
      "path": "src/furo-collection-agent.js",
      "properties": [
        {
          "name": "filter",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "The service name. Like ProjectService",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "pageSize",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 56
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "fields",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "orderBy",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 54
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "view",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "listOnHtsIn",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 65
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachListeners",
          "description": "Attaches temporary listeners to fire load-success, load-fail, delete-success,...",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventPrefix"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setFields",
          "description": "Partielle Repräsentation\nhttps://cloud.google.com/apis/design/design_patterns#partial_response\n\netwas seltsam, aber google sieht hier $fields vor. Wird aber nicht so verwendet",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fields"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOrderBy",
          "description": "Sortierreihenfolge\nhttps://cloud.google.com/apis/design/design_patterns#sorting_order\n\nTo avoid sql injection errors we do not send sql like syntax!\n\norder-by=\"foo,-bar\"  means foo asc and bar desc",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearFilter",
          "description": "clear filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setFilter",
          "description": "Filtern  [[\"user\",\"eq\",\"12345\"], [\"abgeschlossen\",\"eq\", true]]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filterstring"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setPageSize",
          "description": "Sets pagination size in the List request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateQp",
          "description": "Update query params\na qp like {\"active\":true} will just update the qp *active*\n\nIf the current value of the qp is not the same like the injected value, a qp-changed event will be fired",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "qp"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearQp",
          "description": "clear the query params that you have setted before",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_makeRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "link"
            },
            {
              "name": "body"
            }
          ]
        },
        {
          "name": "_checkServiceAndHateoasLinkError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 404,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rel"
            },
            {
              "name": "serviceName"
            }
          ],
          "return": {
            "type": "(undefined | object)"
          }
        },
        {
          "name": "_followRelService",
          "description": "If HATEOAS is present, the wire --triggerLoad is fired with the\ncorresponding request object as payload.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 2
            },
            "end": {
              "line": 422,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rel"
            },
            {
              "name": "serviceName"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "list",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 427,
              "column": 2
            },
            "end": {
              "line": 429,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "load",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 436,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "search",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 2
            },
            "end": {
              "line": 445,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "term"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "first",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "prev",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "next",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 2
            },
            "end": {
              "line": 466,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "last",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateInternalHTS",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 475,
              "column": 2
            },
            "end": {
              "line": 499,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ]
        },
        {
          "name": "htsIn",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 501,
              "column": 2
            },
            "end": {
              "line": 521,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 523,
              "column": 2
            },
            "end": {
              "line": 543,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 544,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCollectionAgent",
      "attributes": [
        {
          "name": "filter",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "service",
          "description": "The service name. Like ProjectService",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "page-size",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 56
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "fields",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 47
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "order-by",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 127,
              "column": 54
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "view",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 45
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "list-on-hts-in",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 65
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ALL_BUBBLING_EVENTS_FROM_furo-api-fetch",
          "description": "ALL_BUBBLING_EVENTS_FROM_furo-api-fetch\n\nAll bubbling events from [furo-api-fetch](furo-api-fetch) will be fired, because furo-collection-agent uses furo-api-fetch internally.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "filter-changed",
          "description": "filter-changed\nFired when filter was updated with ƒ-set-filter\ndetail payload:",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hts-injected",
          "description": "hts-injected\nFired when hateoas is updated\ndetail payload: Hateoas links",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hts-updated",
          "description": "hts-updated\nFired when hateoas is updated from response\ndetail payload: {Array|HATEOAS}",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "qp-changed",
          "description": "qp-changed\nFired when query params changed\ndetail payload: qp",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-hts-updated",
          "description": "response-hts-updated\nFired when\ndetail payload: hts",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-collection-agent"
    },
    {
      "description": "`furo-custom-method`\ninterface component to handle custom methods",
      "summary": "interface component to handle custom methods",
      "path": "src/furo-custom-method.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "Setze den Service",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Name der Methode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "bindRequestData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dataObject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_makeRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "link"
            },
            {
              "name": "dataObject"
            }
          ]
        },
        {
          "name": "_checkServiceAndHateoasLinkError",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rel"
            },
            {
              "name": "serviceName"
            }
          ]
        },
        {
          "name": "trigger",
          "description": "trigger the method with respect for binded-requset-object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "triggerEmpty",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "triggerWithBody",
          "description": "trigger the method with data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "body"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "htsIn",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-custom-method",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCustomMethod",
      "attributes": [
        {
          "name": "service",
          "description": "Setze den Service",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "Name der Methode",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 47
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "hts-updated",
          "description": "hts-updated\nFired when\ndetail payload:",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-custom-method",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-object` gives you a object which is built based on the **type** spec.\nThe types must be available in the {Env}, learn more about setting up the environment in the guide.\n\nThe data will mostly be used in a [data-ui]/(../../data-input/doc) component or in component that yoh build, which contains one or more of them.\n\n`furo-data-object` receives its data regularly from a [collection-aget](furo-collection-agent) or a  [entity-aget](furo-entity-agent).\nBut you can also send json data which is formed like the raw-data of this type.\n\n`furo-data-object` will not do any validation or data manipulation neither will send the data. It is just responsible to\ntransform incomming data to an object and vice versa. You can access the manipulated data structure on the property\n`.data.rawData` with javascript (if needed).\n\n```html\n <!-- The furo-data-object will send a initial dataObject of type project.Project on @-response-ready -->\n <furo-data-object type=\"project.Project\" ƒ-inject-raw=\"--response(*.data)\" @-object-ready=\"--dataObject\"></furo-data-object>\n\n <!-- The furo-entity-agent will fetch the data from ProjectService and pass it in @-response to the furo-data-object.  -->\n <furo-entity-agent service=\"ProjectService\" ƒ-save=\"--saveClicked\" ƒ-bind-request-data=\"--dataObject\" @-response=\"--response\" ></furo-entity-agent>\n```",
      "summary": "Typed data object",
      "path": "src/furo-data-object.js",
      "properties": [
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "The name of the type you want to use. The type must be registered in Env",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "json",
          "type": "?",
          "description": "get the data from the data object as raw json\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "injectRaw",
          "description": "inject a raw data response from the corresonding agent.\n\nInput may look something like this:\n\n**Entity data**\n```json\n {data:{},links:[],meta{}}\n```\n\n**Collection data**\n```json\n {data:{},links:[],meta{},entities:[]}\n```",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "jsonObj"
            }
          ]
        },
        {
          "name": "validateAllFields",
          "description": "Triggers the validation of all fields in the data object.\n\nUse this before you submit some data to a server.\n\nWill cause a `data-object-became-valid` or `data-object-became-invalid` and a validation-success or validation-failed event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "Reset the model to the last injected state.\n\nTo set the model to the initial state use init",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "init",
          "description": "Sets the model to an initial state according to the given type.\n\nTo reset changed data to the last injected state, please use reset();",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 148,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkType",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-data-object",
          "description": "Basic usage"
        },
        {
          "url": "demo-furo-data-object-validator",
          "description": "object validator demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 7
        },
        "end": {
          "line": 283,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroDataObject",
      "attributes": [
        {
          "name": "type",
          "description": "The name of the type you want to use. The type must be registered in Env",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "data-changed",
          "description": "data-changed\nFired when data in furo-data-object has changed\n\nThis event fires a lot, consider using a de-bounce with the event.\n\n*detail payload:** {Object|CollectionNode}\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-changed-after-inject",
          "description": "data-changed-after-inject\nFired when data in furo-data-object has changed after injectRaw is complete\n\nThis event fires a lot, consider using a de-bounce with the event.\n\n*detail payload:** {Object|CollectionNode}\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-injected",
          "description": "data-injected\nFired when injected data was processed.\n\n*detail payload**: {Object|EntityNode} reference to entity\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-object-became-invalid",
          "description": "data-object-became-invalid\nFired when the data object switches from ininvalid to invalid state\n\n*detail payload**: {Object|EntityNode} reference to entity\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-object-became-valid",
          "description": "data-object-became-valid\nFired when the data object switches from invalid to valid state\n\n*detail payload**: {Object|EntityNode} reference to entity\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "field-value-changed",
          "description": "field-value-changed\nFired when a field has changed\ndetail payload: {Object} the field node",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "object-ready",
          "description": "object-ready\nFired when the object is built (based on the type).\n\n*detail payload:** A EntityNode object\n\n*bubbles**",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "validation-failed",
          "description": "validation-failed\nFired when validation results in a invalid state\ndetail payload: DataObject",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "validation-success",
          "description": "validation-success\nFired when validation results in a valid state\ndetail payload: DataObject",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-object",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-deep-link`\nResolve deep links HATEOAS based on the query params and the selected service.\n\n*Deeplink inside of a furo-page*\n```html\n<furo-deep-link service=\"TaskService\" ƒ-qp-in=\"--pageQueryChanged(*.query)\" @-hts-out=\"--serviceHTS\"></furo-deep-link>\n```\n\nServices must be registered in the Env:\n\n```html\nimport {Services,Types} from \"./apiConfig.js\"\nInit.registerApiServices(Services);\nInit.registerApiTypes(Types);\n```\nUsually this is done in your src/configs/init.js",
      "summary": "Resolve deep links HATEOAS based on  query params",
      "path": "src/furo-deep-link.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "Set the service name like `TaskService`.\n\nServices must be registered before.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_buildHTS",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "qp"
            },
            {
              "name": "service"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "qpIn",
          "description": "Furo-deep-link consumes a object literal with key value pairs.\n\nThis can come from the `*.query` part of an event from furo-location.\n\nOr from a furo-pages wire.\n\nRelevant wires from furo-pages:\n- --pageQueryChanged(*.query)\n- --pageActivated(*.query)\n- --pageHashChanged(*.query)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "queryParams"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "Evaluates hts. Use qpIn(qp) if you have a qp object in your event.detail\nThis method have no effect as long _qp is not set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setService",
          "description": "Sets the service by wire",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "serviceName"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 167,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroDeepLink",
      "attributes": [
        {
          "name": "service",
          "description": "Set the service name like `TaskService`.\n\nServices must be registered before.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "hts-out",
          "description": "hts-out\nFired when hateoas is available\n\n```json\n[\n   {\n       \"rel\": \"list\",\n       \"href\": \"/api/mockdata/tasks/list.json\",\n       \"method\": \"GET\",\n       \"service\": \"TaskService\"\n     },\n   {\n       \"rel\": \"create\",\n       \"href\": \"api.otherhost.com/mockdata/tasks\",\n       \"method\": \"PUT\",\n       \"service\": \"TaskService\"\n     }\n   ]\n\n```\n\ndetail payload: {[]Links} Array of hateoas links",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-deep-link",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-data-emmiter`\n emits/fires the value from a data-object.\n\n ```html\n  <furo-data-emmiter\n       ƒ-trigger=\"--jsonDataRequested\"\n       ƒ-bind-data=\"--dataObject\"",
      "summary": "",
      "path": "src/furo-data-emmiter.js",
      "properties": [],
      "methods": [
        {
          "name": "bindData",
          "description": "Bind a data object. The trigger method will not fire until an object was bounded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 25,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "Read .value of the bounded data object and emit data as json object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDataEmmiter",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "data",
          "description": "data\nFired when trigger was called and data binding was done\ndetail payload: json data of a data object",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-data-emmiter"
    },
    {
      "description": "`furo-entity-agent` is an interface component to handle entity requests. It analyzes the hateoas data.\n\nIf you want to send all data on PUT (without filtering readonly fields) set `Env.api.sendAllDataOnMethodPut = true;`",
      "summary": "interface component to handle entity requests",
      "path": "src/furo-entity-agent.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "Setze den Service",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "loadOnHtsIn",
          "type": "boolean | null | undefined",
          "description": "triggers a load when link rel=\"self\" is in the injected hts (after hts-injected is fired)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 65
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "bindRequestData",
          "description": "Binds a furo-data-object type. Use this if you want save data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dataObject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_prepareRequestPaylod",
          "description": "Prepare request body depending from method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "link"
            },
            {
              "name": "dataObject"
            }
          ]
        },
        {
          "name": "_makeRequest",
          "description": "eslint-disable-next-line no-unused-vars",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "link"
            },
            {
              "name": "dataObject"
            },
            {
              "name": "abortController"
            }
          ]
        },
        {
          "name": "_getFieldMask",
          "description": "Creates an array with the path information of the object attributes (deep dive)\n[{\"paths:\" \"attr1\"}, {\"paths:\" \"attr2.sub_attr\"}]",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "_flattenObject",
          "description": "Object flattening method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "{}"
          }
        },
        {
          "name": "_checkServiceAndHateoasLinkError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 304,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rel"
            },
            {
              "name": "serviceName"
            }
          ],
          "return": {
            "type": "(undefined | object)"
          }
        },
        {
          "name": "load",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "delete",
          "description": "delete the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 357,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "save",
          "description": "loads the entity if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 395,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "put",
          "description": "saves the entity with method put if hts is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 421,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "create",
          "description": "creating the entity if hts rel=\"create\" is available",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 438,
              "column": 2
            },
            "end": {
              "line": 447,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_attachListeners",
          "description": "Attaches temporary listeners to fire load-success, load-fail, delete-success,...",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 2
            },
            "end": {
              "line": 508,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventPrefix"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateInternalHTS",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 510,
              "column": 2
            },
            "end": {
              "line": 533,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ]
        },
        {
          "name": "htsIn",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 535,
              "column": 2
            },
            "end": {
              "line": 556,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 576,
              "column": 2
            },
            "end": {
              "line": 589,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-entity-agent",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 590,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroEntityAgent",
      "attributes": [
        {
          "name": "service",
          "description": "Setze den Service",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "load-on-hts-in",
          "description": "triggers a load when link rel=\"self\" is in the injected hts (after hts-injected is fired)",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 65
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "create-failed",
          "description": "create-failed\nFired when creating was not successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "create-success",
          "description": "create-success\nFired when creating was successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "delete-failed",
          "description": "delete-failed\nFired when load was not successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "delete-success",
          "description": "delete-success\nFired when load was successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hts-injected",
          "description": "hts-injected\nFired when hateoas is updated\ndetail payload: Hateoas links",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hts-updated",
          "description": "hts-updated\nFired when hateoas is updated from response\ndetail payload: {Array|HATEOAS}",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "load-failed",
          "description": "load-failed\nFired when load was not successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "load-success",
          "description": "load-success\nFired when load was successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "put-failed",
          "description": "put-failed\nFired when update was not successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "put-success",
          "description": "put-success\nFired when update was successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "response-hts-updated",
          "description": "response-hts-updated\nFired when\ndetail payload: hts",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "save-failed",
          "description": "save-failed\nFired when load was not successful\ndetail payload: response",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "save-success",
          "description": "save-success\nFired when load was successful\ndetail payload: response",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-entity-agent",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "Use this component to interact with fields from an furo-data-object.\n\nYou can set the field value or listen to changes of a field.",
      "summary": "interact with single field of a data object",
      "path": "src/furo-entity-field.js",
      "properties": [
        {
          "name": "value",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 2
            },
            "end": {
              "line": 27,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setValue",
          "description": "Set the value of the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the date-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroEntityField",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when\ndetail payload:",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-entity-field",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "Placeholder component to describe nested filters\n\n`furo-filter-or` is used with `furo-filter-container`, `furo-filter-and` and `furo-filter-and` to build the filter string.\n With `furo-filter-or` you will set the bracket around the items inside.\n\n\n```html\n<!-- this will result in a filter like ((description OR start) AND (end OR cost_limit))\n<furo-filter-container>\n <furo-filter-and>\n   <`furo-filter-or`>\n     <furo-filter-field field=\"description\" is=\"in\" ƒ-set-value=\"--defaultChanged\"></furo-filter-field>\n     <furo-filter-field field=\"start\" is=\"gte\" ƒ-set-value=\"--startChanged\"></furo-filter-field>\n   </furo-filter-or>\n   <furo-filter-or>\n     <furo-filter-field field=\"end\" is=\"lte\" ƒ-set-value=\"--endChanged\"></furo-filter-field>\n     <furo-filter-field field=\"cost_limit\" is=\"eq\" ƒ-set-value=\"--costlimitChanged\"></furo-filter-field>\n   </furo-filter-or>\n </furo-filter-and>\n</furo-filter-container>\n```",
      "summary": "Placeholder component to describe nested filters",
      "path": "src/furo-filter-container.js",
      "properties": [],
      "methods": [
        {
          "name": "_appendAnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "filterArray"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendOr",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "filterArray"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_scanfilterFields",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "filterArray"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-filter",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 147,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroFilterContainer",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "filter-changed",
          "description": "filter-changed\nFired when filter changed\ndetail payload: filter",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "filter-cleared",
          "description": "filter-cleared\nFired when filter is empty\ndetail payload: none",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-filter-container",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-filter-field` is used with `furo-filter-container`, `furo-filter-and` and `furo-filter-and` to build the filter string.\n With `furo-filter-field` you will set the field, operator and value of a filter item.\n\n\n```html\n<!-- this will result in a filter like ((description OR start) AND (end OR cost_limit))\n<furo-filter-container>\n <furo-filter-and>\n   <`furo-filter-or`>\n     <furo-filter-field field=\"description\" is=\"in\" ƒ-set-value=\"--defaultChanged\"></furo-filter-field>\n     <furo-filter-field field=\"start\" is=\"gte\" ƒ-set-value=\"--startChanged\"></furo-filter-field>\n   </furo-filter-or>\n   <furo-filter-or>\n     <furo-filter-field field=\"end\" is=\"lte\" ƒ-set-value=\"--endChanged\"></furo-filter-field>\n     <furo-filter-field field=\"cost_limit\" is=\"eq\" ƒ-set-value=\"--costlimitChanged\"></furo-filter-field>\n   </furo-filter-or>\n </furo-filter-and>\n</furo-filter-container>\n```\n\n\n ## Fitler operators\n\n| Operator          | Meaning                            |\n|:----------------- |:---------------------------------- |\n| lt  oder <        | lower than |\n| lte oder <=       | lower than or equal |\n| gt  oder >        | greater than |\n| gte oder >=       | greater than or equal |\n| eq  oder =        | equal |\n|  **more operators**     ||\n| in                | in |\n| btw               | between |\n| btwe              | between but including the values  |\n| is null           | is null, true,false |\n| sw                | starts with |\n| ew                | ends with |\n| con               | contains |\n| **negations**     ||\n| !eq               | not equal |\n| !btw              | outside, not between |\n| !null             | not null |\n| !con              | does not contain |\n| !sw               | does not starts with |\n| !ew               | does not ends with |\n| !in               | not in |",
      "summary": "set a filter field",
      "path": "src/furo-filter-field.js",
      "properties": [
        {
          "name": "is",
          "type": "string | null | undefined",
          "description": "Defines the operator.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "field",
          "type": "string | null | undefined",
          "description": "Defines the field you want to filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Defines the value to filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "setValue",
          "description": "Set the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyChanges",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 113,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-filter",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 128,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroFilterField",
      "attributes": [
        {
          "name": "field",
          "description": "Defines the field you want to filter",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Defines the value to filter",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "furo-filter-changed",
          "description": "furo-filter-changed\nFired when something changed\ndetail payload:",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-filter-field",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-rel-exists`\nChecks if a rel exists in a hateaos Link array",
      "summary": "checks for a specific rel",
      "path": "src/furo-rel-exists.js",
      "properties": [
        {
          "name": "rel",
          "type": "string | null | undefined",
          "description": "Name of the rel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "define the type if you want a specific check on the type also",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "inject",
          "description": "Inject a HTS Link Array to receive a `rel-exist` or a `rel-dont-exist` event.\n\ninject returns true for existing links and false for non existing links.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "linkArray"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroRelExists",
      "attributes": [
        {
          "name": "rel",
          "description": "Name of the rel",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 27
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "type",
          "description": "define the type if you want a specific check on the type also",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "furo-rel-exists",
          "description": "furo-rel-exists\nFired when rel exists in linkArray\ndetail payload: {Object} Hateoas Link",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "rel-dont-exist",
          "description": "rel-dont-exist\nFired when rel does not exists in linkArray\ndetail payload: void",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-rel-exists"
    },
    {
      "description": "Converts hateoas to queryParams, which is useful for routing with app-flow\n\n\n```html\n <furo-reverse-deep-link\n     service=\"TaskService\"\n     rel=\"self\" @-converted=\"--queryParams\"\n     ƒ-convert=\"--rawEntityOrCollection, --linksArray, --linkObject\"\n ></furo-reverse-deep-link>\n```",
      "summary": "create query param object from HATEOAS",
      "path": "src/furo-reverse-deep-link.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "Name of service",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rel",
          "type": "string | null | undefined",
          "description": "Optional rel to convert.\n\nNot needed if you inject a link object.\n\nIf you insert an entity rel self is taken. If you insert a collection, rel list is used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "convert",
          "description": "converts the href of a LinkObject\n\nreturns Error on undefined service",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "description": "{object} rawEntity|rawCollection"
            }
          ],
          "return": {
            "type": "object",
            "desc": "Object with query params key value"
          }
        },
        {
          "name": "_convert",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "link"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroReverseDeepLink",
      "attributes": [
        {
          "name": "service",
          "description": "Name of service",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 31
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "rel",
          "description": "Optional rel to convert.\n\nNot needed if you inject a link object.\n\nIf you insert an entity rel self is taken. If you insert a collection, rel list is used.",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 27
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "converted",
          "description": "converted\nFired when input was converted\ndetail payload: {object} QueryParams",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-reverse-deep-link"
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "src/lib/RepeaterNode.js",
      "properties": [
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_transmitValue",
          "type": "?",
          "description": "Returns all not readonly field values with deep dive",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_deltaValue",
          "type": "?",
          "description": "Returns all modified field values with deep dive (! _pristine)",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 265,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_requiredValue",
          "type": "?",
          "description": "Returns required fields with all children which are modified or\nnot readonly",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "moveNode",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldIndex"
            },
            {
              "name": "newIndex"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reinit",
          "description": "resets the field to the initial _values from the spec",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "removeAllChildren",
          "description": "deletes all repeated fields on this node",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hasAncestorOfType",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "deleteNode",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__updateMetaAndConstraints",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "metaAndConstraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deleteChild",
          "description": "Deletes a repeated item by index",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addSilent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 315,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setInvalid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 2
            },
            "end": {
              "line": 326,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "add",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 2
            },
            "end": {
              "line": 346,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 7
        },
        "end": {
          "line": 347,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "EventTreeNode",
      "name": "RepeaterNode"
    },
    {
      "description": "",
      "summary": "",
      "path": "src/lib/Helper.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "defaultForType",
          "description": "get the default value of a type,  according to https://developers.google.com/protocol-buffers/docs/proto3#default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 2,
              "column": 2
            },
            "end": {
              "line": 25,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "isNumericType",
          "description": "checks if a type is numeric (usefull when you want to compare min or max constraints)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "isScalarType",
          "description": "checks if a type is scalar",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 0,
          "column": 7
        },
        "end": {
          "line": 83,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Helper"
    },
    {
      "description": "A class to validate constraints on numeric types",
      "summary": "",
      "path": "src/lib/ValidatorNumericTypes.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "validateConstraints",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "Promise.<unknown>"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 97,
          "column": 1
        }
      },
      "privacy": "private",
      "name": "ValidatorNumericTypes"
    },
    {
      "description": "A class to validate constraints on type <code>string</code",
      "summary": "",
      "path": "src/lib/ValidatorDefaultTypes.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "validateConstraints",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "Promise.<unknown>"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 81,
          "column": 1
        }
      },
      "privacy": "private",
      "name": "ValidatorDefaultTypes"
    },
    {
      "description": "A class to validate constraints on type <code>google.type.Date</code",
      "summary": "",
      "path": "src/lib/ValidatorGoogleTypeDate.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "validateConstraints",
          "description": "checks constraints",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 102,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "Promise.<unknown>"
          }
        },
        {
          "name": "isEmpty",
          "description": "checks if type date is empty",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "desc": "boolean"
          }
        },
        {
          "name": "createDateFromType",
          "description": "creates a JS UTC Date from google.type.Date struct",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "Date"
          }
        },
        {
          "name": "createDateFromConstraint",
          "description": "creates a JS midnight UTC Date from furo/specs constraints",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "Date"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 145,
          "column": 1
        }
      },
      "privacy": "private",
      "name": "ValidatorGoogleTypeDate"
    },
    {
      "description": "A class to validate constraints on type <code>google.type.Money</code",
      "summary": "",
      "path": "src/lib/ValidatorGoogleTypeMoney.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "validateConstraints",
          "description": "checks field constraints",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "Promise.<unknown>"
          }
        },
        {
          "name": "isEmpty",
          "description": "checks if type money is empty",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 2
            },
            "end": {
              "line": 121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "desc": "boolean"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 122,
          "column": 1
        }
      },
      "privacy": "private",
      "name": "ValidatorGoogleTypeMoney"
    },
    {
      "description": "",
      "summary": "",
      "path": "src/lib/FieldNode.js",
      "properties": [
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 2
            },
            "end": {
              "line": 491,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "defaultvalue",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_transmitValue",
          "type": "?",
          "description": "Returns all not readonly fields values with deep dive\nMandatory fields (required is true) MUST always be transmitted\n!readonly || required",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 499,
              "column": 2
            },
            "end": {
              "line": 534,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_deltaValue",
          "type": "?",
          "description": "Returns all modified fields values with deep dive (! _pristine)\nmodified || required",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 541,
              "column": 2
            },
            "end": {
              "line": 575,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_requiredValue",
          "type": "?",
          "description": "Returns required fields with all children which are modified or\nnot readonly\n! readonly || req || modified",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 583,
              "column": 2
            },
            "end": {
              "line": 606,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "createField",
          "description": "create a field in a FieldNode, this is useful when using map<string,something>\n  set the value option to init with values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "description": "{\"fieldName\":\"name\",\"type\":\"string\", \"spec\":{..}}  spec is optional"
            }
          ]
        },
        {
          "name": "_hasAncestorOfType",
          "description": "infinite recursive element protection",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "moveNode",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldIndex"
            },
            {
              "name": "newIndex"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reinit",
          "description": "resets the field to the initial values from the spec",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createVendorType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkConstraints",
          "description": "check the validity against spec and meta",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 330,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "__updateMetaAndConstraints",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 386,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "metaAndConstraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createAnyType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 2
            },
            "end": {
              "line": 407,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateKeyValueMap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 2
            },
            "end": {
              "line": 431,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            },
            {
              "name": "spec"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deleteNode",
          "description": "deletes the fieldnode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 2
            },
            "end": {
              "line": 449,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearInvalidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 608,
              "column": 2
            },
            "end": {
              "line": 633,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setInvalid",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 640,
              "column": 2
            },
            "end": {
              "line": 661,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error",
              "description": "{\"description\":\"error description / message\"} => used in data-input-type for hints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toString",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 663,
              "column": 2
            },
            "end": {
              "line": 668,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 7
        },
        "end": {
          "line": 669,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "EventTreeNode",
      "name": "FieldNode"
    },
    {
      "description": "EntityNode is usually the root node of an eventTree",
      "summary": "",
      "path": "src/lib/DataObject.js",
      "properties": [
        {
          "name": "rawEntity",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "_value",
          "type": "*",
          "description": "Returns a json representation of your Data Object",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "value",
          "type": "*",
          "description": "Returns a json representation of your Data Object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "validateAllFields",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectRaw",
          "description": "Injecten eines raw models wie bspw body oder entity einer collection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rawEntity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "Resete zum letzten injected state zurück",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hasAncestorOfType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "init",
          "description": "Inits the EntityNode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getJson",
          "description": "Returns a json representation of your Data Object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "*"
          }
        },
        {
          "name": "_updateFieldValuesAndMetaFromRawEntity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__updateMetaAndConstraints",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "metaAndConstraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setInvalid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "error"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_initFieldsFromSpec",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "fieldSpec"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toString",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 295,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "EventTreeNode",
      "name": "DataObject"
    }
  ]
}
