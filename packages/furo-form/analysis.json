{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-button-bar`\n\nTags: form",
      "summary": "",
      "path": "packages/furo-form/furo-button-bar.js",
      "properties": [
        {
          "name": "_hasConnected",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 472,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 475,
              "column": 4
            },
            "end": {
              "line": 477,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "hasUpdated",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 478,
              "column": 4
            },
            "end": {
              "line": 480,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. If the Promise is rejected, an\nexception was thrown during the update.\n\nTo await additional asynchronous work, override the `_getUpdateComplete`\nmethod. For example, it is sometimes useful to await a rendered element\nbefore fulfilling this Promise. To do this, first await\n`super._getUpdateComplete()`, then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 547,
              "column": 4
            },
            "end": {
              "line": 549,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "hideNoRel",
          "type": "string | null | undefined",
          "description": "Hides element if condition is true\nOnly available with bindEntity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 63
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hideNotValid",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 69
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hidePristine",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 12
            },
            "end": {
              "line": 42,
              "column": 68
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableNoRel",
          "type": "string | null | undefined",
          "description": "Disables element if condition is true\nOnly available with bindEntity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 12
            },
            "end": {
              "line": 48,
              "column": 69
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableNotValid",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 49,
              "column": 75
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disablePristine",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 12
            },
            "end": {
              "line": 50,
              "column": 74
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 299,
              "column": 4
            },
            "end": {
              "line": 305,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 359,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestUpdate",
          "description": "This private version of `requestUpdate` does not access or return the\n`updateComplete` promise. This promise can be overridden and is therefore\nnot free to access.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 414,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 431,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_enqueueUpdate",
          "description": "Sets up the element to asynchronously update.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 435,
              "column": 4
            },
            "end": {
              "line": 471,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "performUpdate",
          "description": "Performs an element update. Note, if an exception is thrown during the\nupdate, `firstUpdated` and `updated` will not be called.\n\nYou can override this method to change the timing of updates. If this\nmethod is overridden, `super.performUpdate()` must be called.\n\nFor instance, to schedule updates to occur just before the next frame:\n\n```\nprotected async performUpdate(): Promise<unknown> {\n  await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n  super.performUpdate();\n}\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 497,
              "column": 4
            },
            "end": {
              "line": 527,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 528,
              "column": 4
            },
            "end": {
              "line": 531,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_getUpdateComplete",
          "description": "Override point for the `updateComplete` promise.\n\nIt is not safe to override the `updateComplete` getter directly due to a\nlimitation in TypeScript which means it is not possible to call a\nsuperclass getter (e.g. `super.updateComplete.then(...)`) when the target\nlanguage is ES5 (https://github.com/microsoft/TypeScript/issues/338).\nThis method should be overridden instead. For example:\n\n  class MyElement extends LitElement {\n    async _getUpdateComplete() {\n      await super._getUpdateComplete();\n      await this._myChild.updateComplete;\n    }\n  }",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 566,
              "column": 4
            },
            "end": {
              "line": 568,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 576,
              "column": 4
            },
            "end": {
              "line": 578,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 605,
              "column": 4
            },
            "end": {
              "line": 606,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Set the default value if any hide/disable attribute  or\nrel=\"\" attribute is set",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 111,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "adoptStyles",
          "description": "Applies styling to the element shadowRoot using the `static get styles`\nproperty. Styling will apply using `shadowRoot.adoptedStyleSheets` where\navailable and will fallback otherwise. When Shadow DOM is polyfilled,\nShadyCSS scopes styles and adds them to the document. When Shadow DOM\nis available but `adoptedStyleSheets` is not, styles are appended to the\nend of the `shadowRoot` to [mimic spec\nbehavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        },
        {
          "name": "bindEntity",
          "description": "Entity bind to control elements inside the bar.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disableAll",
          "description": "Disable all elements inside\nCan be used to disable during pending requests\ne.g. furo-entity-agent @-request-started until @-response or @-response-error",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enableAll",
          "description": "Enables all elements inside if check is true\nCan be used to enable after a request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateElements",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entity"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "_ensureClassProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "finalize",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 47,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 226,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's\n`converter` or `converter.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 235,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lib/updating-element.js",
            "start": {
              "line": 249,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_getUniqueStyles",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../lit-element/lit-element.js",
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "LitElement"
        }
      ],
      "demos": [
        {
          "url": "demo-furo-button-bar",
          "description": "Demo button bar"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 222,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroButtonBar",
      "attributes": [
        {
          "name": "hide-no-rel",
          "description": "Hides element if condition is true\nOnly available with bindEntity",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 63
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-not-valid",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 69
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-pristine",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 12
            },
            "end": {
              "line": 42,
              "column": 68
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-no-rel",
          "description": "Disables element if condition is true\nOnly available with bindEntity",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 12
            },
            "end": {
              "line": 48,
              "column": 69
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-not-valid",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 49,
              "column": 75
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-pristine",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 12
            },
            "end": {
              "line": 50,
              "column": 74
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-button-bar"
    },
    {
      "description": "`furo-collapsible-box` is a card which can be toggled to be open and closed\n\n```\n<furo-collapsible-box label=\"label\" open>\n <div>flex content in default slot</div>\n <div slot=\"context\">CTX on right side</div>\n</furo-collapsible-box>\n```",
      "summary": "collapsible box with head",
      "path": "packages/furo-form/furo-collapsible-box.js",
      "properties": [
        {
          "name": "_open",
          "type": "boolean",
          "description": "Indicates the collapse state, set the collapse state",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 14
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "iconOpen",
          "type": "string",
          "description": "The icon for the open state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"expand-more\""
        },
        {
          "name": "iconClosed",
          "type": "string",
          "description": "The icon for the closed state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"expand-less\""
        },
        {
          "name": "tabindex",
          "type": "number",
          "description": "https://developer.mozilla.org/de/docs/Web/HTML/Globale_Attribute/tabindex",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label der Collapsible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "secondaryText",
          "type": "string | null | undefined",
          "description": "Label der Collapsible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "openOnFocus",
          "type": "boolean | null | undefined",
          "description": "Opens the box on focus",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "closeOnBlur",
          "type": "boolean | null | undefined",
          "description": "Closes the box on blur (icon)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rememberState",
          "type": "boolean | null | undefined",
          "description": "reserved flag\ntodo implement remember component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 524,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 531,
              "column": 8
            },
            "end": {
              "line": 534,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 538,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 540,
              "column": 8
            },
            "end": {
              "line": 548,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 550,
              "column": 8
            },
            "end": {
              "line": 564,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 575,
              "column": 8
            },
            "end": {
              "line": 588,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 599,
              "column": 8
            },
            "end": {
              "line": 621,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 639,
              "column": 8
            },
            "end": {
              "line": 641,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "open",
          "description": "Opens the Box",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "close",
          "description": "closes the box",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "Toggles the box open/close",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "focus the box (focuses the icon)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 149,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 2
            },
            "end": {
              "line": 311,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-collapsible-box",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 312,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCollapsibleBox",
      "attributes": [
        {
          "name": "icon-open",
          "description": "The icon for the open state.",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "icon-closed",
          "description": "The icon for the closed state.",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 4
            },
            "end": {
              "line": 36,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "tabindex",
          "description": "https://developer.mozilla.org/de/docs/Web/HTML/Globale_Attribute/tabindex",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 4
            },
            "end": {
              "line": 41,
              "column": 17
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "label",
          "description": "Label der Collapsible",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "secondary-text",
          "description": "Label der Collapsible",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "open-on-focus",
          "description": "Opens the box on focus",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "close-on-blur",
          "description": "Closes the box on blur (icon)",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "remember-state",
          "description": "reserved flag\ntodo implement remember component",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "closed",
          "description": "closed\nFired when collapsible box was closed\n\ndetail payload: void",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened",
          "description": "opened\n\nFired when collapsible box was opened\n\ndetail payload: void",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "toggled",
          "description": "toggled\nFired when collapsible-box was toggled\ndetail payload: Boolean true for open, false for closed",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-collapsible-box",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-form-layouter`\n\nUse furo-form-layouter to structure your forms.\nIt is based on a grid system with the following properties:\n- full-width row (Standard)\n- two columns\n- four columns\n\nThe required variant is set using an attribute.\ne.g. two, four\n\n<furo-form-layouter></furo-form-layouter>\n\nTags: form",
      "summary": "Grid based form field row",
      "path": "packages/furo-form/furo-form-layouter.js",
      "properties": [
        {
          "name": "breakpointBig",
          "type": "string | null | undefined",
          "description": "Set custom breakpoints max. two values\nDefault: \"810,405\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 85
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "breakpointSmall",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 12
            },
            "end": {
              "line": 97,
              "column": 89
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "narrowFix",
          "type": "boolean | null | undefined",
          "description": "Set narrow-fix attribute to force\nthe layout analog to breakpoint big",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 12
            },
            "end": {
              "line": 106,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "narrowerFix",
          "type": "boolean | null | undefined",
          "description": "Set narrower-fix attribute to force\n1 column view (analog breakpoint small)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 115,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 524,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 538,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 540,
              "column": 8
            },
            "end": {
              "line": 548,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 550,
              "column": 8
            },
            "end": {
              "line": 564,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 575,
              "column": 8
            },
            "end": {
              "line": 588,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 599,
              "column": 8
            },
            "end": {
              "line": 621,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 639,
              "column": 8
            },
            "end": {
              "line": 641,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_checkSize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "width"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-form-layouter",
          "description": "Form Design Sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 213,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroFormLayouter",
      "attributes": [
        {
          "name": "breakpoint-big",
          "description": "Set custom breakpoints max. two values\nDefault: \"810,405\"",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 12
            },
            "end": {
              "line": 96,
              "column": 85
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "breakpoint-small",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 12
            },
            "end": {
              "line": 97,
              "column": 89
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "narrow-fix",
          "description": "Set narrow-fix attribute to force\nthe layout analog to breakpoint big",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 12
            },
            "end": {
              "line": 106,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "narrower-fix",
          "description": "Set narrower-fix attribute to force\n1 column view (analog breakpoint small)",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 115,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-form-layouter",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "Form container with integrated activity indicator and three slots.\n\n`furo-form`",
      "summary": "todo shortdescription",
      "path": "packages/furo-form/furo-form.js",
      "properties": [
        {
          "name": "headerText",
          "type": "string | null | undefined",
          "description": "Main title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "secondaryText",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 64
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasaction",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 50,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasmedia",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 524,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 538,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 540,
              "column": 8
            },
            "end": {
              "line": 548,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 550,
              "column": 8
            },
            "end": {
              "line": 564,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 575,
              "column": 8
            },
            "end": {
              "line": 588,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 599,
              "column": 8
            },
            "end": {
              "line": 621,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 639,
              "column": 8
            },
            "end": {
              "line": 641,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "startActivity",
          "description": "You can show a progress indicator while you have pending requests or work\nShows furo-loading-indicator-bar",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 30,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "stopActivity",
          "description": "Stop loading indicator\nHides furo-loading-indicator-bar",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-form",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 199,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroForm",
      "attributes": [
        {
          "name": "header-text",
          "description": "Main title",
          "sourceRange": {
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 58
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "secondary-text",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 64
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hasaction",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 50,
              "column": 47
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hasmedia",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-form",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`fd-input-row`",
      "summary": "Zweigespaltene Formularzeile",
      "path": "packages/furo-form/furo-input-row.js",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "description": "The label for the input row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 14
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"set the label!\""
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 524,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 531,
              "column": 8
            },
            "end": {
              "line": 534,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 538,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 540,
              "column": 8
            },
            "end": {
              "line": 548,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 550,
              "column": 8
            },
            "end": {
              "line": 564,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 575,
              "column": 8
            },
            "end": {
              "line": 588,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 599,
              "column": 8
            },
            "end": {
              "line": 621,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 639,
              "column": 8
            },
            "end": {
              "line": 641,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/furo-input-row.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 63,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroInputRow",
      "attributes": [
        {
          "name": "label",
          "description": "The label for the input row",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 21,
              "column": 14
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-input-row",
      "mixins": [
        "FBP"
      ]
    }
  ]
}
