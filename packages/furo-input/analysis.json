{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-button` displays a button.\n\n ```html\n <!-- Label can be set with attribute -->\n <furo-button label=\"Label\"></furo-button>\n\n <!-- Label can be set inside tag -->\n <furo-button>Label</furo-button>\n ```\n<sample-furo-button></sample-furo-button>",
      "summary": "a button",
      "path": "packages/furo-input/furo-button.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Beschriftung des buttons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Optional icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "danger",
          "type": "boolean | null | undefined",
          "description": "Set danger to true if it is dangerous to press this button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Set disabled to disable the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Focus the element automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "Give the button a \"box\" with shadow",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "unelevated",
          "type": "boolean | null | undefined",
          "description": "Give the button a \"box\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "outline",
          "type": "boolean | null | undefined",
          "description": "Give the button a \"border\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "primary",
          "type": "boolean | null | undefined",
          "description": "Sets the color to the primary color (--primary)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "secondary",
          "type": "boolean | null | undefined",
          "description": "Sets the color to the secondary color (--secondary)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "accent",
          "type": "boolean | null | undefined",
          "description": "Sets the color to the accent color (--accent)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "Livecycle method\nThis method is called, when the wires are ready.\nAnd triggers the --FBPready wire. This does *not* respect a lit updateComplete",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 536,
              "column": 8
            },
            "end": {
              "line": 539,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "focus",
          "description": "Set the focus to the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Disables the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Enables the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 2
            },
            "end": {
              "line": 369,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "furo-button-playground",
          "description": "Furo-button playground"
        },
        {
          "url": "demo-furo-button",
          "description": "basic usage"
        },
        {
          "url": "demo-furo-input-together",
          "description": "Different input elements together"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 370,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroButton",
      "attributes": [
        {
          "name": "label",
          "description": "Beschriftung des buttons",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Optional icon",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "danger",
          "description": "Set danger to true if it is dangerous to press this button",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Set disabled to disable the button",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Focus the element automatically",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "raised",
          "description": "Give the button a \"box\" with shadow",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 6
            },
            "end": {
              "line": 103,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "unelevated",
          "description": "Give the button a \"box\"",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "outline",
          "description": "Give the button a \"border\"",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "primary",
          "description": "Sets the color to the primary color (--primary)",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "secondary",
          "description": "Sets the color to the secondary color (--secondary)",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "accent",
          "description": "Sets the color to the accent color (--accent)",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-button",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-color-input`\n\n <furo-color-input label=\"Color\" hint=\"Press escape to clear\"></sample-furo-color-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Color input field",
      "path": "packages/furo-input/furo-color-input.js",
      "properties": [
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 99,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 167,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 535,
              "column": 2
            },
            "end": {
              "line": 556,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-color-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 558,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroColorInput",
      "attributes": [
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 6
            },
            "end": {
              "line": 124,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-color-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-checkbox`\n\nCheckbox input element which uses a native `<input type=\"checkbox\">` tag.\n\nCheckboxes allow the user to to make a binary choice, i.e. a choice between one of two possible mutually exclusive options.\n\n### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-checkbox></furo-checkbox>\n  </template>\n </furo-demo-snippet>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-checkbox-unselected-bg-color` | background color of the unchecked checkbox | `--background` | hex: #ffffff\n`--input-checkbox-unselected-border-color` | border color of the unchecked checkbox | `--on-background` | hex: #7E7E7E\n`--input-checkbox-unselected-hover-bg-color-rgb` | background color of the unchecked checkbox by hovering | `--on-background-rgb` with `--state-hover` opacity | rgba: 33, 33, 33, 0.04\n`--input-checkbox-unselected-focus-bg-color-rgb` | background color of the unchecked checkbox by focusing | `--on-background-rgb` with `--state-focus` opacity | rgba: 33, 33, 33, 0.12\n`--input-checkbox-unselected-active-bg-color-rgb` | background color of the unchecked checkbox by pressing | `--on-background-rgb` with `--state-active` opacity | rgba: 33, 33, 33, 0.10\n`--input-checkbox-selected-bg-color` | background color of the checked checkbox | `--primary` | hex: #6200FD\n`--input-checkbox-selected-hover-bg-color-rgb` | background color of the checked checkbox by hovering | `--primary-rgb`  with `--state-hover` opacity  | rgba: 76, 175, 80, 0.04\n`--input-checkbox-selected-focus-bg-color-rgb` | background color of the checked checkbox by focusing | `--primary-rgb`  with `--state-focus` opacity  | rgba: 76, 175, 80, 0.12\n`--input-checkbox-selected-active-bg-color-rgb` | background color of the checked checkbox by pressing | `--primary-rgb`  with `--state-active` opacity  | rgba: 76, 175, 80, 0.10\n`--input-checkbox-disabled-selected-bg-color` | background color of the checked disabled checkbox | `--on-background` | hex: #B9B9B9\n`--input-checkbox-disabled-selected-border-color-rgb` | border color of the checked disabled checkbox | `----on-background-rgb`  with `--state-disabled` opacity| rgba: 33, 33, 33, 0.38\n`--input-checkbox-disabled-selected-bg-color-rgb` | background color of the checked disabled checkbox | `----on-background-rgb`  with `--state-disabled` opacity| rgba: 33, 33, 33, 0.38\n`--input-checkbox-disabled-unselected-bg-color-rgb` | background color of the unchecked disabled checkbox | `--background-rgb`  with `--state-disabled` opacity| rgba: 238, 238, 238, 0.38\n`--input-checkbox-disabled-unselected-border-color` | border color of the unchecked disabled checkbox | `--on-background-rgb`  with `--state-disabled` opacity| rgba: 33, 33, 33, 0.38",
      "summary": "checkbox input",
      "path": "packages/furo-input/furo-checkbox.js",
      "properties": [
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "The value of checkbox with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "checked",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this checkbox is checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "focused",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this is focused.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "focus",
          "description": "Sets the focus on the checkbox.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "check",
          "description": "check the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uncheck",
          "description": "uncheck the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "toggle the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setValue",
          "description": "Sets the value for the checkbox\nThe value of checkbox with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v",
              "type": "boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 2
            },
            "end": {
              "line": 383,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-checkbox",
          "description": "Basic demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 384,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCheckbox",
      "attributes": [
        {
          "name": "value",
          "description": "The value of checkbox with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input checkbox",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 151,
              "column": 3
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "checked",
          "description": "A Boolean attribute which, if present, means this checkbox is checked.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "focused",
          "description": "A Boolean attribute which, if present, means this is focused.",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "checked",
          "description": "checked\nFired when the checkbox is checked\ndetail payload: {String} the text value",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unchecked",
          "description": "unchecked\nFired when the checkbox is unchecked\ndetail payload: {String} the text value",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the component\ndetail payload: {String} the text value",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-checkbox",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-checkbox-input`\n\nCheckbox input element which uses  `<furo-checkbox\">` element. In addition to that it has hint, label and error message\n\nCheckboxes allow the user to select multiple options from a set.\n\n### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-checkbox-input label=\"This is the Label\"></furo-checkbox-input>\n  </template>\n </furo-demo-snippet>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-label-color` | Color of the label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5",
      "summary": "checkbox input",
      "path": "packages/furo-input/furo-checkbox-input.js",
      "properties": [
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "The value of checkbox with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "checked",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this checkbox is checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 204,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 92,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 12
            },
            "end": {
              "line": 108,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 12
            },
            "end": {
              "line": 122,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 12
            },
            "end": {
              "line": 128,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 12
            },
            "end": {
              "line": 140,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 153,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 165,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the checkbox.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "toggle the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 231,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 4
            },
            "end": {
              "line": 238,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "check",
          "description": "check the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 4
            },
            "end": {
              "line": 252,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uncheck",
          "description": "uncheck the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 259,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 4
            },
            "end": {
              "line": 436,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-checkbox-input",
          "description": "Basic demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 437,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroCheckboxInput",
      "attributes": [
        {
          "name": "value",
          "description": "The value of checkbox with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input checkbox",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "checked",
          "description": "A Boolean attribute which, if present, means this checkbox is checked.",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 92,
              "column": 49
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 12
            },
            "end": {
              "line": 108,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 12
            },
            "end": {
              "line": 122,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 12
            },
            "end": {
              "line": 128,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 12
            },
            "end": {
              "line": 134,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 12
            },
            "end": {
              "line": 140,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 12
            },
            "end": {
              "line": 153,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ALL_BUBBLING_EVENTS_FROM_furo-checkbox",
          "description": "ALL_BUBBLING_EVENTS_FROM_furo-checkbox\n\nAll bubbling events from [furo-checkbox](furo-checkbox) will be fired, because furo-checkbox-input uses furo-checkbox internally.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-checkbox-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-date-input`\n\n### Sample\n <furo-date-input value=\"2020-02-20\" step=\"7\" label=\"Date\" hint=\"Type in a date\"></furo-date-input>\n\nIf you type in a date outside the min max range or the step, an \"error\" will be indicated. But not the error text.\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Date input field",
      "path": "packages/furo-input/furo-date-input.js",
      "properties": [
        {
          "name": "min",
          "type": "string | null | undefined",
          "description": "The earliest date to accept as a valid input.\n\nDates earlier than this will cause the element to fail constraint validation. If the value of the min attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no minimum value.\n\nThis value must specify a date string earlier than or equal to the one specified by the max attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "The latest date to accept. If the value entered into the element is later than this date, the element fails constraint validation. If the value of the max attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no maximum value.\n\nThis value must specify a date string later than or equal to the one specified by the min attribute.\n\nFor date inputs, the value of step is given in days, with a scaling factor of 86,400,000 (since the underlying numeric value is in milliseconds). The default value of step is 1, indicating 1 day.\n\n[more](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#step)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).\n\n**Tipp:** set a `min` value as reference for the stepping calculations.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "text for errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The latest date to accept, in the syntax described under Date value format\n\nA string indicating the latest date to accept, specified in the same [date value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#Date_value_format). If the specified string isn't a valid date, no maximum value is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 2
            },
            "end": {
              "line": 79,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Set the value for the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 2
            },
            "end": {
              "line": 231,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num",
              "type": "Number",
              "description": "a valid date number value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 594,
              "column": 2
            },
            "end": {
              "line": 619,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-date-input",
          "description": "Input sample"
        },
        {
          "url": "demo-furo-input-together",
          "description": "Different input elements together"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 622,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroDateInput",
      "attributes": [
        {
          "name": "min",
          "description": "The earliest date to accept as a valid input.\n\nDates earlier than this will cause the element to fail constraint validation. If the value of the min attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no minimum value.\n\nThis value must specify a date string earlier than or equal to the one specified by the max attribute.",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "max",
          "description": "The latest date to accept. If the value entered into the element is later than this date, the element fails constraint validation. If the value of the max attribute isn't a valid string which follows the format yyyy-MM-dd, then the element has no maximum value.\n\nThis value must specify a date string later than or equal to the one specified by the min attribute.\n\nFor date inputs, the value of step is given in days, with a scaling factor of 86,400,000 (since the underlying numeric value is in milliseconds). The default value of step is 1, indicating 1 day.\n\n[more](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#step)",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "step",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).\n\n**Tipp:** set a `min` value as reference for the stepping calculations.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "errortext",
          "description": "text for errors",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The latest date to accept, in the syntax described under Date value format\n\nA string indicating the latest date to accept, specified in the same [date value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#Date_value_format). If the specified string isn't a valid date, no maximum value is set.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 169,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 175,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 6
            },
            "end": {
              "line": 195,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-date-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-number-input`\n\n <sample-furo-number-input></sample-furo-number-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Number input field",
      "path": "packages/furo-input/furo-number-input.js",
      "properties": [
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the max attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "The required attribute, the value true means this field must be filled in",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Set the value for the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num",
              "type": "Number",
              "description": "a valid number value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 2
            },
            "end": {
              "line": 265,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 279,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 2
            },
            "end": {
              "line": 649,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-number-input",
          "description": "Input sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 651,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroNumberInput",
      "attributes": [
        {
          "name": "min",
          "description": "The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the max attribute.",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "required",
          "description": "The required attribute, the value true means this field must be filled in",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-number-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-password-input`\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Text input field",
      "path": "packages/furo-input/furo-password-input.js",
      "properties": [
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the password input has no minimum length.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the password input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "?",
          "description": "Updater for the step attr",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 206,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 2
            },
            "end": {
              "line": 222,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 254,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "makeVisible",
          "description": "Makes the password visible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "makeInvisible",
          "description": "Makes the password invisible again (this is the default).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 2
            },
            "end": {
              "line": 658,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-password-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 660,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPasswordInput",
      "attributes": [
        {
          "name": "pattern",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the password input has no minimum length.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the password input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the password input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 161,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 200,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 6
            },
            "end": {
              "line": 206,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-password-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-radio-button`\n\nradiobutton input element which uses a native `<input type=\"radio\">` tag.\n\nlements of type radio are generally used in radio groups—collections of radio buttons describing a set of related options.\nOnly one radio button in a given group can be selected at the same time. Radio buttons are typically rendered as small circles, which are filled or highlighted when selected.\n\n### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-radio-button></furo-radio-button>\n  </template>\n </furo-demo-snippet>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-radiobutton-unselected-bg-color` | background color of the unchecked radiobutton | `--surface` | #ffffff\n`--input-radiobutton-unselected-border-color` | border color of the unchecked radiobutton | `--separator` | #7E7E7E\n`--input-radiobutton-unselected-hover-bg-color` | background color of the unchecked radiobutton by hovering | `--surface-light` | #F5F5F5\n`--input-radiobutton-unselected-focus-bg-color` | background color of the unchecked radiobutton by focusing | `--surface-dark` | #DDDDDD\n`--input-radiobutton-unselected-active-bg-color` | background color of the unchecked radiobutton by pressing | `--surface-dark` | #C0C0C0\n`--input-radiobutton-selected-bg-color` | background color of the checked radiobutton | `--accent` | #6200FD\n`--input-radiobutton-selected-hover-bg-color` | background color of the checked radiobutton by hovering | `--on-accent` | #D5C6E9\n`--input-radiobutton-selected-focus-bg-color` | background color of the checked radiobutton by focusing | `--accent` | #6200FD\n`--input-radiobutton-disabled-selected-bg-color` | background color of the checked disabled radiobutton | `--disable` | #B9B9B9\n`--input-radiobutton-disabled-selected-border-color` | border color of the checked disabled radiobutton | `--disable` | #B9B9B9\n`--input-radiobutton-disabled-unselected-bg-color` | background color of the unchecked disabled radiobutton | `--surface` | #ffffff\n`--input-radiobutton-disabled-unselected-border-color` | border color of the unchecked disabled radiobutton | `--surface` | #aaaaaa\n`--input-radiobutton-disabled-hover-bg-color` | background color of the unchecked disabled radiobutton by hovering| `--surface` | #ffffff",
      "summary": "radiobutton input",
      "path": "packages/furo-input/furo-radio-button.js",
      "properties": [
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "The value of radio-button with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input radiob-utton",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 12
            },
            "end": {
              "line": 169,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 12
            },
            "end": {
              "line": 176,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "checked",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this radio-button is checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 12
            },
            "end": {
              "line": 183,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "focused",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this is focused.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 12
            },
            "end": {
              "line": 190,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "focus",
          "description": "Sets the focus on the radiobutton.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "check",
          "description": "check the radiobutton",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uncheck",
          "description": "uncheck the radiobutton",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "toggle the radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setValue",
          "description": "Sets the value for the radio-button\nThe value of radio-button with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v",
              "type": "boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 4
            },
            "end": {
              "line": 373,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-radio-button",
          "description": "Basic demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 374,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroRadioButton",
      "attributes": [
        {
          "name": "value",
          "description": "The value of radio-button with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input radiob-utton",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 12
            },
            "end": {
              "line": 169,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 12
            },
            "end": {
              "line": 176,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "checked",
          "description": "A Boolean attribute which, if present, means this radio-button is checked.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 12
            },
            "end": {
              "line": 183,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "focused",
          "description": "A Boolean attribute which, if present, means this is focused.",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 12
            },
            "end": {
              "line": 190,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "checked",
          "description": "checked\nFired when the radio-button is checked\ndetail payload: {String} the text value",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unchecked",
          "description": "unchecked\nFired when the radio-button is unchecked\ndetail payload: {String} the text value",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "value-changed\nFired when value has changed from inside the component\ndetail payload: {String} the text value",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-radio-button",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-radio-button-input`\n\nradio-button input element which uses a custom `<furo-radio-button>` element. it has also hint, label and error message\n\nradio-button allow the user to select multiple options from a set.\n\n### Sample\n <furo-demo-snippet>\n  <template>\n   <furo-radio-button-input label=\"This is the Label\"></furo-radio-button-input>\n  </template>\n </furo-demo-snippet>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-label-color` | Color of the label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5",
      "summary": "radio-button input",
      "path": "packages/furo-input/furo-radio-button-input.js",
      "properties": [
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "The value of radio-button with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "checked",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this radio-button is checked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 12
            },
            "end": {
              "line": 93,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 12
            },
            "end": {
              "line": 109,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 12
            },
            "end": {
              "line": 123,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 141,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 12
            },
            "end": {
              "line": 166,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 68,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the radio-button.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "v",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggle",
          "description": "toggle the radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 4
            },
            "end": {
              "line": 232,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 246,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "check",
          "description": "check the radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uncheck",
          "description": "uncheck the radio-button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-radio-button-input",
          "description": "Basic demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 439,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroRadioButtonInput",
      "attributes": [
        {
          "name": "value",
          "description": "The value of radio-button with true (checked) or false (unchecked). Changes will be notified with the `@-value-changed` event\nThis is different from the native attribute `value` of the input radio-button",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "checked",
          "description": "A Boolean attribute which, if present, means this radio-button is checked.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 12
            },
            "end": {
              "line": 93,
              "column": 49
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 12
            },
            "end": {
              "line": 109,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 12
            },
            "end": {
              "line": 123,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 141,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "ALL_BUBBLING_EVENTS_FROM_furo-radio-button",
          "description": "ALL_BUBBLING_EVENTS_FROM_furo-radio-button\n\nAll bubbling events from [furo-radio-button](furo-radio-button) will be fired, because furo-radio-button-input uses furo-radio-button internally.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-radio-button-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-range-input`\n\n <sample-furo-range-input></sample-furo-range-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Range input field",
      "path": "packages/furo-input/furo-range-input.js",
      "properties": [
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the max attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 232,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "number | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 202,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Set the value for the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num",
              "type": "Number",
              "description": "a valid number value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Disables the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 2
            },
            "end": {
              "line": 267,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 274,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 587,
              "column": 2
            },
            "end": {
              "line": 612,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-range-input",
          "description": "Input sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 615,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroRangeInput",
      "attributes": [
        {
          "name": "min",
          "description": "The minimum value to accept for this input. If the value of the element is less than this, the element fails constraint validation. If a value is specified for min that isn't a valid number, the input has no minimum value.\n\nThis value must be less than or equal to the value of the max attribute.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 6
            },
            "end": {
              "line": 196,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-range-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-search-input`\n\n <furo-search-input label=\"Search\" hint=\"Press escape to clear\"></sample-furo-search-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Search input field",
      "path": "packages/furo-input/furo-search-input.js",
      "properties": [
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the search input has no minimum length.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the search input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "The required attribute, the value true means this field must be filled in",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 152,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 209,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 615,
              "column": 2
            },
            "end": {
              "line": 637,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-search-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 639,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroSearchInput",
      "attributes": [
        {
          "name": "pattern",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the search input has no minimum length.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the search input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the search input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 94,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "The required attribute, the value true means this field must be filled in",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-search-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-select-input`\n\n <sample-furo-select-input></sample-furo-select-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Select input field",
      "path": "packages/furo-input/furo-select-input.js",
      "properties": [
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "options",
          "type": "Array | null | undefined",
          "description": "The list of options. Can be a simple list like [\"A\",\"B\",\"C\"]. In this case the value is equals the label\n\nWith ids (key value):\n\n[{\"id\":1,\"label\":\"AAA\"},{\"id\":2,\"label\":\"BBB\"}]\n\n\nWith preselect state in data:\n\n[{\"id\":23,\"label\":\"AAA\",\"selected\":false},{\"id\":44,\"label\":\"BBB\",\"selected\":true}]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 288,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "list",
          "type": "string | null | undefined",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 178,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Set the value for the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOptions",
          "description": "Set the options programmatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optionArray"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setList",
          "description": "Set the list programmatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list",
              "type": "String",
              "description": "with options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 266,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 2
            },
            "end": {
              "line": 655,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-select-input",
          "description": "Input sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 32,
          "column": 0
        },
        "end": {
          "line": 657,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroSelectInput",
      "attributes": [
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "options",
          "description": "The list of options. Can be a simple list like [\"A\",\"B\",\"C\"]. In this case the value is equals the label\n\nWith ids (key value):\n\n[{\"id\":1,\"label\":\"AAA\"},{\"id\":2,\"label\":\"BBB\"}]\n\n\nWith preselect state in data:\n\n[{\"id\":23,\"label\":\"AAA\",\"selected\":false},{\"id\":44,\"label\":\"BBB\",\"selected\":true}]",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 2
            },
            "end": {
              "line": 288,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "list",
          "description": "Set a string list as options:\n\n\"A, B, C\"\n\nThis will convert to options [\"A\",\"B\",\"C\"]",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 6
            },
            "end": {
              "line": 108,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 6
            },
            "end": {
              "line": 114,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 120,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 6
            },
            "end": {
              "line": 172,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-select-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-text-input`\n\n <sample-furo-text-input></sample-furo-text-input>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Text input field",
      "path": "packages/furo-input/furo-text-input.js",
      "properties": [
        {
          "name": "pattern",
          "type": "string | null | undefined",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the text input has no minimum length.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the text input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 249,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "The required attribute, the value true means this field must be filled in",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 290,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "toto add option to hide `*` when the field is required",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 2
            },
            "end": {
              "line": 654,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-text-input",
          "description": "Input samples"
        },
        {
          "url": "furo-text-input-playground",
          "description": "Text-input playground"
        },
        {
          "url": "demo-furo-input-together",
          "description": "Different input elements together"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 656,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTextInput",
      "attributes": [
        {
          "name": "pattern",
          "description": "The pattern attribute, when specified, is a regular expression that the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression, as used by the RegExp type, and as documented in our guide on regular expressions; the 'u' flag is specified when compiling the regular expression, so that the pattern is treated as a sequence of Unicode code points, instead of as ASCII. No forward slashes should be specified around the pattern text.\n\nIf the specified pattern is not specified or is invalid, no regular expression is applied and this attribute is ignored completely.",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the text input has no minimum length.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the text input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the text input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "The required attribute, the value true means this field must be filled in",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 126,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 6
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 150,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 201,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 6
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-text-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-textarea-input`\n\n <furo-textarea-input></furo-textarea-input>",
      "summary": "Textarea input field",
      "path": "packages/furo-input/furo-textarea-input.js",
      "properties": [
        {
          "name": "min",
          "type": "number | null | undefined",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the textarea input has no minimum length.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "number | null | undefined",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the textarea input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "rows",
          "type": "number | null | undefined",
          "description": "The number of visible text lines for the control.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "cols",
          "type": "number | null | undefined",
          "description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.\n\nIf it is not specified, the default value is 20.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 210,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 137,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 180,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Sets the value for the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "string",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 222,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 230,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 2
            },
            "end": {
              "line": 523,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-textarea-input",
          "description": "Input samples"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 525,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTextareaInput",
      "attributes": [
        {
          "name": "min",
          "description": "The minimum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an non-negative integer value smaller than or equal to the value specified by maxlength. If no minlength is specified, or an invalid value is specified, the textarea input has no minimum length.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum number of characters (as UTF-16 code units) the user can enter into the textarea input. This must be an integer value 0 or higher. If no maxlength is specified, or an invalid value is specified, the textarea input has no maximum length. This value must also be greater than or equal to the value of minlength.",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "rows",
          "description": "The number of visible text lines for the control.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "cols",
          "description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.\n\nIf it is not specified, the default value is 20.",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The label attribute is a string that provides a brief hint to the user as to what kind of information is expected in the field. It should be a word or short phrase that demonstrates the expected type of data, rather than an explanatory message. The text must not include carriage returns or line feeds.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 6
            },
            "end": {
              "line": 125,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-textarea-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-time-input`\n\n### Sample\n <furo-time-input value=\"12:15\" label=\"Time\" hint=\"Type in a time\"></furo-time-input>\n\nIf you type in a time outside the min max range or the step, an \"error\" will be indicated. But not the error text.\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default  | Fallback\n----------------|-------------|----------|----------\n`--input-hint-color` | Color of hint text | #999999 | --\n`--input-label-color` | Color of label in field| `--disabled,` | #333333\n`--input-label-float-color` | Color of label when floating | `--on-surface` | #333333\n`--input-active-float-label-color` | Color of floating label when active  | `--primary` | #3f51b5\n`--input-activation-indicator-color` | Color of activation indicator when not selected| `--disabled` | #333333\n`--input-error-activation-indicator-color` | Color of activation indicator in error state | `--error` | red\n`--input-error-text-color` | Color of error text | `--error` | red\n`--input-active-activation-indicator-color` | Color of factivation indicator in active  state   | `--primary` | #3f51b5\n`--input-active-error-activation-indicator-color` | Color of factivation indicator in active error state   | `--error` | red",
      "summary": "Time input field",
      "path": "packages/furo-input/furo-time-input.js",
      "properties": [
        {
          "name": "min",
          "type": "string | null | undefined",
          "description": "The earliest time to accept as a valid input.\n\nA string specifying the earliest time to accept, given in the [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the value specified isn't a valid time string, no minimum value is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "max",
          "type": "string | null | undefined",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "step",
          "type": "string | null | undefined",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_value",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "errortext",
          "type": "string | null | undefined",
          "description": "Getter method for errortext",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "set this to true to indicate errors",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 43
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The latest time to accept, in the syntax described under Time value format\n\nA string indicating the latest time to accept, specified in the same [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the specified string isn't a valid time, no maximum value is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to autofocus the input field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_float",
          "type": "boolean | null | undefined",
          "description": "helper for the label",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "float",
          "type": "boolean | null | undefined",
          "description": "Lets the placeholder always floating",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hint",
          "type": "string | null | undefined",
          "description": "The hint text for the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "leadingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the left side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "trailingIcon",
          "type": "string | null | undefined",
          "description": "Icon on the right side",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valid",
          "type": "boolean | null | undefined",
          "description": "html input validity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "condensed",
          "type": "boolean | null | undefined",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "filled",
          "type": "boolean | null | undefined",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_errortext",
          "type": "string | null | undefined",
          "description": "error text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "setValue",
          "description": "Set the value for the field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "num",
              "type": "Number",
              "description": "a valid time number value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setError",
          "description": "Set the field to error state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearError",
          "description": "clears the error and restores the errortext.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "Sets the focus on the field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 2
            },
            "end": {
              "line": 266,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disable",
          "description": "Sets the field to readonly",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Makes the field writable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 2
            },
            "end": {
              "line": 618,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-time-input",
          "description": "Input sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 621,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroTimeInput",
      "attributes": [
        {
          "name": "min",
          "description": "The earliest time to accept as a valid input.\n\nA string specifying the earliest time to accept, given in the [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the value specified isn't a valid time string, no minimum value is set.",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "max",
          "description": "The maximum value to accept for this input. If the value entered into the element exceeds this, the element fails constraint validation. If the value of the max attribute isn't a number, then the element has no maximum value.\n\nThis value must be greater than or equal to the value of the min attribute.",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "step",
          "description": "The step attribute is a number that specifies the granularity that the value must adhere to, or the special value any, which is described below. Only values which are equal to the basis for stepping (min if specified, value otherwise, and an appropriate default value if neither of those is provided) are valid.\n\nA string value of any means that no stepping is implied, and any value is allowed (barring other constraints, such as min and max).",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "set this to true to indicate errors",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 43
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "value",
          "description": "The start value. Changes will be notified with the `@-value-changed` event",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "The latest time to accept, in the syntax described under Time value format\n\nA string indicating the latest time to accept, specified in the same [time value format](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/time#Time_value_format). If the specified string isn't a valid time, no maximum value is set.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Set this attribute to autofocus the input field.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "float",
          "description": "Lets the placeholder always floating",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hint",
          "description": "The hint text for the field.",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 166,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "leading-icon",
          "description": "Icon on the left side",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "trailing-icon",
          "description": "Icon on the right side",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valid",
          "description": "html input validity",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "condensed",
          "description": "The default style (md like) supports a condensed form. It is a little bit smaller then the default",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "filled",
          "description": "Set this attribute to switch to filled layout. Filled is without the borders around the field.",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-time-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "# Experimental\nThe API may change, documentation will follow\n\n`furo-icon-button`",
      "summary": "todo shortdescription",
      "path": "packages/furo-input/furo-icon-button.js",
      "properties": [
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "The icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autofocus",
          "type": "boolean | null | undefined",
          "description": "Focus the element automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_attachDom",
          "description": "Auto append fbp for Polymer",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "firstUpdated",
          "description": "Auto append fbp for lit elements",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTriggerWire",
          "description": "Triggers a wire",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 69,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire like --buttonClicked"
            },
            {
              "name": "detailData",
              "description": "(*) data to pass"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPAddWireHook",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 125,
              "column": 8
            },
            "end": {
              "line": 142,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire",
              "description": "(String) Name of the wire"
            },
            {
              "name": "cb",
              "description": "(function) Callback function cb(detailData)"
            },
            {
              "name": "before"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPTraceWires",
          "description": "Log all triggered wires for this component. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPTraceWires()`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPDebug",
          "description": "Get information for the triggered wire. This function may help you at debugging.\nSelect your element in the dev console and call `$0._FBPDebug('--dataReceived')`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "openDebugger",
              "description": "opens the debugger console, so you can inspect your component."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__toCamelCase",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "_appendFBP",
          "description": "parses the dom for flowbased programming tags",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 529,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "description": "dom node"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__enqueueTrigger",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 541,
              "column": 8
            },
            "end": {
              "line": 543,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wire"
            },
            {
              "name": "detailData"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "__resolveWireAndPath",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 545,
              "column": 8
            },
            "end": {
              "line": 553,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ],
          "inheritedFrom": "FBP"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 555,
              "column": 8
            },
            "end": {
              "line": 569,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathGet",
          "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 580,
              "column": 8
            },
            "end": {
              "line": 593,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to read"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at path, or `undefined` if the path could not be\n fully dereferenced."
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_pathSet",
          "description": "Sets a value to a path.  If any sub-property in the path is `undefined`,\nthis method will no-op.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 604,
              "column": 8
            },
            "end": {
              "line": 626,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Object",
              "description": "Object from which to dereference path from"
            },
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set to path"
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "The normalized version of the input path"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "_split",
          "description": "Splits a path into an array of property names. Accepts either arrays\nof path parts or strings.\n\nExample:\n\n```\nsplit(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\nsplit('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n```",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../../@furo/fbp/fbp.js",
            "start": {
              "line": 644,
              "column": 8
            },
            "end": {
              "line": 646,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Input path"
            }
          ],
          "return": {
            "type": "!Array.<string>",
            "desc": "Array of path parts"
          },
          "inheritedFrom": "FBP"
        },
        {
          "name": "focus",
          "description": "Set the focus to the button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-icon-button",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroIconButton",
      "attributes": [
        {
          "name": "icon",
          "description": "The icon",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "autofocus",
          "description": "Focus the element automatically",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-icon-button",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "",
      "summary": "",
      "path": "packages/furo-input/lib/helper.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "UpdateInputAttribute",
          "description": "update Attribute on input element actively, so we dont have things like pattern=\"undefined\" on the native element.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 30,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "attribute"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "triggerValueChanged",
          "description": "send event value-changed with event detail value\nwhen input invalid send extra input-invalid event with event detail validity object",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Helper"
    }
  ]
}
