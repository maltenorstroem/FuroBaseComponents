{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`hp-35` is a declarative rpn calculator component.\n\nsee https://hansklav.home.xs4all.nl/rpn/\nhttp://h10032.www1.hp.com/ctg/Manual/c01579350",
      "summary": "",
      "path": "packages/furo-math/furo-hp-35.js",
      "properties": [
        {
          "name": "x",
          "type": "number | null | undefined",
          "description": "current x",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "y",
          "type": "number | null | undefined",
          "description": "current y",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "z",
          "type": "number | null | undefined",
          "description": "current z",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "t",
          "type": "number | null | undefined",
          "description": "current t",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 34,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "stack",
          "type": "Array | null | undefined",
          "description": "the stack.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 38,
              "column": 58
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "radMode",
          "type": "boolean | null | undefined",
          "description": "Set to true to use rad, default is deg",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 45
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_PIdivby180",
          "type": "number | null | undefined",
          "description": "so we dont have to calculate Math.PI / 180  every time\nused to calculate rad from angle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 61
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0.017453292519943295"
        }
      ],
      "methods": [
        {
          "name": "_stackchange",
          "description": "publish the stack",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enter",
          "description": "Enter a number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateXYZT",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 4
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "swap",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "rot",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 97,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "roll",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "add",
          "description": "Process an addition",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "substract",
          "description": "Process an addition",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "sqrt",
          "description": "Perform square root operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "ln",
          "description": "Perform log operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "cos",
          "description": "Perform cos operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "sin",
          "description": "Perform sin operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "tan",
          "description": "Perform tan operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "abs",
          "description": "Perform abs operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "reciprocal",
          "description": "Perform reciprocal operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "exp",
          "description": "Perform exp operation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "xroot",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 4
            },
            "end": {
              "line": 306,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "multiply",
          "description": "Process a multiplication",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "pow",
          "description": "Process power",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "divide",
          "description": "Process a division",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 368,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ],
          "return": {
            "desc": "Number"
          }
        },
        {
          "name": "clear",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 374,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/hp35.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 2
        },
        "end": {
          "line": 375,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "ForthStack",
      "name": "FuroHp35",
      "attributes": [
        {
          "name": "x",
          "description": "current x",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 8
            },
            "end": {
              "line": 22,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "y",
          "description": "current y",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "z",
          "description": "current z",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 8
            },
            "end": {
              "line": 30,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "t",
          "description": "current t",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 34,
              "column": 49
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "stack",
          "description": "the stack.",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 8
            },
            "end": {
              "line": 38,
              "column": 58
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "rad-mode",
          "description": "Set to true to use rad, default is deg",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 8
            },
            "end": {
              "line": 42,
              "column": 45
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "stackchange",
          "description": "Fired when something in stack changes\ndetail payload:",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "x-changed",
          "description": "Fired when the `x` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "y-changed",
          "description": "Fired when the `y` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "z-changed",
          "description": "Fired when the `z` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "t-changed",
          "description": "Fired when the `t` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "stack-changed",
          "description": "Fired when the `stack` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-hp-35"
    }
  ]
}
