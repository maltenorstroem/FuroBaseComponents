{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-app-flow`",
      "summary": "Application Flow => routing",
      "path": "src/furo-app-flow.js",
      "properties": [
        {
          "name": "event",
          "type": "string | null | undefined",
          "description": "Name of your app-flow event object\n\ni.e. 'task-clicked', 'wizard-step1-completed',...",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setQp",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "qp"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "emit",
          "description": "fire the app-flow event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "queryParams"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroAppFlow",
      "attributes": [
        {
          "name": "event",
          "description": "Name of your app-flow event object\n\ni.e. 'task-clicked', 'wizard-step1-completed',...",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 27
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-flow",
          "description": "app-flow\n\nApp-flow event with app-flow object will be fired when you trigger the `emit` function.\ndetail payload: data",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-app-flow",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-app-flow-router`\n\nUse this component with app-flow and furo-pages to implement application flow\n\n\n   <app-flow-router config=\"[[conf]]\" ƒ-trigger=\"--flowEvent\" ƒ-back=\"--wire\" ƒ-forward=\"--wire\"></app-flow-router>",
      "summary": "Application Flow => routing",
      "path": "src/furo-app-flow-router.js",
      "properties": [
        {
          "name": "urlSpaceRegex",
          "type": "(string | RegExp)",
          "description": "A regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app/ do:\n    url-space-regex=\"^/app/\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "this.getAttribute(\"url-space-regex\") || \"/\""
        },
        {
          "name": "config",
          "type": "Array | null | undefined",
          "description": "Configuration Array\n\n| current   | flow-event-name      | target      | [mapping]          |\n|:----------|:---------------------|:------------|:-------------------|\n| view-main | form-complete        | detail-view | from => to         |\n| *         | menu-settings-click  | settings    |                    |\n| *         | all-fields-req       | all-qps     |        *           |\n| *         | some-fields-req      | some-qps    | a=>b,x=>id,c=>item |\n\n\n```json\n [\n   ['view-main', 'button-tap', 'detail-view',  'task => id],\n   [\"*\", \"search\", \"EXTERNAL_LINK: https://google.com/\"],\n   [\"*\", \"searchInNewWindow\", \"EXTERNAL_LINK_BLANK: https://google.com/\"]\n ]\n ```\n\n\n if the current view is view-main and the flow-event-name is 'form-complete', the view switches to detail-view and data.from is mapped to \"to\".\n\n Special configurations:\n\n - Set a \"*\" to map all data 1:1 to the url.\n\n - You can set a wildcard for \"current\". If you check the example: menu-settings-click can be triggered from any current. If there is a \"current\" with menu-settings-click configured and you are there, the wildcard is not used.\n - if you want to link to a target outside your app add **EXTERNAL_LINK:** followed by the link",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "back",
          "description": "trigger a history back",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "forward",
          "description": "trigger a history forward",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "Trigger the router",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "flowEvent"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 196,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroAppFlowRouter",
      "attributes": [
        {
          "name": "config",
          "description": "Configuration Array\n\n| current   | flow-event-name      | target      | [mapping]          |\n|:----------|:---------------------|:------------|:-------------------|\n| view-main | form-complete        | detail-view | from => to         |\n| *         | menu-settings-click  | settings    |                    |\n| *         | all-fields-req       | all-qps     |        *           |\n| *         | some-fields-req      | some-qps    | a=>b,x=>id,c=>item |\n\n\n```json\n [\n   ['view-main', 'button-tap', 'detail-view',  'task => id],\n   [\"*\", \"search\", \"EXTERNAL_LINK: https://google.com/\"],\n   [\"*\", \"searchInNewWindow\", \"EXTERNAL_LINK_BLANK: https://google.com/\"]\n ]\n ```\n\n\n if the current view is view-main and the flow-event-name is 'form-complete', the view switches to detail-view and data.from is mapped to \"to\".\n\n Special configurations:\n\n - Set a \"*\" to map all data 1:1 to the url.\n\n - You can set a wildcard for \"current\". If you check the example: menu-settings-click can be triggered from any current. If there is a \"current\" with menu-settings-click configured and you are there, the wildcard is not used.\n - if you want to link to a target outside your app add **EXTERNAL_LINK:** followed by the link",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "event-not-found",
          "description": "event-not-found\nFired when view not\ndetail payload: flowEvent",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "view-changed",
          "description": "view-changed\nFired when page was changed\ndetail payload: flowEvent",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-app-flow-router",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-location`\n Somethin like iron-location",
      "summary": "url watcher",
      "path": "src/furo-location.js",
      "properties": [
        {
          "name": "urlSpaceRegex",
          "type": "(string | RegExp)",
          "description": "A regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app/ do:\n    url-space-regex=\"^/app/\"\n\nIf you plan to work in sub directories, you may set **url-space-regex=\"^${window.APPROOT}/additional/path\"**.\nKeep in mind to put a \"url-space-regex\" on every furo-location. Otherwise you can not switch between apps in different\nfolders with a link.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "this.getAttribute(\"url-space-regex\") || \"\""
        },
        {
          "name": "dwellTime",
          "type": "number",
          "description": "If the user was on a URL for less than `dwellTime` milliseconds, it\nwon't be added to the browser's history, but instead will be replaced\nby the next entry.\n\nThis is to prevent large numbers of entries from clogging up the user's\nbrowser history. Disable by setting to a negative number.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 4
            },
            "end": {
              "line": 45,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "this.getAttribute(\"dwell-time\") || 2000"
        }
      ],
      "methods": [
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldValue"
            },
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getHrefFromLocation",
          "description": "create a valid href string from this._location",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_registerHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_findAtagInPath",
          "description": "look for A tags in a path array from click events",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            }
          ],
          "return": {
            "type": "(boolean | *)"
          }
        },
        {
          "name": "_notifyFuroLocationChanged",
          "description": "Internal notyfication",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 293,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroLocation",
      "attributes": [
        {
          "name": "url-space-regex",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 44
            },
            "end": {
              "line": 53,
              "column": 61
            }
          },
          "metadata": {}
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "location-changed",
          "description": "location-changed\nFired when something in the location changed\ndetail payload: {object} location",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-hash-changed",
          "description": "location-hash-changed\nFired when Hash portion of the location changed\ndetail payload: {string} hash",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-path-changed",
          "description": "location-path-changed\nFired when Path portion of the location changed\ndetail payload: {string} path",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-query-changed",
          "description": "location-query-changed\nFired when Query portion of the location changed\ndetail payload: {Object} Location object",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-location"
    },
    {
      "description": "`furo-pages` is used to select one of its children to show.\n\n### caveat\nYou have to implement a `:host([hidden]){display:none}` in your views css\n\n### flowbased auto wires\nfuro-pages provides auto wires, which are automatically injected if\nthe element inside has flowbased enabled.\n\n| wire               | timing           |\n|:-------------------|:-----------------|\n| --pageDeActivated  | Every time the page changes to hidden   |\n| --pageActivated    | Every time the page changes its attribute _attrForSelected or selected",
      "summary": "Simple content switcher",
      "path": "src/furo-pages.js",
      "properties": [
        {
          "name": "location",
          "type": "?",
          "description": "set location via attribute\nwill forward to ƒ-inject-location",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "activatePage",
          "description": "Activate a page by name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pageName"
            }
          ]
        },
        {
          "name": "injectLocation",
          "description": "Inject the location Object from furo-location",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "location"
            }
          ]
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "with panel coordinator"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 160,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroPages",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-pages"
    },
    {
      "description": "`furo-panel-coordinator`",
      "summary": "Complex content switcher based on furo-tree",
      "path": "src/furo-panel-coordinator.js",
      "properties": [],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifiyOpenPanels",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showPage",
          "description": "Loads and shows the page based on the NavigationNode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "NavigationNode"
            }
          ],
          "return": {
            "type": "Promise.<void>"
          }
        },
        {
          "name": "closeAll",
          "description": "closes all open panels",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "forceCloseAll",
          "description": "closes all open panels without asking",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeNodeById",
          "description": "removes a panel from the view",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 143,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "with deep link"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 145,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPanelCoordinator",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "controls-ready",
          "description": "controls-ready\nFired when Controls for panels are ready, initially it starts with an empty set\n\ndetail payload: RepeaterNode with navigation nodes",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-panel-coordinator",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`qp-changer`\nupdates the query params in the url",
      "summary": "deep linking helper",
      "path": "src/furo-qp-changer.js",
      "properties": [],
      "methods": [
        {
          "name": "setQp",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newQP"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "update qp from tree"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroQpChanger",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-qp-changer",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "Registry for the components which can handle a type in a specific context.\n\nThis class is used by the furo-panel-coordinator to find the component which suites best for the given data type.\n\nThe registry can be autogenerated from @furo/ui-builder\n\n```\n// -- register panels\n\npanelRegistry.registerType(\"auth.AuthEntity\", {\n   \"edit\" : \"auth-auth-update-panel\"\n});\n```",
      "summary": "",
      "path": "src/lib/panelRegistry.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "registerType",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 19,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getPanelName",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "suffix"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 7
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "panelRegistry"
    }
  ]
}
