{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-app-flow`",
      "summary": "Application Flow => routing",
      "path": "src/furo-app-flow.js",
      "properties": [
        {
          "name": "event",
          "type": "string | null | undefined",
          "description": "Name of your app-flow event object\n\ni.e. 'task-clicked', 'wizard-step1-completed',...",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setQp",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "qp"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "emit",
          "description": "fire the app-flow event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "queryParams"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroAppFlow",
      "attributes": [
        {
          "name": "event",
          "description": "Name of your app-flow event object\n\ni.e. 'task-clicked', 'wizard-step1-completed',...",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 6
            },
            "end": {
              "line": 29,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-flow",
          "description": "app-flow\n\nApp-flow event with app-flow object will be fired when you trigger the `emit` function.\ndetail payload: data",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-app-flow",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-app-flow-router`\n\nUse this component with app-flow and furo-pages to implement application flow\n\n\n   <app-flow-router config=\"[[conf]]\" ƒ-trigger=\"--flowEvent\" ƒ-back=\"--wire\" ƒ-forward=\"--wire\"></app-flow-router>",
      "summary": "Application Flow => routing",
      "path": "src/furo-app-flow-router.js",
      "properties": [
        {
          "name": "config",
          "type": "Array | null | undefined",
          "description": "Configuration Array\n\n| current   | flow-event-name      | target      | [mapping]          |\n|:----------|:---------------------|:------------|:-------------------|\n| view-main | form-complete        | detail-view | from => to         |\n| *         | menu-settings-click  | settings    |                    |\n| *         | all-fields-req       | all-qps     |        *           |\n| *         | some-fields-req      | some-qps    | a=>b,x=>id,c=>item |\n\n\n```json\n [\n   ['view-main', 'button-tap', 'detail-view',  'task => id],\n   [\"*\", \"search\", \"EXTERNAL_LINK: https://google.com/\"],\n   [\"*\", \"searchInNewWindow\", \"EXTERNAL_LINK_BLANK: https://google.com/\"]\n ]\n ```\n\n\n if the current view is view-main and the flow-event-name is 'form-complete', the view switches to detail-view and data.from is mapped to \"to\".\n\n Special configurations:\n\n - Set a \"*\" to map all data 1:1 to the url.\n\n - You can set a wildcard for \"current\". If you check the example: menu-settings-click can be triggered from any current. If there is a \"current\" with menu-settings-click configured and you are there, the wildcard is not used.\n - if you want to link to a target outside your app add **EXTERNAL_LINK:** followed by the link",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "urlSpaceRegex",
          "type": "(string | RegExp)",
          "description": "attribute url-space-regex\nA regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app do:\n    url-space-regex=\"^/app\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "back",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "forward",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "trigger",
          "description": "Trigger the router",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "flowEvent"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroAppFlowRouter",
      "attributes": [
        {
          "name": "config",
          "description": "Configuration Array\n\n| current   | flow-event-name      | target      | [mapping]          |\n|:----------|:---------------------|:------------|:-------------------|\n| view-main | form-complete        | detail-view | from => to         |\n| *         | menu-settings-click  | settings    |                    |\n| *         | all-fields-req       | all-qps     |        *           |\n| *         | some-fields-req      | some-qps    | a=>b,x=>id,c=>item |\n\n\n```json\n [\n   ['view-main', 'button-tap', 'detail-view',  'task => id],\n   [\"*\", \"search\", \"EXTERNAL_LINK: https://google.com/\"],\n   [\"*\", \"searchInNewWindow\", \"EXTERNAL_LINK_BLANK: https://google.com/\"]\n ]\n ```\n\n\n if the current view is view-main and the flow-event-name is 'form-complete', the view switches to detail-view and data.from is mapped to \"to\".\n\n Special configurations:\n\n - Set a \"*\" to map all data 1:1 to the url.\n\n - You can set a wildcard for \"current\". If you check the example: menu-settings-click can be triggered from any current. If there is a \"current\" with menu-settings-click configured and you are there, the wildcard is not used.\n - if you want to link to a target outside your app add **EXTERNAL_LINK:** followed by the link",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "url-space-regex",
          "description": "attribute url-space-regex\nA regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app do:\n    url-space-regex=\"^/app\"",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "type": "(string | RegExp)"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "event-not-found",
          "description": "event-not-found\nFired when view not\ndetail payload: flowEvent",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "view-changed",
          "description": "view-changed\nFired when page was changed\ndetail payload: flowEvent",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-app-flow-router",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-location`\n Somethin like iron-location",
      "summary": "url watcher",
      "path": "src/furo-location.js",
      "properties": [
        {
          "name": "urlSpaceRegex",
          "type": "(string | RegExp)",
          "description": "A regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app/ do:\n    url-space-regex=\"^/app/\"\n\nIf you plan to work in sub directories, you may set **url-space-regex=\"^${window.APPROOT}/additional/path\"**.\nKeep in mind to put a \"url-space-regex\" on every furo-location. Otherwise you can not switch between apps in different\nfolders with a link.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "''"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getHrefFromLocation",
          "description": "create a valid href string from this._location",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_registerHandler",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 279,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_findAtagInPath",
          "description": "look for A tags in a path array from click events",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            }
          ],
          "return": {
            "type": "(boolean | *)"
          }
        },
        {
          "name": "_notifyFuroLocationChanged",
          "description": "Internal notyfication",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 303,
              "column": 2
            },
            "end": {
              "line": 308,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 318,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroLocation",
      "attributes": [
        {
          "name": "url-space-regex",
          "description": "A regexp that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this regex won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app/ do:\n    url-space-regex=\"^/app/\"\n\nIf you plan to work in sub directories, you may set **url-space-regex=\"^${window.APPROOT}/additional/path\"**.\nKeep in mind to put a \"url-space-regex\" on every furo-location. Otherwise you can not switch between apps in different\nfolders with a link.",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 22
            }
          },
          "metadata": {},
          "type": "(string | RegExp)"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "location-changed",
          "description": "location-changed\nFired when something in the location changed\ndetail payload: {object} location",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-hash-changed",
          "description": "location-hash-changed\nFired when Hash portion of the location changed\ndetail payload: {string} hash",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-path-changed",
          "description": "location-path-changed\nFired when Path portion of the location changed\ndetail payload: {string} path",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "location-query-changed",
          "description": "location-query-changed\nFired when Query portion of the location changed\ndetail payload: {Object} Location object",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-location"
    },
    {
      "description": "`furo-location-updater`\nupdates parts of the url location with pushState\n\nYou can set query params and hashes. Use this component for proper deep linking.\nThe furo-location component will fire the location events as usual.\n\n```html\n <furo-location-updater ƒ-set-qp=\"--QueryParamKeyValuePairs\" ƒ-set-hash=\"--HashKeyValuePairs\"></furo-location-updater>\n```",
      "summary": "deep linking helper",
      "path": "src/furo-location-updater.js",
      "properties": [
        {
          "name": "clearQp",
          "type": "string | null | undefined",
          "description": "Comma separated list of qp keys to clear if they are not explicitly set with `ƒ-set-qp`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 27,
              "column": 52
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "clearHash",
          "type": "string | null | undefined",
          "description": "Comma separated list of hashes to clear if they are not explicitly set with `ƒ-set-hash`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 56
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setQp",
          "description": "Set query params by giving an object with key-value pairs.\n\nKeep in mind, that this values goes to the url, so setting objects as values is not a good idea",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newQP"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setHash",
          "description": "Set hash values by giving an object with key-value pairs.\n\nKeep in mind, that this values goes to the url, so setting objects as values is not a good idea",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newHASH"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "update qp from tree"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroLocationUpdater",
      "attributes": [
        {
          "name": "clear-qp",
          "description": "Comma separated list of qp keys to clear if they are not explicitly set with `ƒ-set-qp`",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 27,
              "column": 52
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "clear-hash",
          "description": "Comma separated list of hashes to clear if they are not explicitly set with `ƒ-set-hash`",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 56
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-location-updater",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-pages` is used to select one of its children to show.\n\nUse this to build tabs, views, subviews,...\n\n### preconditions:\nYou have to implement a `:host([hidden]){display:none}` in your views css\n\n### flowbased auto wires\nfuro-pages provides auto wires, which are automatically triggered in the child elements if\nthey have flowbased enabled.\n\n| wire               | timing           |\n|:-------------------|:-----------------|\n| --pageDeActivated  | Every time the element changes to hidden   |\n| --pageActivated    | Triggered when the element is activated. Comes with a location object.\n\n## Attributes\n**default** set the default page to show\n\n**attr-for-selected** *(default: selected)*\n\n\nIf you want to use an attribute value or property of an element for selected instead of the 'selected' attribute, set this to the name of the attribute or property.",
      "summary": "Simple content switcher",
      "path": "src/furo-pages.js",
      "properties": [
        {
          "name": "location",
          "type": "?",
          "description": "Deprecated: use ƒ-inject-location.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "firstUpdated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "activatePage",
          "description": "Activate a page by name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 106,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pageName"
            }
          ]
        },
        {
          "name": "injectLocation",
          "description": "Inject the location Object from furo-location. The page which is defined in location.pathSegments[0] will get activated.\n\nTo meke \"sub\" pages do not forget to enable the `url-space-regex` property on the *furo-location* component which feeds this component.\n\nIf the page/view does not exist and you have a page \"404\" defined, the 404 will be shown\n\nIf the page/view does not exist AND 404 does not exist, the default page gets activated.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "location"
            }
          ]
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 207,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "with panel coordinator"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 31,
          "column": 0
        },
        "end": {
          "line": 208,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroPages",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-pages"
    },
    {
      "description": "`furo-panel-coordinator`",
      "summary": "Complex content switcher based on furo-tree",
      "path": "src/furo-panel-coordinator.js",
      "properties": [],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifiyOpenPanels",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showPage",
          "description": "Loads and shows the page based on the NavigationNode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "NavigationNode"
            }
          ],
          "return": {
            "type": "Promise.<void>"
          }
        },
        {
          "name": "closeAll",
          "description": "closes all open panels",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 106,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "forceCloseAll",
          "description": "closes all open panels without asking",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeNodeById",
          "description": "removes a panel from the view",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "with deep link"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 147,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroPanelCoordinator",
      "attributes": [],
      "events": [
        {
          "type": "CustomEvent",
          "name": "controls-ready",
          "description": "controls-ready\nFired when Controls for panels are ready, initially it starts with an empty set\n\ndetail payload: RepeaterNode with navigation nodes",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-panel-coordinator",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "# Deprecated, use furo-location-updater instead.\nfuro-location-updater has the same API, but can also handle hash values\n`qp-changer`\nupdates the query params in the url",
      "summary": "deep linking helper",
      "path": "src/furo-qp-changer.js",
      "properties": [
        {
          "name": "clear",
          "type": "string | null | undefined",
          "description": "Comma separated list of qp to clear if they are not explizitly set with `setQp`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "setQp",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newQP"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-panel-coordinator",
          "description": "update qp from tree"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroQpChanger",
      "attributes": [
        {
          "name": "clear",
          "description": "Comma separated list of qp to clear if they are not explizitly set with `setQp`",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-qp-changer",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "Registry for the components which can handle a type in a specific context.\n\nThis class is used by the furo-panel-coordinator to find the component which suites best for the given data type.\n\nThe registry can be autogenerated from @furo/ui-builder\n\n```\n// -- register panels\n\npanelRegistry.registerType(\"auth.AuthEntity\", {\n   \"edit\" : \"auth-auth-update-panel\"\n});\n```",
      "summary": "",
      "path": "src/lib/panelRegistry.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "registerType",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "panel"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getPanelName",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "suffix"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 7
        },
        "end": {
          "line": 37,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "panelRegistry"
    }
  ]
}
