{
  "name": "{{camelcase (snakecase .name)}}Service",
  "description": "service specs for the {{.name}} api",
  "version": "0.0.1",
  "lifecycle": {
    "deprecated": false,
    "info": "This version is still valid"
  },
  "__proto": {
    "package": "{{.__proto.package}}service",
    "imports": [
      "{{.name}}/{{.name}}.proto",
      "google/protobuf/empty.proto"
    ],
    "targetfile": "{{.name}}service.proto",
    "options": {
          "go_package": "/{{.__proto.package}}service"
        }
  },
  "services": {
    "List": {
      "description": "The List method takes zero or more parameters as input, and returns a {{.type}}Collection of {{.type}}Entity that match the input parameters.",
      "rpc_name": "List{{camelcase (snakecase .name)}}s",
      "data": {
        "request": null,
        "response": "{{.__proto.package}}.{{.type}}Collection"
      },
      "query": {
        "q": {
          "description": "Query term to search a {{.name}}",
          "type": "string",
          "meta": {
            "label": "Search",
            "hint": ""
          },
          "__proto": {
            "type": "string"
          }
        },
        "fields": {
          "description": "Partial representation (comma separated list of field names), ?fields=",
          "type": "string",
          "meta": {
            "label": "Fields",
            "hint": "Comma separated list of field names"
          },
          "__proto": {
            "type": "string"
          }
        },
        "order_by": {
          "description": "Specifies the result ordering for List requests. The default sorting order is ascending, ?order_by=foo desc,bar",
          "type": "string",
          "meta": {
            "label": "Sorting Order",
            "hint": "The default sorting order is ascending"
          },
          "__proto": {
            "type": "string"
          }
        },
        "filter": {
          "description": "The response message will be filtered by the fields before being sent back to the client, filter=[['id','eq','1']]",
          "type": "string",
          "meta": {
            "label": "Filter",
            "hint": ""
          },
          "__proto": {
            "type": "string"
          }
        },
        "page_size": {
          "description": "Use this field to specify the maximum number of results to be returned by the server. \n The server may further constrain the maximum number of results returned in a single page. \n If the page_size is 0, the server will decide the number of results to be returned. page_size=15",
          "type": "string",
          "meta": {
            "label": "Page Size",
            "hint": "If the page_size is 0, the server will decide the number of results to be returned."
          },
          "__proto": {
            "type": "string"
          }
        },
        "view": {
          "description": "allows the client to specify which view of the resource it wants to receive in the response. view=BASIC",
          "type": "string",
          "meta": {
            "label": "View",
            "hint": "Should be a enum type. MUST be named view"
          },
          "__proto": {
            "type": "string"
          }
        }
      },
      "deeplink": {
        "description":"Describe_the_query_params_if_you_have",
        "rel": "list",
        "href": "/api/{{.name}}s",
        "method": "GET"
      }
    },
    "Create": {
      "description": "Creates a new {{.type}}",
      "rpc_name": "Create{{camelcase (snakecase .name)}}",
      "data": {
        "request": "{{.__proto.package}}.{{.type}}",
        "response": "{{.__proto.package}}.{{.type}}Entity"
      },
      "query": {
      },
      "deeplink": {
        "rel": "create",
        "href": "/api/{{.name}}s",
        "method": "POST"
      }
    },
    "Get": {
      "description": "The Get method takes zero or more parameters, and returns a {{.type}}Entity which contains a {{.type}}",
      "rpc_name": "Get{{camelcase (snakecase .name)}}",
      "data": {
        "request": null,
        "response": "{{.__proto.package}}.{{.type}}Entity"
      },
      "query": {
      },
      "deeplink": {
        "rel": "self",
        "href": "/api/{{.name}}s/{REPLACE_THIS_WITH_YOUR_QUERY_PARAM}",
        "method": "GET"
      }
    },
    "Update": {
      "description": "Updates a {{.type}}, partial updates are supported",
      "rpc_name": "Update{{camelcase (snakecase .name)}}",
      "data": {
        "request": "{{.__proto.package}}.{{.type}}",
        "response": "{{.__proto.package}}.{{.type}}Entity"
      },
      "query": {},
      "deeplink": {
        "rel": "update",
        "href": "/api/{{.name}}s/{REPLACE_THIS_WITH_YOUR_QUERY_PARAM}",
        "method": "PATCH"
      }
    },
    "Delete": {
      "description": "Delete a {{.type}}",
      "rpc_name": "Delete{{camelcase (snakecase .name)}}",
      "data": {
        "request": "google.protobuf.Empty",
        "response": "google.protobuf.Empty"
      },
      "query": {},
      "deeplink": {
        "rel": "delete",
        "href": "/api/{{.name}}s/{REPLACE_THIS_WITH_YOUR_QUERY_PARAM}",
        "method": "DELETE"
      }
    }
  }
}
