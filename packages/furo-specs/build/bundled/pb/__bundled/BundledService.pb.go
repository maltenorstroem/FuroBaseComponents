// Code generated by furo-proto-gen. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: __bundled/BundledService.proto

package taskmanager

import (
	auth "../auth"
	experiment "../experiment"
	person "../person"
	project "../project"
	projectfilter "../projectfilter"
	task "../task"
	tree "../tree"
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateTreeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *tree.Tree `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTreeServiceRequest) Reset() {
	*x = CreateTreeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTreeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTreeServiceRequest) ProtoMessage() {}

func (x *CreateTreeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTreeServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTreeServiceRequest) GetData() *tree.Tree {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteTreeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tre  string       `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteTreeServiceRequest) Reset() {
	*x = DeleteTreeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTreeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTreeServiceRequest) ProtoMessage() {}

func (x *DeleteTreeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTreeServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteTreeServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteTreeServiceRequest) GetTre() string {
	if x != nil {
		return x.Tre
	}
	return ""
}

func (x *DeleteTreeServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTreeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tre string `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
}

func (x *GetTreeServiceRequest) Reset() {
	*x = GetTreeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeServiceRequest) ProtoMessage() {}

func (x *GetTreeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeServiceRequest.ProtoReflect.Descriptor instead.
func (*GetTreeServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{2}
}

func (x *GetTreeServiceRequest) GetTre() string {
	if x != nil {
		return x.Tre
	}
	return ""
}

type ListTreeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a tree
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListTreeServiceRequest) Reset() {
	*x = ListTreeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreeServiceRequest) ProtoMessage() {}

func (x *ListTreeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreeServiceRequest.ProtoReflect.Descriptor instead.
func (*ListTreeServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{3}
}

func (x *ListTreeServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UpdateTreeServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tre  string     `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data *tree.Tree `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateTreeServiceRequest) Reset() {
	*x = UpdateTreeServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTreeServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTreeServiceRequest) ProtoMessage() {}

func (x *UpdateTreeServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTreeServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTreeServiceRequest) GetTre() string {
	if x != nil {
		return x.Tre
	}
	return ""
}

func (x *UpdateTreeServiceRequest) GetData() *tree.Tree {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProjectfilterServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProjectfilterServiceRequest) Reset() {
	*x = GetProjectfilterServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectfilterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectfilterServiceRequest) ProtoMessage() {}

func (x *GetProjectfilterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectfilterServiceRequest.ProtoReflect.Descriptor instead.
func (*GetProjectfilterServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{5}
}

type CreateAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *auth.Auth `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAuthServiceRequest) Reset() {
	*x = CreateAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthServiceRequest) ProtoMessage() {}

func (x *CreateAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAuthServiceRequest) GetData() *auth.Auth {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *empty.Empty `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteAuthServiceRequest) Reset() {
	*x = DeleteAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthServiceRequest) ProtoMessage() {}

func (x *DeleteAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAuthServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAuthServiceRequest) Reset() {
	*x = GetAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthServiceRequest) ProtoMessage() {}

func (x *GetAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*GetAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{8}
}

func (x *GetAuthServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a auth
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListAuthServiceRequest) Reset() {
	*x = ListAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthServiceRequest) ProtoMessage() {}

func (x *ListAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*ListAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{9}
}

func (x *ListAuthServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UpdateAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Data *auth.Auth `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateAuthServiceRequest) Reset() {
	*x = UpdateAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthServiceRequest) ProtoMessage() {}

func (x *UpdateAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAuthServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateAuthServiceRequest) GetData() *auth.Auth {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreatePersonServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *person.Person `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreatePersonServiceRequest) Reset() {
	*x = CreatePersonServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePersonServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePersonServiceRequest) ProtoMessage() {}

func (x *CreatePersonServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePersonServiceRequest.ProtoReflect.Descriptor instead.
func (*CreatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePersonServiceRequest) GetData() *person.Person {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeletePersonServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prs  string       `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeletePersonServiceRequest) Reset() {
	*x = DeletePersonServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePersonServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePersonServiceRequest) ProtoMessage() {}

func (x *DeletePersonServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePersonServiceRequest.ProtoReflect.Descriptor instead.
func (*DeletePersonServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{12}
}

func (x *DeletePersonServiceRequest) GetPrs() string {
	if x != nil {
		return x.Prs
	}
	return ""
}

func (x *DeletePersonServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPersonServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prs string `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
}

func (x *GetPersonServiceRequest) Reset() {
	*x = GetPersonServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPersonServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonServiceRequest) ProtoMessage() {}

func (x *GetPersonServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonServiceRequest.ProtoReflect.Descriptor instead.
func (*GetPersonServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{13}
}

func (x *GetPersonServiceRequest) GetPrs() string {
	if x != nil {
		return x.Prs
	}
	return ""
}

type ListPersonServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a person
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListPersonServiceRequest) Reset() {
	*x = ListPersonServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersonServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersonServiceRequest) ProtoMessage() {}

func (x *ListPersonServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersonServiceRequest.ProtoReflect.Descriptor instead.
func (*ListPersonServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{14}
}

func (x *ListPersonServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UpdatePersonServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prs  string         `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data *person.Person `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdatePersonServiceRequest) Reset() {
	*x = UpdatePersonServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePersonServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePersonServiceRequest) ProtoMessage() {}

func (x *UpdatePersonServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePersonServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePersonServiceRequest) GetPrs() string {
	if x != nil {
		return x.Prs
	}
	return ""
}

func (x *UpdatePersonServiceRequest) GetData() *person.Person {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateProjectServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *project.Project `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateProjectServiceRequest) Reset() {
	*x = CreateProjectServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectServiceRequest) ProtoMessage() {}

func (x *CreateProjectServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{16}
}

func (x *CreateProjectServiceRequest) GetData() *project.Project {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteProjectServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prj  string       `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteProjectServiceRequest) Reset() {
	*x = DeleteProjectServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectServiceRequest) ProtoMessage() {}

func (x *DeleteProjectServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProjectServiceRequest) GetPrj() string {
	if x != nil {
		return x.Prj
	}
	return ""
}

func (x *DeleteProjectServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProjectServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prj string `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
}

func (x *GetProjectServiceRequest) Reset() {
	*x = GetProjectServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectServiceRequest) ProtoMessage() {}

func (x *GetProjectServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectServiceRequest.ProtoReflect.Descriptor instead.
func (*GetProjectServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{18}
}

func (x *GetProjectServiceRequest) GetPrj() string {
	if x != nil {
		return x.Prj
	}
	return ""
}

type ListProjectServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a project
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListProjectServiceRequest) Reset() {
	*x = ListProjectServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectServiceRequest) ProtoMessage() {}

func (x *ListProjectServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectServiceRequest.ProtoReflect.Descriptor instead.
func (*ListProjectServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{19}
}

func (x *ListProjectServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UpdateProjectServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prj  string           `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data *project.Project `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateProjectServiceRequest) Reset() {
	*x = UpdateProjectServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectServiceRequest) ProtoMessage() {}

func (x *UpdateProjectServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateProjectServiceRequest) GetPrj() string {
	if x != nil {
		return x.Prj
	}
	return ""
}

func (x *UpdateProjectServiceRequest) GetData() *project.Project {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListProjectMembersServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a member
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListProjectMembersServiceRequest) Reset() {
	*x = ListProjectMembersServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectMembersServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectMembersServiceRequest) ProtoMessage() {}

func (x *ListProjectMembersServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectMembersServiceRequest.ProtoReflect.Descriptor instead.
func (*ListProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{21}
}

func (x *ListProjectMembersServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UnsubscribeProjectMembersServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prj  string               `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Prs  string               `protobuf:"bytes,2,opt,name=prs,proto3" json:"prs,omitempty"`
	Data *person.PersonEntity `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UnsubscribeProjectMembersServiceRequest) Reset() {
	*x = UnsubscribeProjectMembersServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeProjectMembersServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeProjectMembersServiceRequest) ProtoMessage() {}

func (x *UnsubscribeProjectMembersServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeProjectMembersServiceRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{22}
}

func (x *UnsubscribeProjectMembersServiceRequest) GetPrj() string {
	if x != nil {
		return x.Prj
	}
	return ""
}

func (x *UnsubscribeProjectMembersServiceRequest) GetPrs() string {
	if x != nil {
		return x.Prs
	}
	return ""
}

func (x *UnsubscribeProjectMembersServiceRequest) GetData() *person.PersonEntity {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTaskServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *task.Task `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTaskServiceRequest) Reset() {
	*x = CreateTaskServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskServiceRequest) ProtoMessage() {}

func (x *CreateTaskServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{23}
}

func (x *CreateTaskServiceRequest) GetData() *task.Task {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteTaskServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsk  string       `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteTaskServiceRequest) Reset() {
	*x = DeleteTaskServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskServiceRequest) ProtoMessage() {}

func (x *DeleteTaskServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteTaskServiceRequest) GetTsk() string {
	if x != nil {
		return x.Tsk
	}
	return ""
}

func (x *DeleteTaskServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTaskServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsk string `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
}

func (x *GetTaskServiceRequest) Reset() {
	*x = GetTaskServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskServiceRequest) ProtoMessage() {}

func (x *GetTaskServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskServiceRequest.ProtoReflect.Descriptor instead.
func (*GetTaskServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{25}
}

func (x *GetTaskServiceRequest) GetTsk() string {
	if x != nil {
		return x.Tsk
	}
	return ""
}

type ListTaskServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Partial representation (comma separated list of field names), ?fields=
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	//The response message will be filtered by the fields before being sent back to the client, filter=[[&#39;id&#39;,&#39;eq&#39;,&#39;1&#39;]]
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	//Specifies the result ordering for List requests. The default sorting order is ascending, ?order_by=foo desc,bar
	OrderBy string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	//Use this field to specify the maximum number of results to be returned by the server.
	//    //The server may further constrain the maximum number of results returned in a single page.
	//    //If the page_size is 0, the server will decide the number of results to be returned. page_size=15
	PageSize string `protobuf:"bytes,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//Query term to search a {{.name}}
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	//allows the client to specify which view of the resource it wants to receive in the response. view=BASIC
	View string `protobuf:"bytes,6,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *ListTaskServiceRequest) Reset() {
	*x = ListTaskServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskServiceRequest) ProtoMessage() {}

func (x *ListTaskServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskServiceRequest.ProtoReflect.Descriptor instead.
func (*ListTaskServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{26}
}

func (x *ListTaskServiceRequest) GetFields() string {
	if x != nil {
		return x.Fields
	}
	return ""
}

func (x *ListTaskServiceRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTaskServiceRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListTaskServiceRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *ListTaskServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListTaskServiceRequest) GetView() string {
	if x != nil {
		return x.View
	}
	return ""
}

type UpdateTaskServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsk  string     `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data *task.Task `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateTaskServiceRequest) Reset() {
	*x = UpdateTaskServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskServiceRequest) ProtoMessage() {}

func (x *UpdateTaskServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateTaskServiceRequest) GetTsk() string {
	if x != nil {
		return x.Tsk
	}
	return ""
}

func (x *UpdateTaskServiceRequest) GetData() *task.Task {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *experiment.Experiment `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateExperimentServiceRequest) Reset() {
	*x = CreateExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExperimentServiceRequest) ProtoMessage() {}

func (x *CreateExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{28}
}

func (x *CreateExperimentServiceRequest) GetData() *experiment.Experiment {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTemplateExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *empty.Empty `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTemplateExperimentServiceRequest) Reset() {
	*x = CreateTemplateExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemplateExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateExperimentServiceRequest) ProtoMessage() {}

func (x *CreateTemplateExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{29}
}

func (x *CreateTemplateExperimentServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp  string       `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	Data *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteExperimentServiceRequest) Reset() {
	*x = DeleteExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExperimentServiceRequest) ProtoMessage() {}

func (x *DeleteExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteExperimentServiceRequest) GetExp() string {
	if x != nil {
		return x.Exp
	}
	return ""
}

func (x *DeleteExperimentServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp string `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (x *GetExperimentServiceRequest) Reset() {
	*x = GetExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentServiceRequest) ProtoMessage() {}

func (x *GetExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*GetExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{31}
}

func (x *GetExperimentServiceRequest) GetExp() string {
	if x != nil {
		return x.Exp
	}
	return ""
}

type ListExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a experiment
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListExperimentServiceRequest) Reset() {
	*x = ListExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExperimentServiceRequest) ProtoMessage() {}

func (x *ListExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*ListExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{32}
}

func (x *ListExperimentServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type ReleaseExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *experiment.ExperimentEntity `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReleaseExperimentServiceRequest) Reset() {
	*x = ReleaseExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseExperimentServiceRequest) ProtoMessage() {}

func (x *ReleaseExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*ReleaseExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{33}
}

func (x *ReleaseExperimentServiceRequest) GetData() *experiment.ExperimentEntity {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateExperimentServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exp  string                 `protobuf:"bytes,1,opt,name=exp,proto3" json:"exp,omitempty"`
	Data *experiment.Experiment `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateExperimentServiceRequest) Reset() {
	*x = UpdateExperimentServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file____bundled_BundledService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExperimentServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExperimentServiceRequest) ProtoMessage() {}

func (x *UpdateExperimentServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file____bundled_BundledService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExperimentServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateExperimentServiceRequest) Descriptor() ([]byte, []int) {
	return file____bundled_BundledService_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateExperimentServiceRequest) GetExp() string {
	if x != nil {
		return x.Exp
	}
	return ""
}

func (x *UpdateExperimentServiceRequest) GetData() *experiment.Experiment {
	if x != nil {
		return x.Data
	}
	return nil
}

var File____bundled_BundledService_proto protoreflect.FileDescriptor

var file____bundled_BundledService_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x5f, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x2f, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x72, 0x65,
	0x65, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x75,
	0x74, 0x68, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x72,
	0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x72, 0x65, 0x22, 0x26, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71,
	0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x72, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74,
	0x72, 0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x3a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x18,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x26, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x73,
	0x22, 0x28, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0x52, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x43,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x72, 0x6a, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x72, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x6a, 0x22, 0x29,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0x55, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x6a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x6a, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x30, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x22, 0x77, 0x0a, 0x27, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x72, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72, 0x6a, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x72,
	0x73, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x73, 0x6b, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x29, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x73, 0x6b, 0x22, 0xa2, 0x01, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x73, 0x6b, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x4c, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a,
	0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x22, 0x2c, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x22, 0x53, 0x0a, 0x1f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xdb, 0x20, 0x0a, 0x0e, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x0f, 0x2f, 0x6d, 0x6f, 0x63, 0x6b,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x6a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x25,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x65, 0x7d, 0x12, 0x67, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x72,
	0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x65, 0x7d, 0x2f, 0x67, 0x65, 0x74,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x54,
	0x72, 0x65, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x72,
	0x65, 0x65, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x32, 0x15, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x74, 0x72, 0x65, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x65, 0x7d, 0x3a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x8f, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x12, 0x22, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x22, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x3a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12,
	0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x11,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x2a, 0x09, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x59, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x5a, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x12, 0x65, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x32, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x73, 0x2f, 0x7b, 0x75, 0x69, 0x64, 0x7d, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x74, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x27, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x7c, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23,
	0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x70, 0x72, 0x73, 0x7d, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x6a,
	0x73, 0x6f, 0x6e, 0x12, 0x71, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x24, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x73, 0x7d, 0x2f, 0x67, 0x65,
	0x74, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x80, 0x01, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2b, 0x32, 0x23, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x73, 0x7d, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x79,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x28, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6d, 0x6f, 0x63, 0x6b,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6a, 0x7d, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12,
	0x21, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6a, 0x7d, 0x2f, 0x67, 0x65, 0x74, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x12, 0x78, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c,
	0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6a,
	0x7d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x6c, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x20,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x34, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6a, 0x7d, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x73, 0x7d, 0x3a, 0x75, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x6a, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x6d,
	0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21,
	0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f,
	0x7b, 0x74, 0x73, 0x6b, 0x7d, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x12, 0x67, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x22, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6d, 0x6f, 0x63,
	0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x7b, 0x74, 0x73, 0x6b,
	0x7d, 0x2f, 0x67, 0x65, 0x74, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x6d, 0x6f, 0x63,
	0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x70, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x7b, 0x74, 0x73, 0x6b, 0x7d, 0x2f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x15, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x9b, 0x01, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x24,
	0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x7c, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x6d, 0x6f,
	0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x70, 0x7d, 0x12, 0x85, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x6d, 0x6f, 0x63,
	0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x65, 0x78, 0x70, 0x7d, 0x2f, 0x67, 0x65, 0x74, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x12, 0x7d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x88, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x22, 0x1f, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x31, 0x3a, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x88, 0x01, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2b, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x32, 0x1b, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x70, 0x7d, 0x3a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x57, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x42, 0x08, 0x41, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x15, 0x5f, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x3b, 0x74, 0x61, 0x73, 0x6b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x47, 0x50, 0x42, 0xaa, 0x02, 0x1e,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x57, 0x65, 0x6c, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file____bundled_BundledService_proto_rawDescOnce sync.Once
	file____bundled_BundledService_proto_rawDescData = file____bundled_BundledService_proto_rawDesc
)

func file____bundled_BundledService_proto_rawDescGZIP() []byte {
	file____bundled_BundledService_proto_rawDescOnce.Do(func() {
		file____bundled_BundledService_proto_rawDescData = protoimpl.X.CompressGZIP(file____bundled_BundledService_proto_rawDescData)
	})
	return file____bundled_BundledService_proto_rawDescData
}

var file____bundled_BundledService_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file____bundled_BundledService_proto_goTypes = []interface{}{
	(*CreateTreeServiceRequest)(nil),                // 0: taskmanager.CreateTreeServiceRequest
	(*DeleteTreeServiceRequest)(nil),                // 1: taskmanager.DeleteTreeServiceRequest
	(*GetTreeServiceRequest)(nil),                   // 2: taskmanager.GetTreeServiceRequest
	(*ListTreeServiceRequest)(nil),                  // 3: taskmanager.ListTreeServiceRequest
	(*UpdateTreeServiceRequest)(nil),                // 4: taskmanager.UpdateTreeServiceRequest
	(*GetProjectfilterServiceRequest)(nil),          // 5: taskmanager.GetProjectfilterServiceRequest
	(*CreateAuthServiceRequest)(nil),                // 6: taskmanager.CreateAuthServiceRequest
	(*DeleteAuthServiceRequest)(nil),                // 7: taskmanager.DeleteAuthServiceRequest
	(*GetAuthServiceRequest)(nil),                   // 8: taskmanager.GetAuthServiceRequest
	(*ListAuthServiceRequest)(nil),                  // 9: taskmanager.ListAuthServiceRequest
	(*UpdateAuthServiceRequest)(nil),                // 10: taskmanager.UpdateAuthServiceRequest
	(*CreatePersonServiceRequest)(nil),              // 11: taskmanager.CreatePersonServiceRequest
	(*DeletePersonServiceRequest)(nil),              // 12: taskmanager.DeletePersonServiceRequest
	(*GetPersonServiceRequest)(nil),                 // 13: taskmanager.GetPersonServiceRequest
	(*ListPersonServiceRequest)(nil),                // 14: taskmanager.ListPersonServiceRequest
	(*UpdatePersonServiceRequest)(nil),              // 15: taskmanager.UpdatePersonServiceRequest
	(*CreateProjectServiceRequest)(nil),             // 16: taskmanager.CreateProjectServiceRequest
	(*DeleteProjectServiceRequest)(nil),             // 17: taskmanager.DeleteProjectServiceRequest
	(*GetProjectServiceRequest)(nil),                // 18: taskmanager.GetProjectServiceRequest
	(*ListProjectServiceRequest)(nil),               // 19: taskmanager.ListProjectServiceRequest
	(*UpdateProjectServiceRequest)(nil),             // 20: taskmanager.UpdateProjectServiceRequest
	(*ListProjectMembersServiceRequest)(nil),        // 21: taskmanager.ListProjectMembersServiceRequest
	(*UnsubscribeProjectMembersServiceRequest)(nil), // 22: taskmanager.UnsubscribeProjectMembersServiceRequest
	(*CreateTaskServiceRequest)(nil),                // 23: taskmanager.CreateTaskServiceRequest
	(*DeleteTaskServiceRequest)(nil),                // 24: taskmanager.DeleteTaskServiceRequest
	(*GetTaskServiceRequest)(nil),                   // 25: taskmanager.GetTaskServiceRequest
	(*ListTaskServiceRequest)(nil),                  // 26: taskmanager.ListTaskServiceRequest
	(*UpdateTaskServiceRequest)(nil),                // 27: taskmanager.UpdateTaskServiceRequest
	(*CreateExperimentServiceRequest)(nil),          // 28: taskmanager.CreateExperimentServiceRequest
	(*CreateTemplateExperimentServiceRequest)(nil),  // 29: taskmanager.CreateTemplateExperimentServiceRequest
	(*DeleteExperimentServiceRequest)(nil),          // 30: taskmanager.DeleteExperimentServiceRequest
	(*GetExperimentServiceRequest)(nil),             // 31: taskmanager.GetExperimentServiceRequest
	(*ListExperimentServiceRequest)(nil),            // 32: taskmanager.ListExperimentServiceRequest
	(*ReleaseExperimentServiceRequest)(nil),         // 33: taskmanager.ReleaseExperimentServiceRequest
	(*UpdateExperimentServiceRequest)(nil),          // 34: taskmanager.UpdateExperimentServiceRequest
	(*tree.Tree)(nil),                               // 35: tree.Tree
	(*empty.Empty)(nil),                             // 36: google.protobuf.Empty
	(*auth.Auth)(nil),                               // 37: auth.Auth
	(*person.Person)(nil),                           // 38: person.Person
	(*project.Project)(nil),                         // 39: project.Project
	(*person.PersonEntity)(nil),                     // 40: person.PersonEntity
	(*task.Task)(nil),                               // 41: task.Task
	(*experiment.Experiment)(nil),                   // 42: experiment.Experiment
	(*experiment.ExperimentEntity)(nil),             // 43: experiment.ExperimentEntity
	(*tree.TreeEntity)(nil),                         // 44: tree.TreeEntity
	(*tree.TreeCollection)(nil),                     // 45: tree.TreeCollection
	(*projectfilter.ProjectfilterEntity)(nil),       // 46: projectfilter.ProjectfilterEntity
	(*auth.AuthEntity)(nil),                         // 47: auth.AuthEntity
	(*auth.AuthCollection)(nil),                     // 48: auth.AuthCollection
	(*person.PersonCollection)(nil),                 // 49: person.PersonCollection
	(*project.ProjectEntity)(nil),                   // 50: project.ProjectEntity
	(*project.ProjectCollection)(nil),               // 51: project.ProjectCollection
	(*task.TaskEntity)(nil),                         // 52: task.TaskEntity
	(*task.TaskCollection)(nil),                     // 53: task.TaskCollection
	(*experiment.ExperimentCollection)(nil),         // 54: experiment.ExperimentCollection
}
var file____bundled_BundledService_proto_depIdxs = []int32{
	35, // 0: taskmanager.CreateTreeServiceRequest.data:type_name -> tree.Tree
	36, // 1: taskmanager.DeleteTreeServiceRequest.data:type_name -> google.protobuf.Empty
	35, // 2: taskmanager.UpdateTreeServiceRequest.data:type_name -> tree.Tree
	37, // 3: taskmanager.CreateAuthServiceRequest.data:type_name -> auth.Auth
	36, // 4: taskmanager.DeleteAuthServiceRequest.data:type_name -> google.protobuf.Empty
	37, // 5: taskmanager.UpdateAuthServiceRequest.data:type_name -> auth.Auth
	38, // 6: taskmanager.CreatePersonServiceRequest.data:type_name -> person.Person
	36, // 7: taskmanager.DeletePersonServiceRequest.data:type_name -> google.protobuf.Empty
	38, // 8: taskmanager.UpdatePersonServiceRequest.data:type_name -> person.Person
	39, // 9: taskmanager.CreateProjectServiceRequest.data:type_name -> project.Project
	36, // 10: taskmanager.DeleteProjectServiceRequest.data:type_name -> google.protobuf.Empty
	39, // 11: taskmanager.UpdateProjectServiceRequest.data:type_name -> project.Project
	40, // 12: taskmanager.UnsubscribeProjectMembersServiceRequest.data:type_name -> person.PersonEntity
	41, // 13: taskmanager.CreateTaskServiceRequest.data:type_name -> task.Task
	36, // 14: taskmanager.DeleteTaskServiceRequest.data:type_name -> google.protobuf.Empty
	41, // 15: taskmanager.UpdateTaskServiceRequest.data:type_name -> task.Task
	42, // 16: taskmanager.CreateExperimentServiceRequest.data:type_name -> experiment.Experiment
	36, // 17: taskmanager.CreateTemplateExperimentServiceRequest.data:type_name -> google.protobuf.Empty
	36, // 18: taskmanager.DeleteExperimentServiceRequest.data:type_name -> google.protobuf.Empty
	43, // 19: taskmanager.ReleaseExperimentServiceRequest.data:type_name -> experiment.ExperimentEntity
	42, // 20: taskmanager.UpdateExperimentServiceRequest.data:type_name -> experiment.Experiment
	0,  // 21: taskmanager.BundledService.CreateTree:input_type -> taskmanager.CreateTreeServiceRequest
	1,  // 22: taskmanager.BundledService.DeleteTree:input_type -> taskmanager.DeleteTreeServiceRequest
	2,  // 23: taskmanager.BundledService.GetTree:input_type -> taskmanager.GetTreeServiceRequest
	3,  // 24: taskmanager.BundledService.ListTrees:input_type -> taskmanager.ListTreeServiceRequest
	4,  // 25: taskmanager.BundledService.UpdateTree:input_type -> taskmanager.UpdateTreeServiceRequest
	5,  // 26: taskmanager.BundledService.GetProjectfilter:input_type -> taskmanager.GetProjectfilterServiceRequest
	6,  // 27: taskmanager.BundledService.CreateAuth:input_type -> taskmanager.CreateAuthServiceRequest
	7,  // 28: taskmanager.BundledService.Logout:input_type -> taskmanager.DeleteAuthServiceRequest
	8,  // 29: taskmanager.BundledService.GetAuth:input_type -> taskmanager.GetAuthServiceRequest
	9,  // 30: taskmanager.BundledService.ListAuths:input_type -> taskmanager.ListAuthServiceRequest
	10, // 31: taskmanager.BundledService.UpdateAuth:input_type -> taskmanager.UpdateAuthServiceRequest
	11, // 32: taskmanager.BundledService.CreatePerson:input_type -> taskmanager.CreatePersonServiceRequest
	12, // 33: taskmanager.BundledService.DeletePerson:input_type -> taskmanager.DeletePersonServiceRequest
	13, // 34: taskmanager.BundledService.GetPerson:input_type -> taskmanager.GetPersonServiceRequest
	14, // 35: taskmanager.BundledService.ListPersons:input_type -> taskmanager.ListPersonServiceRequest
	15, // 36: taskmanager.BundledService.UpdatePerson:input_type -> taskmanager.UpdatePersonServiceRequest
	16, // 37: taskmanager.BundledService.CreateProject:input_type -> taskmanager.CreateProjectServiceRequest
	17, // 38: taskmanager.BundledService.DeleteProject:input_type -> taskmanager.DeleteProjectServiceRequest
	18, // 39: taskmanager.BundledService.GetProject:input_type -> taskmanager.GetProjectServiceRequest
	19, // 40: taskmanager.BundledService.ListProjects:input_type -> taskmanager.ListProjectServiceRequest
	20, // 41: taskmanager.BundledService.UpdateProject:input_type -> taskmanager.UpdateProjectServiceRequest
	21, // 42: taskmanager.BundledService.ListMembers:input_type -> taskmanager.ListProjectMembersServiceRequest
	22, // 43: taskmanager.BundledService.UnsubscribeProjectMembersService:input_type -> taskmanager.UnsubscribeProjectMembersServiceRequest
	23, // 44: taskmanager.BundledService.CreateTask:input_type -> taskmanager.CreateTaskServiceRequest
	24, // 45: taskmanager.BundledService.DeleteTask:input_type -> taskmanager.DeleteTaskServiceRequest
	25, // 46: taskmanager.BundledService.GetTask:input_type -> taskmanager.GetTaskServiceRequest
	26, // 47: taskmanager.BundledService.ListTasks:input_type -> taskmanager.ListTaskServiceRequest
	27, // 48: taskmanager.BundledService.UpdateTask:input_type -> taskmanager.UpdateTaskServiceRequest
	28, // 49: taskmanager.BundledService.CreateExperiment:input_type -> taskmanager.CreateExperimentServiceRequest
	29, // 50: taskmanager.BundledService.CreateTemplateExperiment:input_type -> taskmanager.CreateTemplateExperimentServiceRequest
	30, // 51: taskmanager.BundledService.DeleteExperiment:input_type -> taskmanager.DeleteExperimentServiceRequest
	31, // 52: taskmanager.BundledService.GetExperiment:input_type -> taskmanager.GetExperimentServiceRequest
	32, // 53: taskmanager.BundledService.ListExperiments:input_type -> taskmanager.ListExperimentServiceRequest
	33, // 54: taskmanager.BundledService.ReleaseExperiment:input_type -> taskmanager.ReleaseExperimentServiceRequest
	34, // 55: taskmanager.BundledService.UpdateExperiment:input_type -> taskmanager.UpdateExperimentServiceRequest
	44, // 56: taskmanager.BundledService.CreateTree:output_type -> tree.TreeEntity
	36, // 57: taskmanager.BundledService.DeleteTree:output_type -> google.protobuf.Empty
	44, // 58: taskmanager.BundledService.GetTree:output_type -> tree.TreeEntity
	45, // 59: taskmanager.BundledService.ListTrees:output_type -> tree.TreeCollection
	44, // 60: taskmanager.BundledService.UpdateTree:output_type -> tree.TreeEntity
	46, // 61: taskmanager.BundledService.GetProjectfilter:output_type -> projectfilter.ProjectfilterEntity
	47, // 62: taskmanager.BundledService.CreateAuth:output_type -> auth.AuthEntity
	36, // 63: taskmanager.BundledService.Logout:output_type -> google.protobuf.Empty
	47, // 64: taskmanager.BundledService.GetAuth:output_type -> auth.AuthEntity
	48, // 65: taskmanager.BundledService.ListAuths:output_type -> auth.AuthCollection
	47, // 66: taskmanager.BundledService.UpdateAuth:output_type -> auth.AuthEntity
	40, // 67: taskmanager.BundledService.CreatePerson:output_type -> person.PersonEntity
	36, // 68: taskmanager.BundledService.DeletePerson:output_type -> google.protobuf.Empty
	40, // 69: taskmanager.BundledService.GetPerson:output_type -> person.PersonEntity
	49, // 70: taskmanager.BundledService.ListPersons:output_type -> person.PersonCollection
	40, // 71: taskmanager.BundledService.UpdatePerson:output_type -> person.PersonEntity
	50, // 72: taskmanager.BundledService.CreateProject:output_type -> project.ProjectEntity
	36, // 73: taskmanager.BundledService.DeleteProject:output_type -> google.protobuf.Empty
	50, // 74: taskmanager.BundledService.GetProject:output_type -> project.ProjectEntity
	51, // 75: taskmanager.BundledService.ListProjects:output_type -> project.ProjectCollection
	50, // 76: taskmanager.BundledService.UpdateProject:output_type -> project.ProjectEntity
	49, // 77: taskmanager.BundledService.ListMembers:output_type -> person.PersonCollection
	49, // 78: taskmanager.BundledService.UnsubscribeProjectMembersService:output_type -> person.PersonCollection
	52, // 79: taskmanager.BundledService.CreateTask:output_type -> task.TaskEntity
	36, // 80: taskmanager.BundledService.DeleteTask:output_type -> google.protobuf.Empty
	52, // 81: taskmanager.BundledService.GetTask:output_type -> task.TaskEntity
	53, // 82: taskmanager.BundledService.ListTasks:output_type -> task.TaskCollection
	52, // 83: taskmanager.BundledService.UpdateTask:output_type -> task.TaskEntity
	43, // 84: taskmanager.BundledService.CreateExperiment:output_type -> experiment.ExperimentEntity
	42, // 85: taskmanager.BundledService.CreateTemplateExperiment:output_type -> experiment.Experiment
	36, // 86: taskmanager.BundledService.DeleteExperiment:output_type -> google.protobuf.Empty
	43, // 87: taskmanager.BundledService.GetExperiment:output_type -> experiment.ExperimentEntity
	54, // 88: taskmanager.BundledService.ListExperiments:output_type -> experiment.ExperimentCollection
	36, // 89: taskmanager.BundledService.ReleaseExperiment:output_type -> google.protobuf.Empty
	43, // 90: taskmanager.BundledService.UpdateExperiment:output_type -> experiment.ExperimentEntity
	56, // [56:91] is the sub-list for method output_type
	21, // [21:56] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file____bundled_BundledService_proto_init() }
func file____bundled_BundledService_proto_init() {
	if File____bundled_BundledService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file____bundled_BundledService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTreeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTreeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTreeServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectfilterServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePersonServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePersonServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPersonServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersonServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePersonServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectMembersServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeProjectMembersServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemplateExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file____bundled_BundledService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExperimentServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file____bundled_BundledService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file____bundled_BundledService_proto_goTypes,
		DependencyIndexes: file____bundled_BundledService_proto_depIdxs,
		MessageInfos:      file____bundled_BundledService_proto_msgTypes,
	}.Build()
	File____bundled_BundledService_proto = out.File
	file____bundled_BundledService_proto_rawDesc = nil
	file____bundled_BundledService_proto_goTypes = nil
	file____bundled_BundledService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BundledServiceClient is the client API for BundledService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BundledServiceClient interface {
	// Creates a new Tree
	CreateTree(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// Delete a Tree
	DeleteTree(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTree(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTrees(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTree(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error)
	// The Get method takes zero or more parameters, and returns a ProjectfilterEntity which contains a Projectfilter
	GetProjectfilter(ctx context.Context, in *GetProjectfilterServiceRequest, opts ...grpc.CallOption) (*projectfilter.ProjectfilterEntity, error)
	// Creates a new Auth
	CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// Creates a new Person
	CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// Creates a new Project
	CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// Get a collection with PersonEntities
	ListMembers(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Creates a new Task
	CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error)
	// Updates a Task, partial updates are not supported
	UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error)
	// Creates a new Experiment
	CreateExperiment(ctx context.Context, in *CreateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
	// create an experiment template
	CreateTemplateExperiment(ctx context.Context, in *CreateTemplateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.Experiment, error)
	// Delete a Experiment
	DeleteExperiment(ctx context.Context, in *DeleteExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
	GetExperiment(ctx context.Context, in *GetExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
	// The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
	ListExperiments(ctx context.Context, in *ListExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentCollection, error)
	// Releases experiment
	ReleaseExperiment(ctx context.Context, in *ReleaseExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Updates a Experiment, partial updates are supported
	UpdateExperiment(ctx context.Context, in *UpdateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error)
}

type bundledServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBundledServiceClient(cc grpc.ClientConnInterface) BundledServiceClient {
	return &bundledServiceClient{cc}
}

func (c *bundledServiceClient) CreateTree(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteTree(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetTree(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListTrees(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeCollection, error) {
	out := new(tree.TreeCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListTrees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateTree(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*tree.TreeEntity, error) {
	out := new(tree.TreeEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetProjectfilter(ctx context.Context, in *GetProjectfilterServiceRequest, opts ...grpc.CallOption) (*projectfilter.ProjectfilterEntity, error) {
	out := new(projectfilter.ProjectfilterEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetProjectfilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error) {
	out := new(auth.AuthCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeletePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error) {
	out := new(project.ProjectCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListMembers(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UnsubscribeProjectMembersService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateTask(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteTask(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetTask(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListTasks(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskCollection, error) {
	out := new(task.TaskCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateTask(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*task.TaskEntity, error) {
	out := new(task.TaskEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateExperiment(ctx context.Context, in *CreateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) CreateTemplateExperiment(ctx context.Context, in *CreateTemplateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.Experiment, error) {
	out := new(experiment.Experiment)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/CreateTemplateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) DeleteExperiment(ctx context.Context, in *DeleteExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/DeleteExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) GetExperiment(ctx context.Context, in *GetExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/GetExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ListExperiments(ctx context.Context, in *ListExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentCollection, error) {
	out := new(experiment.ExperimentCollection)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ListExperiments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) ReleaseExperiment(ctx context.Context, in *ReleaseExperimentServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/ReleaseExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bundledServiceClient) UpdateExperiment(ctx context.Context, in *UpdateExperimentServiceRequest, opts ...grpc.CallOption) (*experiment.ExperimentEntity, error) {
	out := new(experiment.ExperimentEntity)
	err := c.cc.Invoke(ctx, "/taskmanager.BundledService/UpdateExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BundledServiceServer is the server API for BundledService service.
type BundledServiceServer interface {
	// Creates a new Tree
	CreateTree(context.Context, *CreateTreeServiceRequest) (*tree.TreeEntity, error)
	// Delete a Tree
	DeleteTree(context.Context, *DeleteTreeServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTree(context.Context, *GetTreeServiceRequest) (*tree.TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTrees(context.Context, *ListTreeServiceRequest) (*tree.TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTree(context.Context, *UpdateTreeServiceRequest) (*tree.TreeEntity, error)
	// The Get method takes zero or more parameters, and returns a ProjectfilterEntity which contains a Projectfilter
	GetProjectfilter(context.Context, *GetProjectfilterServiceRequest) (*projectfilter.ProjectfilterEntity, error)
	// Creates a new Auth
	CreateAuth(context.Context, *CreateAuthServiceRequest) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(context.Context, *DeleteAuthServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(context.Context, *GetAuthServiceRequest) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(context.Context, *ListAuthServiceRequest) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(context.Context, *UpdateAuthServiceRequest) (*auth.AuthEntity, error)
	// Creates a new Person
	CreatePerson(context.Context, *CreatePersonServiceRequest) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(context.Context, *DeletePersonServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(context.Context, *GetPersonServiceRequest) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(context.Context, *ListPersonServiceRequest) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(context.Context, *UpdatePersonServiceRequest) (*person.PersonEntity, error)
	// Creates a new Project
	CreateProject(context.Context, *CreateProjectServiceRequest) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(context.Context, *DeleteProjectServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(context.Context, *GetProjectServiceRequest) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(context.Context, *ListProjectServiceRequest) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(context.Context, *UpdateProjectServiceRequest) (*project.ProjectEntity, error)
	// Get a collection with PersonEntities
	ListMembers(context.Context, *ListProjectMembersServiceRequest) (*person.PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(context.Context, *UnsubscribeProjectMembersServiceRequest) (*person.PersonCollection, error)
	// Creates a new Task
	CreateTask(context.Context, *CreateTaskServiceRequest) (*task.TaskEntity, error)
	// Delete a Task
	DeleteTask(context.Context, *DeleteTaskServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTask(context.Context, *GetTaskServiceRequest) (*task.TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTasks(context.Context, *ListTaskServiceRequest) (*task.TaskCollection, error)
	// Updates a Task, partial updates are not supported
	UpdateTask(context.Context, *UpdateTaskServiceRequest) (*task.TaskEntity, error)
	// Creates a new Experiment
	CreateExperiment(context.Context, *CreateExperimentServiceRequest) (*experiment.ExperimentEntity, error)
	// create an experiment template
	CreateTemplateExperiment(context.Context, *CreateTemplateExperimentServiceRequest) (*experiment.Experiment, error)
	// Delete a Experiment
	DeleteExperiment(context.Context, *DeleteExperimentServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
	GetExperiment(context.Context, *GetExperimentServiceRequest) (*experiment.ExperimentEntity, error)
	// The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
	ListExperiments(context.Context, *ListExperimentServiceRequest) (*experiment.ExperimentCollection, error)
	// Releases experiment
	ReleaseExperiment(context.Context, *ReleaseExperimentServiceRequest) (*empty.Empty, error)
	// Updates a Experiment, partial updates are supported
	UpdateExperiment(context.Context, *UpdateExperimentServiceRequest) (*experiment.ExperimentEntity, error)
}

// UnimplementedBundledServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBundledServiceServer struct {
}

func (*UnimplementedBundledServiceServer) CreateTree(context.Context, *CreateTreeServiceRequest) (*tree.TreeEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTree not implemented")
}
func (*UnimplementedBundledServiceServer) DeleteTree(context.Context, *DeleteTreeServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTree not implemented")
}
func (*UnimplementedBundledServiceServer) GetTree(context.Context, *GetTreeServiceRequest) (*tree.TreeEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTree not implemented")
}
func (*UnimplementedBundledServiceServer) ListTrees(context.Context, *ListTreeServiceRequest) (*tree.TreeCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTrees not implemented")
}
func (*UnimplementedBundledServiceServer) UpdateTree(context.Context, *UpdateTreeServiceRequest) (*tree.TreeEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTree not implemented")
}
func (*UnimplementedBundledServiceServer) GetProjectfilter(context.Context, *GetProjectfilterServiceRequest) (*projectfilter.ProjectfilterEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjectfilter not implemented")
}
func (*UnimplementedBundledServiceServer) CreateAuth(context.Context, *CreateAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuth not implemented")
}
func (*UnimplementedBundledServiceServer) Logout(context.Context, *DeleteAuthServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedBundledServiceServer) GetAuth(context.Context, *GetAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuth not implemented")
}
func (*UnimplementedBundledServiceServer) ListAuths(context.Context, *ListAuthServiceRequest) (*auth.AuthCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuths not implemented")
}
func (*UnimplementedBundledServiceServer) UpdateAuth(context.Context, *UpdateAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuth not implemented")
}
func (*UnimplementedBundledServiceServer) CreatePerson(context.Context, *CreatePersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePerson not implemented")
}
func (*UnimplementedBundledServiceServer) DeletePerson(context.Context, *DeletePersonServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePerson not implemented")
}
func (*UnimplementedBundledServiceServer) GetPerson(context.Context, *GetPersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerson not implemented")
}
func (*UnimplementedBundledServiceServer) ListPersons(context.Context, *ListPersonServiceRequest) (*person.PersonCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPersons not implemented")
}
func (*UnimplementedBundledServiceServer) UpdatePerson(context.Context, *UpdatePersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePerson not implemented")
}
func (*UnimplementedBundledServiceServer) CreateProject(context.Context, *CreateProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedBundledServiceServer) DeleteProject(context.Context, *DeleteProjectServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedBundledServiceServer) GetProject(context.Context, *GetProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedBundledServiceServer) ListProjects(context.Context, *ListProjectServiceRequest) (*project.ProjectCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedBundledServiceServer) UpdateProject(context.Context, *UpdateProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}
func (*UnimplementedBundledServiceServer) ListMembers(context.Context, *ListProjectMembersServiceRequest) (*person.PersonCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMembers not implemented")
}
func (*UnimplementedBundledServiceServer) UnsubscribeProjectMembersService(context.Context, *UnsubscribeProjectMembersServiceRequest) (*person.PersonCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnsubscribeProjectMembersService not implemented")
}
func (*UnimplementedBundledServiceServer) CreateTask(context.Context, *CreateTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedBundledServiceServer) DeleteTask(context.Context, *DeleteTaskServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedBundledServiceServer) GetTask(context.Context, *GetTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTask not implemented")
}
func (*UnimplementedBundledServiceServer) ListTasks(context.Context, *ListTaskServiceRequest) (*task.TaskCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTasks not implemented")
}
func (*UnimplementedBundledServiceServer) UpdateTask(context.Context, *UpdateTaskServiceRequest) (*task.TaskEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedBundledServiceServer) CreateExperiment(context.Context, *CreateExperimentServiceRequest) (*experiment.ExperimentEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExperiment not implemented")
}
func (*UnimplementedBundledServiceServer) CreateTemplateExperiment(context.Context, *CreateTemplateExperimentServiceRequest) (*experiment.Experiment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTemplateExperiment not implemented")
}
func (*UnimplementedBundledServiceServer) DeleteExperiment(context.Context, *DeleteExperimentServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExperiment not implemented")
}
func (*UnimplementedBundledServiceServer) GetExperiment(context.Context, *GetExperimentServiceRequest) (*experiment.ExperimentEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExperiment not implemented")
}
func (*UnimplementedBundledServiceServer) ListExperiments(context.Context, *ListExperimentServiceRequest) (*experiment.ExperimentCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExperiments not implemented")
}
func (*UnimplementedBundledServiceServer) ReleaseExperiment(context.Context, *ReleaseExperimentServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseExperiment not implemented")
}
func (*UnimplementedBundledServiceServer) UpdateExperiment(context.Context, *UpdateExperimentServiceRequest) (*experiment.ExperimentEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExperiment not implemented")
}

func RegisterBundledServiceServer(s *grpc.Server, srv BundledServiceServer) {
	s.RegisterService(&_BundledService_serviceDesc, srv)
}

func _BundledService_CreateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTree(ctx, req.(*CreateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteTree(ctx, req.(*DeleteTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetTree(ctx, req.(*GetTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListTrees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListTrees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListTrees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListTrees(ctx, req.(*ListTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateTree(ctx, req.(*UpdateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetProjectfilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectfilterServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetProjectfilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetProjectfilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetProjectfilter(ctx, req.(*GetProjectfilterServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateAuth(ctx, req.(*CreateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).Logout(ctx, req.(*DeleteAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetAuth(ctx, req.(*GetAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListAuths(ctx, req.(*ListAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateAuth(ctx, req.(*UpdateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreatePerson(ctx, req.(*CreatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeletePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeletePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeletePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeletePerson(ctx, req.(*DeletePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetPerson(ctx, req.(*GetPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListPersons(ctx, req.(*ListPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdatePerson(ctx, req.(*UpdatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateProject(ctx, req.(*CreateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteProject(ctx, req.(*DeleteProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetProject(ctx, req.(*GetProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListProjects(ctx, req.(*ListProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateProject(ctx, req.(*UpdateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListMembers(ctx, req.(*ListProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UnsubscribeProjectMembersService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UnsubscribeProjectMembersService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UnsubscribeProjectMembersService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UnsubscribeProjectMembersService(ctx, req.(*UnsubscribeProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTask(ctx, req.(*CreateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteTask(ctx, req.(*DeleteTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetTask(ctx, req.(*GetTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListTasks(ctx, req.(*ListTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateTask(ctx, req.(*UpdateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateExperiment(ctx, req.(*CreateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_CreateTemplateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTemplateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).CreateTemplateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/CreateTemplateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).CreateTemplateExperiment(ctx, req.(*CreateTemplateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_DeleteExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).DeleteExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/DeleteExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).DeleteExperiment(ctx, req.(*DeleteExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_GetExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).GetExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/GetExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).GetExperiment(ctx, req.(*GetExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ListExperiments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ListExperiments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ListExperiments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ListExperiments(ctx, req.(*ListExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_ReleaseExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).ReleaseExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/ReleaseExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).ReleaseExperiment(ctx, req.(*ReleaseExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BundledService_UpdateExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExperimentServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BundledServiceServer).UpdateExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taskmanager.BundledService/UpdateExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BundledServiceServer).UpdateExperiment(ctx, req.(*UpdateExperimentServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BundledService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taskmanager.BundledService",
	HandlerType: (*BundledServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTree",
			Handler:    _BundledService_CreateTree_Handler,
		},
		{
			MethodName: "DeleteTree",
			Handler:    _BundledService_DeleteTree_Handler,
		},
		{
			MethodName: "GetTree",
			Handler:    _BundledService_GetTree_Handler,
		},
		{
			MethodName: "ListTrees",
			Handler:    _BundledService_ListTrees_Handler,
		},
		{
			MethodName: "UpdateTree",
			Handler:    _BundledService_UpdateTree_Handler,
		},
		{
			MethodName: "GetProjectfilter",
			Handler:    _BundledService_GetProjectfilter_Handler,
		},
		{
			MethodName: "CreateAuth",
			Handler:    _BundledService_CreateAuth_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _BundledService_Logout_Handler,
		},
		{
			MethodName: "GetAuth",
			Handler:    _BundledService_GetAuth_Handler,
		},
		{
			MethodName: "ListAuths",
			Handler:    _BundledService_ListAuths_Handler,
		},
		{
			MethodName: "UpdateAuth",
			Handler:    _BundledService_UpdateAuth_Handler,
		},
		{
			MethodName: "CreatePerson",
			Handler:    _BundledService_CreatePerson_Handler,
		},
		{
			MethodName: "DeletePerson",
			Handler:    _BundledService_DeletePerson_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _BundledService_GetPerson_Handler,
		},
		{
			MethodName: "ListPersons",
			Handler:    _BundledService_ListPersons_Handler,
		},
		{
			MethodName: "UpdatePerson",
			Handler:    _BundledService_UpdatePerson_Handler,
		},
		{
			MethodName: "CreateProject",
			Handler:    _BundledService_CreateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _BundledService_DeleteProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _BundledService_GetProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _BundledService_ListProjects_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _BundledService_UpdateProject_Handler,
		},
		{
			MethodName: "ListMembers",
			Handler:    _BundledService_ListMembers_Handler,
		},
		{
			MethodName: "UnsubscribeProjectMembersService",
			Handler:    _BundledService_UnsubscribeProjectMembersService_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _BundledService_CreateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _BundledService_DeleteTask_Handler,
		},
		{
			MethodName: "GetTask",
			Handler:    _BundledService_GetTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _BundledService_ListTasks_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _BundledService_UpdateTask_Handler,
		},
		{
			MethodName: "CreateExperiment",
			Handler:    _BundledService_CreateExperiment_Handler,
		},
		{
			MethodName: "CreateTemplateExperiment",
			Handler:    _BundledService_CreateTemplateExperiment_Handler,
		},
		{
			MethodName: "DeleteExperiment",
			Handler:    _BundledService_DeleteExperiment_Handler,
		},
		{
			MethodName: "GetExperiment",
			Handler:    _BundledService_GetExperiment_Handler,
		},
		{
			MethodName: "ListExperiments",
			Handler:    _BundledService_ListExperiments_Handler,
		},
		{
			MethodName: "ReleaseExperiment",
			Handler:    _BundledService_ReleaseExperiment_Handler,
		},
		{
			MethodName: "UpdateExperiment",
			Handler:    _BundledService_UpdateExperiment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "__bundled/BundledService.proto",
}
