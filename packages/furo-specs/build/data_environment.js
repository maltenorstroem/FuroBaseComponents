export const Services ={"TreeService":{"name":"TreeService","description":"service specs for the tree api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"treeservice","imports":["tree/tree.proto","google/protobuf/empty.proto"],"targetfile":"service.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.","rpc_name":"ListTrees","data":{"request":null,"response":"tree.TreeCollection"},"query":{"q":{"description":"Query term to search a tree","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/mockdata/trees","method":"GET"}},"Create":{"description":"Creates a new Tree","rpc_name":"CreateTree","data":{"request":"tree.Tree","response":"tree.TreeEntity"},"query":{},"deeplink":{"rel":"create","href":"/mockdata/trees","method":"POST"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree","rpc_name":"GetTree","data":{"request":null,"response":"tree.TreeEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/trees/{tre}/get.json","method":"GET"}},"Update":{"description":"Updates a Tree, partial updates are supported","rpc_name":"UpdateTree","data":{"request":"tree.Tree","response":"tree.TreeEntity"},"query":{},"deeplink":{"rel":"update","href":"/mockdata/trees/{tre}","method":"PATCH"}},"Delete":{"description":"Delete a Tree","rpc_name":"DeleteTree","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/mockdata/trees/{tre}","method":"DELETE"}}}},"ProjectfilterService":{"name":"ProjectfilterService","description":"service specs for the projectfilter api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"projectfilterservice","imports":["projectfilter/projectfilter.proto","google/protobuf/empty.proto"],"targetfile":"projectfilterservice.proto"},"services":{"Get":{"description":"The Get method takes zero or more parameters, and returns a ProjectfilterEntity which contains a Projectfilter","rpc_name":"GetProjectfilter","data":{"request":null,"response":"projectfilter.ProjectfilterEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/projects/filter/get.json","method":"GET"}}}},"AuthService":{"name":"AuthService","description":"service specs for the auth api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"authservice","imports":["auth/auth.proto","google/protobuf/empty.proto"],"targetfile":"authservice.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.","rpc_name":"ListAuths","data":{"request":null,"response":"auth.AuthCollection"},"query":{"q":{"description":"Query term to search a auth","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/api/auths","method":"GET"}},"Create":{"description":"Creates a new Auth","rpc_name":"CreateAuth","data":{"request":"auth.Auth","response":"auth.AuthEntity"},"query":{},"deeplink":{"rel":"create","href":"/api/auths","method":"POST"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth","rpc_name":"GetAuth","data":{"request":null,"response":"auth.AuthEntity"},"query":{},"deeplink":{"rel":"self","href":"/api/auths/{uid}","method":"GET"}},"Update":{"description":"Updates a Auth, partial updates are supported","rpc_name":"UpdateAuth","data":{"request":"auth.Auth","response":"auth.AuthEntity"},"query":{},"deeplink":{"rel":"update","href":"/api/auths/{uid}","method":"PATCH"}},"Delete":{"description":"Logout ala delete a auth session","rpc_name":"Logout","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/api/auth","method":"DELETE"}}}},"PersonService":{"name":"PersonService","description":"service specs for the person api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"personservice","imports":["person/person.proto","google/protobuf/empty.proto"],"targetfile":"service.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.","rpc_name":"ListPersons","data":{"request":null,"response":"person.PersonCollection"},"query":{"q":{"description":"Query term to search a person","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/mockdata/persons/list.json","method":"GET"}},"Create":{"description":"Creates a new Person","rpc_name":"CreatePerson","data":{"request":"person.Person","response":"person.PersonEntity"},"query":{},"deeplink":{"rel":"create","href":"/mockdata/persons/create.json","method":"GET"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person","rpc_name":"GetPerson","data":{"request":null,"response":"person.PersonEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/persons/{prs}/get.json","method":"GET"}},"Update":{"description":"Updates a Person, partial updates are supported","rpc_name":"UpdatePerson","data":{"request":"person.Person","response":"person.PersonEntity"},"query":{},"deeplink":{"rel":"update","href":"/mockdata/persons/{prs}/update.json","method":"PATCH"}},"Delete":{"description":"Delete a Person","rpc_name":"DeletePerson","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/mockdata/persons/{prs}/delete.json","method":"GET"}}}},"ProjectService":{"name":"ProjectService","description":"service specs for the project api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"projectservice","imports":["project/project.proto","google/protobuf/empty.proto"],"targetfile":"service.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.","rpc_name":"ListProjects","data":{"request":null,"response":"project.ProjectCollection"},"filter":{},"query":{"q":{"description":"Query term to search a project","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/mockdata/projects/list.json","method":"GET"}},"Create":{"description":"Creates a new Project","rpc_name":"CreateProject","data":{"request":"project.Project","response":"project.ProjectEntity"},"query":{},"deeplink":{"rel":"create","href":"/mockdata/projects/create.json","method":"GET"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project","rpc_name":"GetProject","data":{"request":null,"response":"project.ProjectEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/projects/{prj}/get.json","method":"GET"}},"Update":{"description":"Updates a Project, partial updates are supported","rpc_name":"UpdateProject","data":{"request":"project.Project","response":"project.ProjectEntity"},"query":{},"deeplink":{"rel":"update","href":"/mockdata/projects/{prj}/update.json","method":"GET"}},"Delete":{"description":"Delete a Project","rpc_name":"DeleteProject","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/mockdata/projects/{prj}/delete.json","method":"GET"}}}},"ProjectMembersService":{"name":"ProjectMembersService","description":"The members of a project","version":"1.0.0","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"projectmemberservice","imports":["person/person.proto"],"targetfile":"service.proto"},"services":{"Unsubscribe":{"description":"Custom method to unsubscribe a member, complete PersonEntity is expected","rdpc_name":"UnsubscribeMember","data":{"request":"person.PersonEntity","response":"person.PersonCollection"},"query":{},"deeplink":{"description":"{prs} stands for person","rel":"unsubscibe","href":"/api/projects/{prj}/members/{prs}:unsubscribe","method":"POST"}},"List":{"description":"Get a collection with PersonEntities","rpc_name":"ListMembers","data":{"request":null,"response":"person.PersonCollection"},"query":{"q":{"description":"Query term to search a member","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"rel":"list","href":"/api/members","method":"GET"}}}},"TaskService":{"name":"TaskService","description":"service specs for the task api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"taskservice","imports":["task/task.proto","google/protobuf/empty.proto"],"targetfile":"service.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.","rpc_name":"ListTasks","data":{"request":null,"response":"task.TaskCollection"},"query":{"q":{"description":"Query term to search a {{.name}}","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}},"fields":{"description":"Partial representation (comma separated list of field names), ?fields=","type":"string","meta":{"label":"Fields","hint":"Comma separated list of field names"},"__proto":{"type":"string"}},"order_by":{"description":"Specifies the result ordering for List requests. The default sorting order is ascending, ?order_by=foo desc,bar","type":"string","meta":{"label":"Sorting Order","hint":"The default sorting order is ascending"},"__proto":{"type":"string"}},"filter":{"description":"The response message will be filtered by the fields before being sent back to the client, filter=[['id','eq','1']]","type":"string","meta":{"label":"Filter","hint":""},"__proto":{"type":"string"}},"page_size":{"description":"Use this field to specify the maximum number of results to be returned by the server. \n    //The server may further constrain the maximum number of results returned in a single page. \n    //If the page_size is 0, the server will decide the number of results to be returned. page_size=15","type":"string","meta":{"label":"Page Size","hint":"If the page_size is 0, the server will decide the number of results to be returned."},"__proto":{"type":"string"}},"view":{"description":"allows the client to specify which view of the resource it wants to receive in the response. view=BASIC","type":"string","meta":{"label":"View","hint":"Should be a enum type. MUST be named view"},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/mockdata/tasks/list.json","method":"GET"}},"Create":{"description":"Creates a new Task","rpc_name":"CreateTask","data":{"request":"task.Task","response":"task.TaskEntity"},"query":{},"deeplink":{"rel":"create","href":"/mockdata/tasks/create.json","method":"GET"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task","rpc_name":"GetTask","data":{"request":null,"response":"task.TaskEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/tasks/{tsk}/get.json","method":"GET"}},"Update":{"description":"Updates a Task, partial updates are not supported","rpc_name":"UpdateTask","data":{"request":"task.Task","response":"task.TaskEntity"},"query":{},"deeplink":{"rel":"update","href":"/mockdata/tasks/{tsk}/update.json","method":"GET"}},"Delete":{"description":"Delete a Task","rpc_name":"DeleteTask","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/mockdata/tasks/{tsk}/delete.json","method":"GET"}}}},"ExperimentService":{"name":"ExperimentService","description":"service specs for the experiment api","version":"0.0.1","lifecycle":{"deprecated":false,"info":"This version is still valid"},"__proto":{"package":"experimentservice","imports":["experiment/experiment.proto","google/protobuf/empty.proto"],"targetfile":"service.proto"},"services":{"List":{"description":"The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.","rpc_name":"ListExperiments","data":{"request":null,"response":"experiment.ExperimentCollection"},"query":{"q":{"description":"Query term to search a experiment","type":"string","meta":{"label":"Search","hint":""},"__proto":{"type":"string"}}},"deeplink":{"description":"Describe_the_query_params_if_you_have","rel":"list","href":"/mockdata/experiments","method":"GET"}},"Create":{"description":"Creates a new Experiment","rpc_name":"CreateExperiment","data":{"request":"experiment.Experiment","response":"experiment.ExperimentEntity"},"query":{},"deeplink":{"rel":"create","href":"/mockdata/experiments","method":"POST"}},"Get":{"description":"The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment","rpc_name":"GetExperiment","data":{"request":null,"response":"experiment.ExperimentEntity"},"query":{},"deeplink":{"rel":"self","href":"/mockdata/experiments/{exp}/get.json","method":"GET"}},"Update":{"description":"Updates a Experiment, partial updates are supported","rpc_name":"UpdateExperiment","data":{"request":"experiment.Experiment","response":"experiment.ExperimentEntity"},"query":{},"deeplink":{"rel":"update","href":"/mockdata/experiments/{exp}","method":"PATCH"}},"Delete":{"description":"Delete a Experiment","rpc_name":"DeleteExperiment","data":{"request":"google.protobuf.Empty","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"delete","href":"/mockdata/experiments/{exp}","method":"DELETE"}},"Release":{"description":"Releases experiment","rpc_name":"ReleaseExperiment","data":{"request":"experiment.ExperimentEntity","response":"google.protobuf.Empty"},"query":{},"deeplink":{"rel":"release","href":"/mockdata/experiments/1:release","method":"POST"}}}}}
export const Types ={"tree.Tree":{"name":"tree","type":"Tree","description":"Navigation tree type with recursive navigation nodes","__proto":{"package":"tree","imports":[],"targetfile":"tree.proto"},"fields":{"id":{"description":"Id of the tree","type":"string","__proto":{"number":1}},"display_name":{"description":"String representation of the tree","type":"string","meta":{"readonly":true,"tree-search-index":true},"__proto":{"number":2}},"secondary_text":{"description":"Secondary text of the node","type":"string","meta":{"tree-search-index":true},"__proto":{"number":3}},"description":{"description":"description of the tree","meta":{"tree-search-index":true},"type":"string","__proto":{"number":4}},"root":{"description":"Rootnode of the tree","type":"tree.Navigationnode","meta":{},"__proto":{"number":10}}}},"tree.TreeEntity":{"name":"tree_entity","type":"TreeEntity","description":"TreeEntity with Tree","__proto":{"package":"tree","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"tree.proto"},"fields":{"data":{"description":"contains a tree.Tree","type":"tree.Tree","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"tree.Navigationnode":{"name":"navigationnode","type":"Navigationnode","description":"Item of the navigationtree","__proto":{"package":"tree","imports":["furo/link.proto"],"targetfile":"tree.proto"},"fields":{"id":{"description":"Id of the node","type":"string","__proto":{"number":1}},"display_name":{"description":"String representation of the node","type":"string","meta":{"readonly":true,"tree-search-index":true},"__proto":{"number":2}},"secondary_text":{"description":"Secondary text of the node","type":"string","meta":{"tree-search-index":true},"__proto":{"number":3}},"description":{"description":"description of the node","meta":{"tree-search-index":true},"type":"string","__proto":{"number":4}},"icon":{"description":"icon of the node","type":"string","__proto":{"number":5}},"panel":{"description":"Which panel (i.e. view, edit, display) opens the node type (which is defined in property link)","type":"string","meta":{"readonly":true,"tree-search-index":false},"__proto":{"number":6}},"key_words":{"description":"key words of the node","meta":{"tree-search-index":true},"type":"string","__proto":{"number":7}},"has_error":{"description":"if node has error","type":"bool","__proto":{"number":8}},"open":{"description":"node is open or not","type":"bool","__proto":{"number":9}},"link":{"description":"Deeplink information of this node","type":"furo.Link","__proto":{"number":10}},"is_group_label":{"description":"This node is a group label","type":"bool","meta":{"default":false},"__proto":{"number":11}},"children":{"description":"Children of this node","type":"tree.Navigationnode","meta":{"repeated":true},"__proto":{"number":12}}}},"tree.TreeCollection":{"name":"tree_collection","type":"TreeCollection","description":"TreeCollection with repeated TreeEntity","__proto":{"package":"tree","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"tree.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a tree.TreeEntity repeated","type":"tree.TreeEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"projectfilter.ProjectfilterEntity":{"name":"projectfilter_entity","type":"ProjectfilterEntity","description":"ProjectfilterEntity with Projectfilter","__proto":{"package":"projectfilter","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"projectfilter.proto"},"fields":{"data":{"description":"contains a projectfilter.Projectfilter","type":"projectfilter.Projectfilter","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"projectfilter.Projectfilter":{"name":"projectfilter","type":"Projectfilter","description":"Options for possible filter values","__proto":{"package":"projectfilter","options":{},"imports":["google/type/date.proto","google/type/money.proto","furo/reference.proto"],"targetfile":"projectfilter.proto"},"fields":{"description":{"description":"Filter preset for field description from resource projects","type":"string","meta":{"label":"Description","default":"","hint":""},"constraints":{},"__proto":{"number":1}},"start":{"description":"Start date of the project","type":"google.type.Date","meta":{"label":"Project start","default":"","hint":""},"constraints":{},"__proto":{"number":2}},"end":{"description":"Prospective end date of the project","type":"google.type.Date","meta":{"label":"Project end","default":"","hint":""},"constraints":{},"__proto":{"number":3}},"members":{"description":"List of possible project members","type":"furo.Reference","meta":{"label":"Choose person","default":{"link":{"rel":"list","href":"/mockdata/persons/list.json","method":"Get","type":"person.Person","service":"PersonService"}}},"constraints":{},"__proto":{"number":4}},"cost_limit":{"description":"Project cost limit","type":"google.type.Money","meta":{"label":"Cost limit","hint":"google.type.Money","options":{"list":["CAD","CNY","CHF","EUR"]}},"constraints":{},"__proto":{"number":5}}}},"projectfilter.ProjectfilterCollection":{"name":"projectfilter_collection","type":"ProjectfilterCollection","description":"ProjectfilterCollection with repeated ProjectfilterEntity","__proto":{"package":"projectfilter","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"projectfilter.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a projectfilter.ProjectfilterEntity repeated","type":"projectfilter.ProjectfilterEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"auth.AuthCollection":{"name":"auth_collection","type":"AuthCollection","description":"AuthCollection with repeated AuthEntity","__proto":{"package":"auth","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"auth.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a auth.AuthEntity repeated","type":"auth.AuthEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"auth.AuthEntity":{"name":"auth_entity","type":"AuthEntity","description":"AuthEntity with Auth","__proto":{"package":"auth","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"auth.proto"},"fields":{"data":{"description":"contains a auth.Auth","type":"auth.Auth","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"auth.Auth":{"name":"auth","type":"Auth","description":"autogenerated","__proto":{"package":"auth","options":{},"imports":[],"targetfile":"auth.proto"},"fields":{"id":{"description":"Identity of Auth","type":"string","meta":{"label":"Id","default":"","hint":""},"constraints":{},"__proto":{"number":1}},"username":{"type":"string","description":"The unique username, ussualy an email address","meta":{"label":"Username","hint":""},"constraints":{},"__proto":{"number":2}},"password":{"type":"string","description":"Das _neue_ Kennwort des Benutzers","meta":{"label":"Password","hint":"Look under your keyboard"},"constraints":{},"__proto":{"number":3}},"role":{"type":"string","description":"","meta":{"label":"Role","hint":""},"constraints":{},"__proto":{"number":4}}}},"person.Person":{"name":"person","type":"Person","description":"Person message type","__proto":{"package":"person","imports":["google/protobuf/field_mask.proto"],"targetfile":"person.proto"},"fields":{"id":{"description":"Identity of a person","type":"string","meta":{"label":"Person","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a person","type":"string","meta":{"label":"Person","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":2}},"name":{"description":"Name of a person","type":"string","meta":{"label":"Name","default":"","hint":""},"constraints":{"required":{"is":"true","message":"you must enter a name"}},"__proto":{"number":3}},"first_name":{"description":"First name of a person","type":"string","meta":{"label":"First name","default":"","hint":""},"constraints":{},"__proto":{"number":4},"__ui":{"component":"furo-data-text-input"}},"phone_nr":{"description":"Internal phone number","type":"string","meta":{"label":"Phone No","default":"","hint":""},"constraints":{},"__proto":{"number":5}},"skills":{"description":"List of main skills of a person","type":"string","meta":{"label":"Skills","default":"","hint":"","repeated":true},"constraints":{},"__proto":{"number":6}},"update_mask":{"description":"Contains a field_mask which fields of the targeted resource are going to be updated","type":"google.protobuf.FieldMask","meta":{},"constraints":{},"__proto":{"number":7}}}},"person.PersonCollection":{"name":"person_collection","type":"PersonCollection","description":"PersonCollection with repeated PersonEntity","__proto":{"package":"person","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"person.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a person.PersonEntity repeated","type":"person.PersonEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"person.PersonEntity":{"name":"person_entity","type":"PersonEntity","description":"PersonEntity with Person","__proto":{"package":"person","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"person.proto"},"fields":{"data":{"description":"contains a person.Person","type":"person.Person","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"project.ProjectCollection":{"name":"project_collection","type":"ProjectCollection","description":"ProjectCollection with repeated ProjectEntity","__proto":{"package":"project","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"project.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a project.ProjectEntity repeated","type":"project.ProjectEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"project.ProjectEntity":{"name":"project_entity","type":"ProjectEntity","description":"ProjectEntity with Project","__proto":{"package":"project","imports":["furo/meta.proto","furo/link.proto"],"targetfile":"project.proto"},"fields":{"data":{"description":"contains a project.Project","type":"project.Project","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"project.Project":{"name":"project","type":"Project","description":"Project description","__proto":{"package":"project","imports":["google/protobuf/field_mask.proto","google/type/money.proto","google/type/date.proto","person/person.proto"],"targetfile":"project.proto"},"fields":{"id":{"description":"Identity of a project","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a project","type":"string","meta":{"label":"Project","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":2}},"start":{"description":"Start date of the project","type":"google.type.Date","meta":{"label":"Project start","default":"","hint":""},"constraints":{},"__proto":{"number":3}},"end":{"description":"Prospective end date of the project","type":"google.type.Date","meta":{"label":"Project end","default":"","hint":""},"constraints":{},"__proto":{"number":4}},"description":{"description":"Short project description","type":"string","meta":{"label":"Description","default":"","hint":""},"constraints":{},"__proto":{"number":5}},"members":{"description":"List of project members","type":"person.Person","meta":{"label":"Project members","default":"","hint":"","repeated":true},"constraints":{},"__proto":{"number":6}},"cost_limit":{"description":"Project cost limit","type":"google.type.Money","meta":{"label":"Cost limit","default":"","hint":""},"constraints":{"required":{"is":"true","message":"is required"},"max":{"is":25000,"message":"max 25000"}},"__ui":{"component":"","flags":["align-right"]},"__proto":{"number":7}},"update_mask":{"description":"Contains a field_mask which fields of the targeted resource are going to be updated","type":"google.protobuf.FieldMask","meta":{},"constraints":{},"__proto":{"number":8}}}},"menu.Menuitem":{"name":"menuitem","type":"Menuitem","description":"Item of a contextual menu","__proto":{"package":"menu","options":{"java_outer_classname":"MenuApi","java_package":"com.adcubum.marketingdistribution.salessupport.menu"},"imports":["google/protobuf/any.proto"],"targetfile":"menu.proto"},"fields":{"icon":{"description":"Leading icon of the menu","type":"string","__proto":{"number":1}},"display_name":{"description":"String representation of the menu item. Menu item text","type":"string","meta":{"readonly":true},"__proto":{"number":2}},"disabled":{"description":"Display actions as disabled when they can only be used sometimes, under certain conditions. They should be displayed as disabled rather than removing them.","type":"bool","meta":{"default":false},"__proto":{"number":3}},"command":{"description":"Keyboard command hint","type":"string","meta":{},"__proto":{"number":4}},"action":{"description":"String representation of the menu item action","type":"string","meta":{},"__proto":{"number":5}},"leading_divider":{"description":"Item has a leading divider line","type":"bool","meta":{"default":false},"__proto":{"number":6}},"children":{"description":"Children of this item","type":"menu.Menuitem","meta":{"repeated":true},"__proto":{"number":7}},"flags":{"description":"Attribute flags e.g. important, negative, positive","type":"string","meta":{"readonly":true,"repeated":true},"__proto":{"number":8}},"payload":{"description":"Optional payload","type":"google.protobuf.Any","meta":{"readonly":true,"repeated":true},"__proto":{"number":9}}}},"task.TaskEntity":{"name":"task_entity","type":"TaskEntity","description":"TaskEntity with Task","__proto":{"package":"task","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"task.proto"},"fields":{"data":{"description":"contains a task.Task","type":"task.Task","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"task.TaskCollection":{"name":"task_collection","type":"TaskCollection","description":"TaskCollection with repeated TaskEntity","__proto":{"package":"task","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"task.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a task.TaskEntity repeated","type":"task.TaskEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"task.Task":{"name":"task","type":"Task","description":"Task data description","__proto":{"package":"task","imports":["furo/reference.proto"],"targetfile":"task.proto"},"fields":{"id":{"description":"Identity of a task","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a task","type":"string","meta":{"label":"task.display_name.label","default":"","hint":"task.display_name.hint","readonly":true},"constraints":{},"__proto":{"number":2}},"description":{"description":"Short task description","type":"string","meta":{"label":"task.desc.label","default":"","hint":""},"constraints":{"required":{"is":"true","message":"is required"},"max":{"is":180,"message":"task.desc.maxlength"}},"__proto":{"number":3}},"estimated_time":{"description":"Estimated time in days","type":"int32","meta":{"label":"Est. days","default":"","hint":""},"constraints":{},"__proto":{"number":4}},"owner":{"description":"Owner of a task","type":"furo.Reference","meta":{"label":"person.type.sex.label","default":{"link":{"rel":"list","href":"/mockdata/persons/list.json","method":"Get","type":"person.Person","service":"PersonService"}},"hint":"","no_result_hint":"","options":{"list":[{"id":"unknown","display_name":"person.type.sex.unknown.label","selected":false,"@type":"type.googleapis.com/furo.Optionitem"},{"id":"female","display_name":"person.type.sex.female.label","selected":true,"@type":"type.googleapis.com/furo.Optionitem"},{"id":"male","display_name":"person.type.sex.male.label","selected":false,"@type":"type.googleapis.com/furo.Optionitem"}]}},"constraints":{},"__proto":{"number":5}},"subtasks":{"description":"List of subtasks","type":"task.Task","meta":{"label":"Subtask","default":"","hint":"","repeated":true},"constraints":{},"__proto":{"number":6}}}},"experiment.ExperimentEntity":{"name":"experiment_entity","type":"ExperimentEntity","description":"ExperimentEntity with Experiment","__proto":{"package":"experiment","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"experiment.proto"},"fields":{"data":{"description":"contains a experiment.Experiment","type":"experiment.Experiment","__proto":{"number":1}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":2}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"experiment.Constraints":{"name":"experiment","type":"Constraints","description":"Test the Constraints","__proto":{"package":"experiment","imports":["google/protobuf/any.proto"],"targetfile":"experiment.proto"},"fields":{"id":{"description":"Identity of a experiment","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":true},"constraints":{"required":{"is":"true","message":"is required"}},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a experiment","type":"string","meta":{"label":"experiment","default":"","hint":"","readonly":true},"constraints":{"required":{"is":"true","message":"is required"},"pattern":{"is":"^a.*","message":"must start with a"},"max":{"is":"12","message":"maximal 12"}},"__proto":{"number":2}},"number":{"description":"Short experiment description","type":"int32","meta":{"label":"Valid values are 6,9,12","default":1,"hint":""},"constraints":{"min":{"is":"6","message":"Minimal number 6"},"max":{"is":"12","message":"maximal 12"},"step":{"is":"3","message":"step 3"}},"__proto":{"number":3}},"text":{"description":"Localized String representation of a experiment","type":"string","meta":{"label":"experiment","default":"","hint":"","readonly":false},"constraints":{"required":{"is":"true","message":"is required"},"pattern":{"is":"^a.*","message":"must start with a"},"min":{"is":"6","message":"minimal 6"},"max":{"is":"12","message":"maximal 12"}},"__proto":{"number":4}}}},"experiment.Experiment":{"name":"experiment","type":"Experiment","description":"experiment spec for testing","__proto":{"package":"experiment","imports":["google/protobuf/any.proto","google/type/date.proto","google/type/money.proto","google/protobuf/field_mask.proto","furo/property.proto"],"targetfile":"experiment.proto"},"fields":{"id":{"description":"Identity of a experiment","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a experiment","type":"string","meta":{"label":"experiment","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":2}},"description":{"description":"Short experiment description","type":"string","meta":{"label":"Description","default":"Default Description","hint":""},"constraints":{},"__proto":{"number":3}},"furo_data_checkbox_input":{"description":"field for furo_data_checkbox_input for testing","type":"bool","meta":{"label":"checkbox_input","default":"","hint":"Hint","readonly":false},"constraints":{},"__proto":{"number":4}},"furo_data_text_input":{"description":"field for furo_data_text_input for testing","type":"string","meta":{"label":"text_input","hint":"hint","readonly":false},"constraints":{"required":{"is":"true","message":"is required"},"min":{"is":3,"message":"at least 3 characters"},"max":{"is":15,"message":"15 characters maximum"},"pattern":{"is":"^a.*","message":"must start with a"}},"__proto":{"number":5}},"furo_data_textarea_input":{"description":"field for furo_data_textarea_input for testing","type":"string","meta":{"label":"textarea_input","hint":"hint","readonly":false,"rows":3,"cols":100},"constraints":{},"__proto":{"number":6}},"furo_data_time_input":{"description":"field for furo-data-time-input for testing","type":"string","meta":{"label":"time-input","hint":"hint","readonly":false},"constraints":{"min":{"is":"05:00","message":"From 05:00"},"max":{"is":"19:00","message":"to 19:00"},"step":{"is":"5","message":"step 5"}},"__proto":{"number":7}},"furo_data_range_input":{"description":"field for furo-data-range-input for testing","type":"string","meta":{"label":"range-input","hint":"hint","readonly":false},"constraints":{"min":{"is":20,"message":"From 20"},"max":{"is":50,"message":"to 50"},"step":{"is":"2.5","message":"step 2.5"}},"__proto":{"number":8}},"furo_data_number_input":{"description":"field for furo-data-number-input for testing","type":"float","meta":{"label":"number-input","hint":"hint","readonly":false},"constraints":{"min":{"is":1,"message":"from 1"},"max":{"is":555,"message":"to 555"},"step":{"is":"3","message":"step 3"}},"__proto":{"number":9}},"furo_data_color_input":{"description":"field for furo-data-color-input for testing","type":"string","meta":{"label":"color-input","hint":"hint","readonly":false},"constraints":{},"__proto":{"number":10}},"furo_data_password_input":{"description":"field for furo-data-password-input for testing","type":"string","meta":{"label":"password-input","hint":"hint","readonly":false},"constraints":{"min":{"is":6,"message":"min 6"},"max":{"is":15,"message":"max 15"}},"__proto":{"number":11}},"furo_data_search_input":{"description":"field for furo-search-input for testing","type":"string","meta":{"label":" search","hint":"hint","readonly":false},"constraints":{"min":{"is":1,"message":"min 1"},"max":{"is":15,"message":"max 15"},"pattern":{"is":"a.*","message":"must start with a"}},"__proto":{"number":12}},"furo_data_date_input":{"description":"field for furo-data-date-input for testing","type":"string","meta":{"label":"date-input","hint":"hint","readonly":false},"constraints":{"min":{"is":"1800-01-01","message":"The earliest date to accept is 1800-01-01"},"max":{"is":"2099-12-31","message":"The latest date to accept is 2099-12-31"},"step":{"is":"5","message":"step 5"}},"__proto":{"number":13}},"furo_data_bool_icon":{"description":"field for furo-data-bool-icon for testing","type":"bool","meta":{"label":"bool-icon input","hint":"hint","readonly":false},"constraints":{},"__proto":{"number":14}},"the_any_type":{"description":"field for testing any","type":"google.protobuf.Any","meta":{"label":"can be anything","hint":"hint","readonly":false},"constraints":{},"__proto":{"number":15}},"type_with_options":{"description":"field for testing static options","type":"string","meta":{"label":"String options","hint":"Choose one","options":{"list":[{"id":"option_1","display_name":"option_1","selected":true,"@type":"type.googleapis.com/furo.Optionitem"},{"id":"option_2","display_name":"option_2","selected":true,"@type":"type.googleapis.com/furo.Optionitem"},{"id":"option_3","display_name":"option_3","selected":true,"@type":"type.googleapis.com/furo.Optionitem"}]}},"constraints":{},"__proto":{"number":16}},"type_property":{"description":"field for testing property","type":"furo.Property","meta":{"label":"Additional fields","repeated":true},"constraints":{},"__proto":{"number":17}},"furo_data_date_input_google":{"description":"field for furo-data-date-input for testing","type":"google.type.Date","meta":{"label":"gogole-date-input","hint":"hint","readonly":false},"constraints":{"min":{"is":"1800-01-01","message":"The earliest date to accept is 1800-01-01"},"max":{"is":"2099-12-31","message":"The latest date to accept is 2099-12-31"},"step":{"is":"2","message":"step 2"}},"__proto":{"number":18}},"single_type_property":{"description":"field for testing property","type":"furo.Property","meta":{"label":"Additional fields"},"constraints":{},"__proto":{"number":19}},"repstring":{"description":"repeated string","type":"string","meta":{"repeated":true,"label":"Description","default":"Ein text per default","hint":""},"constraints":{},"__proto":{"number":20}},"furo_data_money_input":{"description":"field for testing money type","type":"google.type.Money","meta":{"readonly":false,"label":"Amount","hint":"google.type.Money","options":{"list":["CAD","CNY","CHF","EUR"]}},"constraints":{"required":{"is":"true","message":"is required"},"min":{"is":0,"message":"amount can not be negative"},"max":{"is":999999,"message":"amount maximal 999999"},"step":{"is":0.01,"message":"step 0.01"}},"__proto":{"number":21}},"furo_data_file_input":{"description":"field for testing file type","type":"string","meta":{"readonly":false,"repeated":true,"label":"Choose a file"},"constraints":{"required":{"is":"true","message":"is required"}},"__proto":{"number":22}},"update_mask":{"description":"Contains a field_mask which fields of the targeted resource are going to be updated","type":"google.protobuf.FieldMask","meta":{},"constraints":{},"__proto":{"number":23}}}},"experiment.Default":{"name":"experiment","type":"Default","description":"Test the default value","__proto":{"package":"experiment","imports":["google/protobuf/any.proto"],"targetfile":"experiment.proto"},"fields":{"id":{"description":"Identity of a experiment","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation of a experiment","type":"string","meta":{"label":"experiment","default":"","hint":"","readonly":true},"constraints":{},"__proto":{"number":2}},"description":{"description":"Short experiment description","type":"string","meta":{"label":"Description","default":"Ein text per default","hint":""},"constraints":{},"__proto":{"number":3}},"repstring":{"description":"repeated string","type":"string","meta":{"repeated":true,"label":"Description","default":"Ein text per default","hint":""},"constraints":{},"__proto":{"number":4}},"furo_data_checkbox_input":{"description":"field for furo_data_checkbox_input for testing","type":"bool","meta":{"label":"checkbox_input","default":"","hint":"Hint","readonly":false},"constraints":{},"__proto":{"number":5}}}},"experiment.Readonly":{"name":"readonly","type":"Readonly","description":"Readonly spec for testing","__proto":{"package":"experiment","targetfile":"experiment.proto","imports":["furo/property.proto","project/project.proto"],"options":null},"fields":{"project":{"type":"project.Project","description":"Identity of a experiment","__proto":{"number":1},"__ui":{"component":"","flags":[],"no_init":false,"no_skip":false},"meta":{"label":"Id","hint":"","default":"","readonly":true,"repeated":false,"options":{"list":[]}},"constraints":null},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":3}}}},"experiment.Recursive":{"name":"recursive","type":"Recursive","description":"recursive type for testing","__proto":{"package":"experiment","imports":["google/protobuf/any.proto","google/type/date.proto"],"targetfile":"experiment.proto"},"fields":{"id":{"description":"Identity","type":"string","meta":{"label":"Id","default":"","hint":"","readonly":false},"constraints":{},"__proto":{"number":1}},"display_name":{"description":"Localized String representation","type":"string","meta":{"label":"experiment","default":"","hint":"","readonly":false},"constraints":{},"__proto":{"number":2}},"recursion":{"description":"The recursion","type":"experiment.Recursive","meta":{"label":"Recursio"},"constraints":{},"__proto":{"number":3}}}},"experiment.ExperimentCollection":{"name":"experiment_collection","type":"ExperimentCollection","description":"ExperimentCollection with repeated ExperimentEntity","__proto":{"package":"experiment","options":{},"imports":["furo/meta.proto","furo/link.proto"],"targetfile":"experiment.proto"},"fields":{"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":2}},"links":{"description":"Hateoas links","type":"furo.Link","meta":{"repeated":true},"__proto":{"number":3}},"entities":{"description":"Contains a experiment.ExperimentEntity repeated","type":"experiment.ExperimentEntity","meta":{"repeated":true},"__proto":{"number":4}}}},"furo.Reference":{"name":"reference","type":"Reference","description":"reference","__proto":{"package":"furo","imports":["furo/link.proto"],"targetfile":"reference.proto"},"fields":{"display_name":{"description":"String representation of the reference","type":"string","meta":{"readonly":true},"constraints":{},"__proto":{"number":1}},"id":{"description":"Id of the reference","type":"string","__proto":{"number":2}},"link":{"description":"Hateoas link","type":"furo.Link","__proto":{"number":3}}}},"furo.MetaField":{"name":"metafield","type":"MetaField","description":"fields of meta info","__proto":{"package":"furo","imports":[],"targetfile":"meta.proto"},"fields":{"meta":{"description":"meta information of a field","type":"furo.FieldMeta","__proto":{"number":1}},"constraints":{"description":"constraints for a field","type":"map<string,furo.FieldConstraint>","__proto":{"number":2}}}},"furo.StringOptionProperty":{"name":"string_option_property","type":"StringOptionProperty","description":"String type to use in property","__proto":{"package":"furo","imports":[],"targetfile":"property.proto"},"fields":{"display_name":{"description":"String representation of val","type":"string","meta":{"readonly":true},"constraints":{},"__proto":{"number":1}},"id":{"description":"The value, Id is used to make working with data-inputs easier","type":"string","__proto":{"number":2}}}},"furo.Optionitem":{"name":"optionitem","type":"Optionitem","description":"Items for fieldoption.list","__proto":{"package":"furo","targetfile":"meta.proto","imports":[],"options":null},"fields":{"id":{"type":"string","description":"Id","__proto":{"number":1},"__ui":{"component":"","flags":[],"no_init":false,"no_skip":true},"meta":{"label":"Id","hint":"","default":"","readonly":false,"repeated":false,"options":{"list":[]}},"constraints":null},"display_name":{"type":"string","description":"String representation","__proto":{"number":2},"__ui":{"component":"","flags":[],"no_init":false,"no_skip":true},"meta":{"label":"Display name","hint":"","default":"","readonly":false,"repeated":false,"options":{"list":[]}},"constraints":null},"selected":{"type":"bool","description":"is the item selected","__proto":{"number":3},"__ui":{"component":"","flags":[],"no_init":false,"no_skip":false},"meta":{"label":"Selected","hint":"","default":"","readonly":false,"repeated":false,"options":{"list":[]}},"constraints":null}}},"furo.NumberProperty":{"name":"number_property","type":"NumberProperty","description":"Number type with embedded meta","__proto":{"package":"furo","imports":[],"targetfile":"property.proto"},"fields":{"data":{"description":"data part","type":"float","__proto":{"number":1}}}},"furo.Fieldoption":{"name":"fieldoption","type":"Fieldoption","description":"Metas for a field","__proto":{"package":"furo","targetfile":"meta.proto","imports":["google/protobuf/any.proto"],"options":null},"fields":{"list":{"type":"google.protobuf.Any","description":"a list with options, use furo.optionitem or your own","__proto":{"number":1},"__ui":{"component":"","flags":["full","condensed"],"no_init":false,"no_skip":false},"meta":{"label":"","hint":"","default":"","readonly":false,"repeated":true,"options":{"list":[],"flags":null}},"constraints":null},"flags":{"type":"string","description":"Add flags for your field. This can be something like \"searchable\". \n//The flags can be used by generators, ui components,...\n","__proto":{"number":2},"__ui":{"component":null,"flags":[],"no_init":false,"no_skip":false},"meta":{"label":"flags","hint":"optional flags","default":null,"readonly":false,"repeated":true,"options":{"list":[],"flags":null},"typespecific":null},"constraints":null}}},"furo.StringProperty":{"name":"string_property","type":"StringProperty","description":"String type to use in property","__proto":{"package":"furo","imports":["furo/meta.proto"],"targetfile":"property.proto"},"fields":{"data":{"description":"data part","type":"string","__proto":{"number":1}}}},"furo.Meta":{"name":"meta","type":"Meta","description":"meta info","__proto":{"package":"furo","imports":[],"targetfile":"meta.proto"},"fields":{"fields":{"description":"fields of meta info","type":"map<string, furo.MetaField>","__proto":{"number":1}}}},"furo.IntegerProperty":{"name":"integer_property","type":"IntegerProperty","description":"Integer type with embedded meta","__proto":{"package":"furo","imports":[],"targetfile":"property.proto"},"fields":{"data":{"description":"Integer data part","type":"int32","constraints":{"step":{"is":1}},"__proto":{"number":1}}}},"furo.Link":{"name":"link","type":"Link","description":"link","__proto":{"package":"furo","imports":[],"targetfile":"link.proto"},"fields":{"rel":{"description":"the relationship","type":"string","__proto":{"number":1}},"method":{"description":"method of curl","type":"string","__proto":{"number":2}},"href":{"description":"link","type":"string","__proto":{"number":3}},"type":{"description":"mime type","type":"string","__proto":{"number":4}},"service":{"description":"name of the service which can handle this link","type":"string","__proto":{"number":5}}}},"furo.FieldMeta":{"name":"fieldmeta","type":"FieldMeta","description":"Metas for a field","__proto":{"package":"furo","options":{},"imports":["google/protobuf/any.proto"],"targetfile":"meta.proto"},"fields":{"label":{"description":"The label","type":"string","meta":{"label":"Label","hint":"Also used for input-fields"},"__proto":{"number":1}},"hint":{"description":"A hint","type":"string","meta":{"label":"Hint","hint":"Also used for input-fields"},"__proto":{"number":2}},"default":{"description":"The default value as JSON string","type":"string","meta":{"label":"Default value"},"__proto":{"number":3}},"readonly":{"description":"readonly","type":"bool","meta":{"label":"readonly"},"__proto":{"number":4}},"repeated":{"description":"repeated","type":"bool","meta":{"label":"repeated"},"__proto":{"number":5}},"options":{"description":"Fieldoptions","type":"furo.Fieldoption","meta":{"label":"options"},"__proto":{"number":6}},"typespecific":{"description":"Put in type specific metas for your fields here","type":"google.protobuf.Any","meta":{"label":"typespecific meta"},"__proto":{"number":7},"__ui":{"no_init":true}}}},"furo.FieldConstraint":{"name":"fieldconstraint","type":"FieldConstraint","description":"a single fieldconstraint","__proto":{"package":"furo","options":{},"imports":[],"targetfile":"meta.proto"},"fields":{"is":{"description":"the constraint value as string, even it is a number","type":"string","meta":{"label":"is","hint":"the constraint value as string, even it is a number"},"__proto":{"number":1}},"message":{"description":"The message to display on constraint violation","type":"string","meta":{"label":"message"},"__proto":{"number":2}}}},"furo.BigDecimal":{"name":"big_decimal","type":"BigDecimal","description":"A BigDecimal is defined by two values: an arbitrary precision integer and a 32-bit integer scale. The value of the BigDecimal is defined to be unscaledValue*10^{-scale}.","__proto":{"package":"furo","imports":[],"targetfile":"bigdecimal.proto"},"fields":{"display_name":{"description":"String representation of BigDecimal entity","type":"string","meta":{"readonly":true},"constraints":{},"options":[],"__proto":{"number":1}},"scale":{"description":"If zero or positive, the scale is the number of digits to the right of the decimal point. If negative, the unscaled value of the number is multiplied by ten to the power of the negation of the scale. For example, a scale of -3 means the unscaled value is multiplied by 1000.","type":"int32","meta":{},"constraints":{},"options":[],"__proto":{"number":2}},"int_val":{"description":"The integer value of the BigDecimal","type":"int64","meta":{},"constraints":{},"options":[],"__proto":{"number":3}}}},"furo.Property":{"name":"property","type":"Property","description":"Type to define property values with type information","__proto":{"package":"furo","imports":["google/protobuf/any.proto"],"targetfile":"property.proto"},"fields":{"id":{"description":"Id of the property","type":"string","meta":{"label":"Id"},"constraints":{"required":{"is":"true","message":"is required"}},"__proto":{"number":1}},"display_name":{"description":"String representation of the property","type":"string","meta":{"label":"Property","readonly":true},"constraints":{},"__proto":{"number":2}},"data":{"description":"data part of the property","type":"google.protobuf.Any","constraints":{},"__proto":{"number":3}},"meta":{"description":"Meta for the response","type":"furo.Meta","__proto":{"number":4}},"code":{"description":"property code for additional settings","type":"string","__proto":{"number":5}}}},"google.type.Money":{"name":"money","type":"Money","description":"Represents an amount of money with its currency type. https://github.com/googleapis/googleapis/blob/master/google/money.proto","__proto":{"package":"google.type","imports":[],"targetfile":"money.proto"},"fields":{"display_name":{"description":"String representation of money entity","type":"string","meta":{"default":"","hint":"","readonly":true},"constraints":{},"options":[],"__proto":{"number":1}},"currency_code":{"description":"The 3-letter currency code defined in ISO 4217.","type":"string","meta":{"label":"Währungscode","default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":2}},"units":{"description":"The whole units of the amount.","type":"int64","meta":{"label":"Ganzahliger Währungsbetrag","default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":3}},"nanos":{"description":"Number of nano (10^-9) units of the amount. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.","type":"int64","meta":{"label":"Nanos","default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":4}}}},"google.type.Date":{"name":"date","type":"Date","description":"Date, https://github.com/googleapis/googleapis/blob/master/google/date.proto ","__proto":{"package":"google.type","imports":[],"targetfile":"date.proto"},"fields":{"display_name":{"description":"Localized String representation of date","type":"string","meta":{"label":"Datum","default":"","hint":"","readonly":true},"constraints":{},"options":[],"__proto":{"number":4}},"year":{"description":"Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.","type":"int32","meta":{"default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":1}},"month":{"description":"Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.","type":"int32","meta":{"default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":2}},"day":{"description":"Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant.","type":"int32","meta":{"default":"","hint":""},"constraints":{},"options":[],"__proto":{"number":3}}}},"google.protobuf.StringValue":{"name":"stringvalue","type":"StringValue","description":"Wrapper message for `string`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `StringValue` is JSON string","type":"string","__proto":{"number":1}}}},"google.protobuf.FieldMask":{"name":"field_mask","type":"FieldMask","description":"A field mask in update operations specifies which fields of the targeted resource are going to be updated. https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/field_mask.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"field_mask.proto"},"fields":{"paths":{"description":"The implementation of any API method which has a FieldMask type field in the request should verify the included field paths, and return an `INVALID_ARGUMENT` error if any path is duplicated or unmappable.","type":"string","meta":{"repeated":true},"__proto":{"number":1}}}},"google.protobuf.Int64Value":{"name":"int64value","type":"Int64Value","description":"Wrapper message for `int64`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `Int64Value` is JSON string","type":"int64","__proto":{"number":1}}}},"google.protobuf.Empty":{"name":"empty","type":"Empty","description":"https://github.com/protocolbuffers/protobuf/blob/master/src/protobuf/empty.proto","__proto":{"package":"google.protobuf","imports":[],"targetfile":"empty.proto","options":{}},"fields":{}},"google.protobuf.Int32Value":{"name":"int32value","type":"Int32Value","description":"Wrapper message for `int32`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `Int32Value` is JSON number","type":"int32","__proto":{"number":1},"constraints":{"min":{"is":"−2147483648","message":"out of range"},"max":{"is":"2147483647","message":"out of range"}}}}},"google.protobuf.BoolValue":{"name":"boolvalue","type":"BoolValue","description":"Wrapper message for `bool`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `BoolValue` is JSON `true` and `false`","type":"bool","__proto":{"number":1}}}},"google.protobuf.FloatValue":{"name":"floatvalue","type":"FloatValue","description":"Wrapper message for `float`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `FloatValue` is JSON number","type":"float","__proto":{"number":1}}}},"google.protobuf.BytesValue":{"name":"bytesvalue","type":"BytesValue","description":"Wrapper message for `bytes`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `BytesValue` is JSON string","type":"bytes","__proto":{"number":1}}}},"google.protobuf.Any":{"name":"any","type":"Any","description":"Any contains an arbitrary serialized protocol buffer message along with a\n// URL that describes the type of the serialized message. client uses type `ArrayBuffer` for the value field .  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"any.proto"},"fields":{"type_url":{"type":"string","__proto":{"number":1}},"value":{"type":"bytes","__proto":{"number":2}}}},"google.protobuf.UInt32Value":{"name":"uint32value","type":"UInt32Value","description":"Wrapper message for `uint32`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `UInt32Value` is JSON number","type":"uint32","__proto":{"number":1}}}},"google.protobuf.UInt64Value":{"name":"uint64value","type":"UInt64Value","description":"Wrapper message for `uint64`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `UInt64Value` is JSON string","type":"uint64","__proto":{"number":1}}}},"google.protobuf.DoubleValue":{"name":"doublevalue","type":"DoubleValue","description":"Wrapper message for `double`.  https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/wrappers.proto","__proto":{"package":"google.protobuf","options":{},"imports":[],"targetfile":"wrappers.proto"},"fields":{"value":{"description":"The JSON representation for `DoubleValue` is JSON number","type":"double","__proto":{"number":1}}}}}