// Code generated by furo-proto-gen. DO NOT EDIT.
// generation date: 2019-08-25 15:06:30

syntax = "proto3";
package project;



import "google/api/annotations.proto";

import "project.proto";
import "project_entity.proto";
import "project_collection.proto";
import "google/protobuf/empty.proto";



// service specs for the project api
service ProjectService {                       
   
    // Creates a new Project
    rpc CreateProject (CreateProjectServiceRequest) returns (project.ProjectEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/projects/create.json"
            
        };
    }   
    // Delete a Project
    rpc DeleteProject (DeleteProjectServiceRequest) returns (google.protobuf.Empty){
        //
        option (google.api.http) = {
            get: "/mockdata/projects/{prj}/delete.json"
            
        };
    }   
    // The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
    rpc GetProject (GetProjectServiceRequest) returns (project.ProjectEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/projects/{prj}/get.json"
        };
    }   
    // The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
    rpc ListProjects (ListProjectServiceRequest) returns (project.ProjectCollection){
        //Describe_the_query_params_if_you_have
        option (google.api.http) = {
            get: "/mockdata/projects/list.json"
        };
    }   
    // Updates a Project, partial updates are supported
    rpc UpdateProject (UpdateProjectServiceRequest) returns (project.ProjectEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/projects/{prj}/update.json"
            
        };
    }
}


   
message CreateProjectServiceRequest { 
    
    project.Project data =  1;  
}

   
message DeleteProjectServiceRequest { 
    
    string prj = 1;
    google.protobuf.Empty data =  2;  
}

   
message GetProjectServiceRequest { 
    
    string prj = 1; 
}

   
message ListProjectServiceRequest { 
    
    //Partielle Repr채sentation fields=id,name // 10
    string fields = 1;
    //Sortierung nach feldern
    //**?filter=-completed** um completed absteigend zu bekommen
    //**?filter=completed** um completed aufsteigend zu bekommen
    string sort = 2;
    //Filter
    string filter = 3;
    //Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
    int32 page = 4;
    //Anzahl Elemente pro Seite, maximal sind 99 erlaubt
    int32 limit = 5;
    //Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
    bool count = 6;
    //not implemented
    string sum = 7;
    //not implemented (ehemals context)
    string view = 8;       
       
    //Query term to search a project
    string q = 11;
}

   
message UpdateProjectServiceRequest { 
    
    string prj = 1;
    project.Project data =  2;  
}

