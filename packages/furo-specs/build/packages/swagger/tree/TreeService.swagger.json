{
  "swagger": "2.0",
  "info": {
    "title": "TreeService.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mockdata/trees": {
      "get": {
        "summary": "The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.",
        "operationId": "ListTrees",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/treeTreeCollection"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "description": "Partielle Repr채sentation fields=id,name // 10.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sortierung nach feldern\n**?filter=-completed** um completed absteigend zu bekommen\n**?filter=completed** um completed aufsteigend zu bekommen.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Anzahl Elemente pro Seite, maximal sind 99 erlaubt.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sum",
            "description": "not implemented.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "not implemented (ehemals context).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "description": "Query term to search a tree.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TreeService"
        ]
      },
      "post": {
        "summary": "Creates a new Tree",
        "operationId": "CreateTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/treeTreeEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/treeTree"
            }
          }
        ],
        "tags": [
          "TreeService"
        ]
      }
    },
    "/mockdata/trees/{tre}": {
      "delete": {
        "summary": "Delete a Tree",
        "operationId": "DeleteTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "tre",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TreeService"
        ]
      },
      "patch": {
        "summary": "Updates a Tree, partial updates are supported",
        "operationId": "UpdateTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/treeTreeEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "tre",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/treeTree"
            }
          }
        ],
        "tags": [
          "TreeService"
        ]
      }
    },
    "/mockdata/trees/{tre}/get.json": {
      "get": {
        "summary": "The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree",
        "operationId": "GetTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/treeTreeEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "tre",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TreeService"
        ]
      }
    }
  },
  "definitions": {
    "furoFieldconstraint": {
      "type": "object",
      "properties": {
        "constraint": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "constrain of a field"
        }
      },
      "title": "constrains of fields"
    },
    "furoFieldmeta": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "meta information of a field"
        }
      },
      "title": "meta"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "title": "link"
        },
        "method": {
          "type": "string",
          "title": "method of curl"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetafield"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetafield": {
      "type": "object",
      "properties": {
        "constraints": {
          "$ref": "#/definitions/furoFieldconstraint",
          "title": "constraints of a field"
        },
        "meta": {
          "$ref": "#/definitions/furoFieldmeta",
          "title": "meta information of a field"
        }
      },
      "title": "fields of meta info"
    },
    "treeNavigationnode": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/treeNavigationnode"
          },
          "title": "Children of this node"
        },
        "description": {
          "type": "string",
          "title": "description of the node"
        },
        "display_name": {
          "type": "string",
          "title": "String representation of the node"
        },
        "has_error": {
          "type": "boolean",
          "format": "boolean",
          "title": "if node has error"
        },
        "icon": {
          "type": "string",
          "title": "icon of the node"
        },
        "id": {
          "type": "string",
          "title": "Id of the node"
        },
        "key_words": {
          "type": "string",
          "title": "key words of the node"
        },
        "link": {
          "$ref": "#/definitions/furoLink",
          "title": "Deeplink information of this node"
        },
        "open": {
          "type": "boolean",
          "format": "boolean",
          "title": "node is open or not"
        },
        "panel": {
          "type": "string",
          "title": "Which panel (i.e. view, edit, display) opens the node type (which is defined in property link)"
        },
        "secondary_text": {
          "type": "string",
          "title": "Secondary text of the node"
        }
      },
      "title": "Item of the navigationtree"
    },
    "treeTree": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "description of the tree"
        },
        "display_name": {
          "type": "string",
          "title": "String representation of the tree"
        },
        "id": {
          "type": "string",
          "title": "Id of the tree"
        },
        "root": {
          "$ref": "#/definitions/treeNavigationnode",
          "title": "Rootnode of the tree"
        }
      },
      "title": "Navigation tree type with recursive navigation nodes"
    },
    "treeTreeCollection": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/treeTreeEntity"
          },
          "title": "Contains a tree.TreeEntity repeated"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "TreeCollection with repeated TreeEntity"
    },
    "treeTreeEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/treeTree",
          "title": "contains a tree.Tree"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "TreeEntity with Tree"
    }
  }
}
