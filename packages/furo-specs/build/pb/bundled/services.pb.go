// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: services.proto

package bundled

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "../protobuf"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CreateProjectServiceRequest struct {
	Data                 *Project `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectServiceRequest) Reset()         { *m = CreateProjectServiceRequest{} }
func (m *CreateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectServiceRequest) ProtoMessage()    {}
func (*CreateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{0}
}
func (m *CreateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateProjectServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectServiceRequest.Merge(dst, src)
}
func (m *CreateProjectServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectServiceRequest proto.InternalMessageInfo

func (m *CreateProjectServiceRequest) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProjectServiceRequest struct {
	Var                  string   `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	Data                 *Empty   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectServiceRequest) Reset()         { *m = DeleteProjectServiceRequest{} }
func (m *DeleteProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectServiceRequest) ProtoMessage()    {}
func (*DeleteProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{1}
}
func (m *DeleteProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteProjectServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeleteProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectServiceRequest.Merge(dst, src)
}
func (m *DeleteProjectServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectServiceRequest proto.InternalMessageInfo

func (m *DeleteProjectServiceRequest) GetVar() string {
	if m != nil {
		return m.Var
	}
	return ""
}

func (m *DeleteProjectServiceRequest) GetData() *Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectServiceRequest struct {
	Var                  string   `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectServiceRequest) Reset()         { *m = GetProjectServiceRequest{} }
func (m *GetProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectServiceRequest) ProtoMessage()    {}
func (*GetProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{2}
}
func (m *GetProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProjectServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectServiceRequest.Merge(dst, src)
}
func (m *GetProjectServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectServiceRequest proto.InternalMessageInfo

func (m *GetProjectServiceRequest) GetVar() string {
	if m != nil {
		return m.Var
	}
	return ""
}

type ListProjectServiceRequest struct {
	// Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	// Sortierung nach feldern
	// **?filter=-completed** um completed absteigend zu bekommen
	// **?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	// not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	// not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	// Query term to search a project
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectServiceRequest) Reset()         { *m = ListProjectServiceRequest{} }
func (m *ListProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectServiceRequest) ProtoMessage()    {}
func (*ListProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{3}
}
func (m *ListProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListProjectServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectServiceRequest.Merge(dst, src)
}
func (m *ListProjectServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectServiceRequest proto.InternalMessageInfo

func (m *ListProjectServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListProjectServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListProjectServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListProjectServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListProjectServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListProjectServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListProjectServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListProjectServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateProjectServiceRequest struct {
	Var                  string   `protobuf:"bytes,1,opt,name=var,proto3" json:"var,omitempty"`
	Data                 *Project `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProjectServiceRequest) Reset()         { *m = UpdateProjectServiceRequest{} }
func (m *UpdateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectServiceRequest) ProtoMessage()    {}
func (*UpdateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{4}
}
func (m *UpdateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateProjectServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectServiceRequest.Merge(dst, src)
}
func (m *UpdateProjectServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectServiceRequest proto.InternalMessageInfo

func (m *UpdateProjectServiceRequest) GetVar() string {
	if m != nil {
		return m.Var
	}
	return ""
}

func (m *UpdateProjectServiceRequest) GetData() *Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreatePersonServiceRequest struct {
	Data                 *Person  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePersonServiceRequest) Reset()         { *m = CreatePersonServiceRequest{} }
func (m *CreatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePersonServiceRequest) ProtoMessage()    {}
func (*CreatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{5}
}
func (m *CreatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatePersonServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePersonServiceRequest.Merge(dst, src)
}
func (m *CreatePersonServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePersonServiceRequest proto.InternalMessageInfo

func (m *CreatePersonServiceRequest) GetData() *Person {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeletePersonServiceRequest struct {
	Prs                  string   `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *Empty   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePersonServiceRequest) Reset()         { *m = DeletePersonServiceRequest{} }
func (m *DeletePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePersonServiceRequest) ProtoMessage()    {}
func (*DeletePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{6}
}
func (m *DeletePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeletePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeletePersonServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeletePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePersonServiceRequest.Merge(dst, src)
}
func (m *DeletePersonServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeletePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePersonServiceRequest proto.InternalMessageInfo

func (m *DeletePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *DeletePersonServiceRequest) GetData() *Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPersonServiceRequest struct {
	Prs                  string   `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonServiceRequest) Reset()         { *m = GetPersonServiceRequest{} }
func (m *GetPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPersonServiceRequest) ProtoMessage()    {}
func (*GetPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{7}
}
func (m *GetPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPersonServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonServiceRequest.Merge(dst, src)
}
func (m *GetPersonServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonServiceRequest proto.InternalMessageInfo

func (m *GetPersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

type ListPersonServiceRequest struct {
	// Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	// Sortierung nach feldern
	// **?filter=-completed** um completed absteigend zu bekommen
	// **?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	// not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	// not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	// Query term to search a person
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPersonServiceRequest) Reset()         { *m = ListPersonServiceRequest{} }
func (m *ListPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListPersonServiceRequest) ProtoMessage()    {}
func (*ListPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{8}
}
func (m *ListPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListPersonServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPersonServiceRequest.Merge(dst, src)
}
func (m *ListPersonServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPersonServiceRequest proto.InternalMessageInfo

func (m *ListPersonServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListPersonServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListPersonServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListPersonServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListPersonServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListPersonServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListPersonServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListPersonServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListPersonServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdatePersonServiceRequest struct {
	Prs                  string   `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *Person  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePersonServiceRequest) Reset()         { *m = UpdatePersonServiceRequest{} }
func (m *UpdatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePersonServiceRequest) ProtoMessage()    {}
func (*UpdatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{9}
}
func (m *UpdatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdatePersonServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePersonServiceRequest.Merge(dst, src)
}
func (m *UpdatePersonServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePersonServiceRequest proto.InternalMessageInfo

func (m *UpdatePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *UpdatePersonServiceRequest) GetData() *Person {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateTreeServiceRequest struct {
	Data                 *Tree    `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTreeServiceRequest) Reset()         { *m = CreateTreeServiceRequest{} }
func (m *CreateTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTreeServiceRequest) ProtoMessage()    {}
func (*CreateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{10}
}
func (m *CreateTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateTreeServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreateTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTreeServiceRequest.Merge(dst, src)
}
func (m *CreateTreeServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTreeServiceRequest proto.InternalMessageInfo

func (m *CreateTreeServiceRequest) GetData() *Tree {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTreeServiceRequest struct {
	Tre                  string   `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data                 *Empty   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTreeServiceRequest) Reset()         { *m = DeleteTreeServiceRequest{} }
func (m *DeleteTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTreeServiceRequest) ProtoMessage()    {}
func (*DeleteTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{11}
}
func (m *DeleteTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteTreeServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeleteTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTreeServiceRequest.Merge(dst, src)
}
func (m *DeleteTreeServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTreeServiceRequest proto.InternalMessageInfo

func (m *DeleteTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

func (m *DeleteTreeServiceRequest) GetData() *Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTreeServiceRequest struct {
	Tre                  string   `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTreeServiceRequest) Reset()         { *m = GetTreeServiceRequest{} }
func (m *GetTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTreeServiceRequest) ProtoMessage()    {}
func (*GetTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{12}
}
func (m *GetTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTreeServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTreeServiceRequest.Merge(dst, src)
}
func (m *GetTreeServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTreeServiceRequest proto.InternalMessageInfo

func (m *GetTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

type ListTreeServiceRequest struct {
	// Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	// Sortierung nach feldern
	// **?filter=-completed** um completed absteigend zu bekommen
	// **?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	// not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	// not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	// Query term to search a tree
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTreeServiceRequest) Reset()         { *m = ListTreeServiceRequest{} }
func (m *ListTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListTreeServiceRequest) ProtoMessage()    {}
func (*ListTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{13}
}
func (m *ListTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListTreeServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTreeServiceRequest.Merge(dst, src)
}
func (m *ListTreeServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTreeServiceRequest proto.InternalMessageInfo

func (m *ListTreeServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListTreeServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListTreeServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTreeServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListTreeServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTreeServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListTreeServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListTreeServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListTreeServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateTreeServiceRequest struct {
	Tre                  string   `protobuf:"bytes,1,opt,name=tre,proto3" json:"tre,omitempty"`
	Data                 *Tree    `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTreeServiceRequest) Reset()         { *m = UpdateTreeServiceRequest{} }
func (m *UpdateTreeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTreeServiceRequest) ProtoMessage()    {}
func (*UpdateTreeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{14}
}
func (m *UpdateTreeServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateTreeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateTreeServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateTreeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTreeServiceRequest.Merge(dst, src)
}
func (m *UpdateTreeServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateTreeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTreeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTreeServiceRequest proto.InternalMessageInfo

func (m *UpdateTreeServiceRequest) GetTre() string {
	if m != nil {
		return m.Tre
	}
	return ""
}

func (m *UpdateTreeServiceRequest) GetData() *Tree {
	if m != nil {
		return m.Data
	}
	return nil
}

type ListProjectMembersServiceRequest struct {
	// Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	// Sortierung nach feldern
	// **?filter=-completed** um completed absteigend zu bekommen
	// **?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	// not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	// not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	// Query term to search a member
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectMembersServiceRequest) Reset()         { *m = ListProjectMembersServiceRequest{} }
func (m *ListProjectMembersServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectMembersServiceRequest) ProtoMessage()    {}
func (*ListProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{15}
}
func (m *ListProjectMembersServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListProjectMembersServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListProjectMembersServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListProjectMembersServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectMembersServiceRequest.Merge(dst, src)
}
func (m *ListProjectMembersServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListProjectMembersServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectMembersServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectMembersServiceRequest proto.InternalMessageInfo

func (m *ListProjectMembersServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListProjectMembersServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListProjectMembersServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListProjectMembersServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListProjectMembersServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListProjectMembersServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListProjectMembersServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListProjectMembersServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListProjectMembersServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UnsubscribeProjectMembersServiceRequest struct {
	Prs                  string        `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *PersonEntity `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UnsubscribeProjectMembersServiceRequest) Reset() {
	*m = UnsubscribeProjectMembersServiceRequest{}
}
func (m *UnsubscribeProjectMembersServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeProjectMembersServiceRequest) ProtoMessage()    {}
func (*UnsubscribeProjectMembersServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{16}
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UnsubscribeProjectMembersServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.Merge(dst, src)
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UnsubscribeProjectMembersServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeProjectMembersServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeProjectMembersServiceRequest proto.InternalMessageInfo

func (m *UnsubscribeProjectMembersServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *UnsubscribeProjectMembersServiceRequest) GetData() *PersonEntity {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateTaskServiceRequest struct {
	Data                 *Task    `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskServiceRequest) Reset()         { *m = CreateTaskServiceRequest{} }
func (m *CreateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskServiceRequest) ProtoMessage()    {}
func (*CreateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{17}
}
func (m *CreateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateTaskServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CreateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskServiceRequest.Merge(dst, src)
}
func (m *CreateTaskServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskServiceRequest proto.InternalMessageInfo

func (m *CreateTaskServiceRequest) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteTaskServiceRequest struct {
	Tsk                  string   `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *Empty   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTaskServiceRequest) Reset()         { *m = DeleteTaskServiceRequest{} }
func (m *DeleteTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTaskServiceRequest) ProtoMessage()    {}
func (*DeleteTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{18}
}
func (m *DeleteTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteTaskServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeleteTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTaskServiceRequest.Merge(dst, src)
}
func (m *DeleteTaskServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTaskServiceRequest proto.InternalMessageInfo

func (m *DeleteTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *DeleteTaskServiceRequest) GetData() *Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetTaskServiceRequest struct {
	Tsk                  string   `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskServiceRequest) Reset()         { *m = GetTaskServiceRequest{} }
func (m *GetTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskServiceRequest) ProtoMessage()    {}
func (*GetTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{19}
}
func (m *GetTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTaskServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskServiceRequest.Merge(dst, src)
}
func (m *GetTaskServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskServiceRequest proto.InternalMessageInfo

func (m *GetTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

type ListTaskServiceRequest struct {
	// Partielle Repr채sentation fields=id,name // 10
	Fields string `protobuf:"bytes,1,opt,name=fields,proto3" json:"fields,omitempty"`
	// Sortierung nach feldern
	// **?filter=-completed** um completed absteigend zu bekommen
	// **?filter=completed** um completed aufsteigend zu bekommen
	Sort string `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	// Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
	Page int32 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	// Anzahl Elemente pro Seite, maximal sind 99 erlaubt
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
	Count bool `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	// not implemented
	Sum string `protobuf:"bytes,7,opt,name=sum,proto3" json:"sum,omitempty"`
	// not implemented (ehemals context)
	View string `protobuf:"bytes,8,opt,name=view,proto3" json:"view,omitempty"`
	// Query term to search a task
	Q                    string   `protobuf:"bytes,11,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTaskServiceRequest) Reset()         { *m = ListTaskServiceRequest{} }
func (m *ListTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListTaskServiceRequest) ProtoMessage()    {}
func (*ListTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{20}
}
func (m *ListTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListTaskServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ListTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTaskServiceRequest.Merge(dst, src)
}
func (m *ListTaskServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTaskServiceRequest proto.InternalMessageInfo

func (m *ListTaskServiceRequest) GetFields() string {
	if m != nil {
		return m.Fields
	}
	return ""
}

func (m *ListTaskServiceRequest) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListTaskServiceRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTaskServiceRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListTaskServiceRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListTaskServiceRequest) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *ListTaskServiceRequest) GetSum() string {
	if m != nil {
		return m.Sum
	}
	return ""
}

func (m *ListTaskServiceRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *ListTaskServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateTaskServiceRequest struct {
	Tsk                  string   `protobuf:"bytes,1,opt,name=tsk,proto3" json:"tsk,omitempty"`
	Data                 *Task    `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskServiceRequest) Reset()         { *m = UpdateTaskServiceRequest{} }
func (m *UpdateTaskServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskServiceRequest) ProtoMessage()    {}
func (*UpdateTaskServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{21}
}
func (m *UpdateTaskServiceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateTaskServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateTaskServiceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateTaskServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskServiceRequest.Merge(dst, src)
}
func (m *UpdateTaskServiceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateTaskServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskServiceRequest proto.InternalMessageInfo

func (m *UpdateTaskServiceRequest) GetTsk() string {
	if m != nil {
		return m.Tsk
	}
	return ""
}

func (m *UpdateTaskServiceRequest) GetData() *Task {
	if m != nil {
		return m.Data
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_c852a0a2becf40a0, []int{22}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return m.Size()
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateProjectServiceRequest)(nil), "bundled.CreateProjectServiceRequest")
	proto.RegisterType((*DeleteProjectServiceRequest)(nil), "bundled.DeleteProjectServiceRequest")
	proto.RegisterType((*GetProjectServiceRequest)(nil), "bundled.GetProjectServiceRequest")
	proto.RegisterType((*ListProjectServiceRequest)(nil), "bundled.ListProjectServiceRequest")
	proto.RegisterType((*UpdateProjectServiceRequest)(nil), "bundled.UpdateProjectServiceRequest")
	proto.RegisterType((*CreatePersonServiceRequest)(nil), "bundled.CreatePersonServiceRequest")
	proto.RegisterType((*DeletePersonServiceRequest)(nil), "bundled.DeletePersonServiceRequest")
	proto.RegisterType((*GetPersonServiceRequest)(nil), "bundled.GetPersonServiceRequest")
	proto.RegisterType((*ListPersonServiceRequest)(nil), "bundled.ListPersonServiceRequest")
	proto.RegisterType((*UpdatePersonServiceRequest)(nil), "bundled.UpdatePersonServiceRequest")
	proto.RegisterType((*CreateTreeServiceRequest)(nil), "bundled.CreateTreeServiceRequest")
	proto.RegisterType((*DeleteTreeServiceRequest)(nil), "bundled.DeleteTreeServiceRequest")
	proto.RegisterType((*GetTreeServiceRequest)(nil), "bundled.GetTreeServiceRequest")
	proto.RegisterType((*ListTreeServiceRequest)(nil), "bundled.ListTreeServiceRequest")
	proto.RegisterType((*UpdateTreeServiceRequest)(nil), "bundled.UpdateTreeServiceRequest")
	proto.RegisterType((*ListProjectMembersServiceRequest)(nil), "bundled.ListProjectMembersServiceRequest")
	proto.RegisterType((*UnsubscribeProjectMembersServiceRequest)(nil), "bundled.UnsubscribeProjectMembersServiceRequest")
	proto.RegisterType((*CreateTaskServiceRequest)(nil), "bundled.CreateTaskServiceRequest")
	proto.RegisterType((*DeleteTaskServiceRequest)(nil), "bundled.DeleteTaskServiceRequest")
	proto.RegisterType((*GetTaskServiceRequest)(nil), "bundled.GetTaskServiceRequest")
	proto.RegisterType((*ListTaskServiceRequest)(nil), "bundled.ListTaskServiceRequest")
	proto.RegisterType((*UpdateTaskServiceRequest)(nil), "bundled.UpdateTaskServiceRequest")
	proto.RegisterType((*Empty)(nil), "bundled.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	// Creates a new Project
	CreateProjectService(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error)
	// Delete a Project
	DeleteProjectService(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProjectService(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjectService(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProjectService(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) CreateProjectService(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error) {
	out := new(ProjectEntity)
	err := c.cc.Invoke(ctx, "/bundled.ProjectService/CreateProjectService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProjectService(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/bundled.ProjectService/DeleteProjectService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProjectService(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error) {
	out := new(ProjectEntity)
	err := c.cc.Invoke(ctx, "/bundled.ProjectService/GetProjectService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) ListProjectService(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*ProjectCollection, error) {
	out := new(ProjectCollection)
	err := c.cc.Invoke(ctx, "/bundled.ProjectService/ListProjectService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProjectService(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*ProjectEntity, error) {
	out := new(ProjectEntity)
	err := c.cc.Invoke(ctx, "/bundled.ProjectService/UpdateProjectService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	// Creates a new Project
	CreateProjectService(context.Context, *CreateProjectServiceRequest) (*ProjectEntity, error)
	// Delete a Project
	DeleteProjectService(context.Context, *DeleteProjectServiceRequest) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProjectService(context.Context, *GetProjectServiceRequest) (*ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjectService(context.Context, *ListProjectServiceRequest) (*ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProjectService(context.Context, *UpdateProjectServiceRequest) (*ProjectEntity, error)
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_CreateProjectService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProjectService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectService/CreateProjectService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProjectService(ctx, req.(*CreateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProjectService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProjectService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectService/DeleteProjectService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProjectService(ctx, req.(*DeleteProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProjectService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProjectService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectService/GetProjectService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProjectService(ctx, req.(*GetProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_ListProjectService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).ListProjectService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectService/ListProjectService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).ListProjectService(ctx, req.(*ListProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProjectService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProjectService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectService/UpdateProjectService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProjectService(ctx, req.(*UpdateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bundled.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProjectService",
			Handler:    _ProjectService_CreateProjectService_Handler,
		},
		{
			MethodName: "DeleteProjectService",
			Handler:    _ProjectService_DeleteProjectService_Handler,
		},
		{
			MethodName: "GetProjectService",
			Handler:    _ProjectService_GetProjectService_Handler,
		},
		{
			MethodName: "ListProjectService",
			Handler:    _ProjectService_ListProjectService_Handler,
		},
		{
			MethodName: "UpdateProjectService",
			Handler:    _ProjectService_UpdateProjectService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// PersonServiceClient is the client API for PersonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonServiceClient interface {
	// Creates a new Person
	CreatePersonService(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error)
	// Delete a Person
	DeletePersonService(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPersonService(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersonService(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePersonService(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error)
}

type personServiceClient struct {
	cc *grpc.ClientConn
}

func NewPersonServiceClient(cc *grpc.ClientConn) PersonServiceClient {
	return &personServiceClient{cc}
}

func (c *personServiceClient) CreatePersonService(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error) {
	out := new(PersonEntity)
	err := c.cc.Invoke(ctx, "/bundled.PersonService/CreatePersonService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) DeletePersonService(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/bundled.PersonService/DeletePersonService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) GetPersonService(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error) {
	out := new(PersonEntity)
	err := c.cc.Invoke(ctx, "/bundled.PersonService/GetPersonService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) ListPersonService(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error) {
	out := new(PersonCollection)
	err := c.cc.Invoke(ctx, "/bundled.PersonService/ListPersonService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) UpdatePersonService(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*PersonEntity, error) {
	out := new(PersonEntity)
	err := c.cc.Invoke(ctx, "/bundled.PersonService/UpdatePersonService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonServiceServer is the server API for PersonService service.
type PersonServiceServer interface {
	// Creates a new Person
	CreatePersonService(context.Context, *CreatePersonServiceRequest) (*PersonEntity, error)
	// Delete a Person
	DeletePersonService(context.Context, *DeletePersonServiceRequest) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPersonService(context.Context, *GetPersonServiceRequest) (*PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersonService(context.Context, *ListPersonServiceRequest) (*PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePersonService(context.Context, *UpdatePersonServiceRequest) (*PersonEntity, error)
}

func RegisterPersonServiceServer(s *grpc.Server, srv PersonServiceServer) {
	s.RegisterService(&_PersonService_serviceDesc, srv)
}

func _PersonService_CreatePersonService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).CreatePersonService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.PersonService/CreatePersonService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).CreatePersonService(ctx, req.(*CreatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_DeletePersonService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).DeletePersonService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.PersonService/DeletePersonService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).DeletePersonService(ctx, req.(*DeletePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_GetPersonService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).GetPersonService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.PersonService/GetPersonService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).GetPersonService(ctx, req.(*GetPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_ListPersonService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).ListPersonService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.PersonService/ListPersonService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).ListPersonService(ctx, req.(*ListPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_UpdatePersonService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).UpdatePersonService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.PersonService/UpdatePersonService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).UpdatePersonService(ctx, req.(*UpdatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bundled.PersonService",
	HandlerType: (*PersonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePersonService",
			Handler:    _PersonService_CreatePersonService_Handler,
		},
		{
			MethodName: "DeletePersonService",
			Handler:    _PersonService_DeletePersonService_Handler,
		},
		{
			MethodName: "GetPersonService",
			Handler:    _PersonService_GetPersonService_Handler,
		},
		{
			MethodName: "ListPersonService",
			Handler:    _PersonService_ListPersonService_Handler,
		},
		{
			MethodName: "UpdatePersonService",
			Handler:    _PersonService_UpdatePersonService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// TreeServiceClient is the client API for TreeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TreeServiceClient interface {
	// Creates a new Tree
	CreateTreeService(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error)
	// Delete a Tree
	DeleteTreeService(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTreeService(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTreeService(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTreeService(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error)
}

type treeServiceClient struct {
	cc *grpc.ClientConn
}

func NewTreeServiceClient(cc *grpc.ClientConn) TreeServiceClient {
	return &treeServiceClient{cc}
}

func (c *treeServiceClient) CreateTreeService(ctx context.Context, in *CreateTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error) {
	out := new(TreeEntity)
	err := c.cc.Invoke(ctx, "/bundled.TreeService/CreateTreeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treeServiceClient) DeleteTreeService(ctx context.Context, in *DeleteTreeServiceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/bundled.TreeService/DeleteTreeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treeServiceClient) GetTreeService(ctx context.Context, in *GetTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error) {
	out := new(TreeEntity)
	err := c.cc.Invoke(ctx, "/bundled.TreeService/GetTreeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treeServiceClient) ListTreeService(ctx context.Context, in *ListTreeServiceRequest, opts ...grpc.CallOption) (*TreeCollection, error) {
	out := new(TreeCollection)
	err := c.cc.Invoke(ctx, "/bundled.TreeService/ListTreeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *treeServiceClient) UpdateTreeService(ctx context.Context, in *UpdateTreeServiceRequest, opts ...grpc.CallOption) (*TreeEntity, error) {
	out := new(TreeEntity)
	err := c.cc.Invoke(ctx, "/bundled.TreeService/UpdateTreeService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TreeServiceServer is the server API for TreeService service.
type TreeServiceServer interface {
	// Creates a new Tree
	CreateTreeService(context.Context, *CreateTreeServiceRequest) (*TreeEntity, error)
	// Delete a Tree
	DeleteTreeService(context.Context, *DeleteTreeServiceRequest) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a TreeEntity which contains a Tree
	GetTreeService(context.Context, *GetTreeServiceRequest) (*TreeEntity, error)
	// The List method takes zero or more parameters as input, and returns a TreeCollection of TreeEntity that match the input parameters.
	ListTreeService(context.Context, *ListTreeServiceRequest) (*TreeCollection, error)
	// Updates a Tree, partial updates are supported
	UpdateTreeService(context.Context, *UpdateTreeServiceRequest) (*TreeEntity, error)
}

func RegisterTreeServiceServer(s *grpc.Server, srv TreeServiceServer) {
	s.RegisterService(&_TreeService_serviceDesc, srv)
}

func _TreeService_CreateTreeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeServiceServer).CreateTreeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TreeService/CreateTreeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeServiceServer).CreateTreeService(ctx, req.(*CreateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreeService_DeleteTreeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeServiceServer).DeleteTreeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TreeService/DeleteTreeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeServiceServer).DeleteTreeService(ctx, req.(*DeleteTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreeService_GetTreeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeServiceServer).GetTreeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TreeService/GetTreeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeServiceServer).GetTreeService(ctx, req.(*GetTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreeService_ListTreeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeServiceServer).ListTreeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TreeService/ListTreeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeServiceServer).ListTreeService(ctx, req.(*ListTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TreeService_UpdateTreeService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTreeServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TreeServiceServer).UpdateTreeService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TreeService/UpdateTreeService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TreeServiceServer).UpdateTreeService(ctx, req.(*UpdateTreeServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TreeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bundled.TreeService",
	HandlerType: (*TreeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTreeService",
			Handler:    _TreeService_CreateTreeService_Handler,
		},
		{
			MethodName: "DeleteTreeService",
			Handler:    _TreeService_DeleteTreeService_Handler,
		},
		{
			MethodName: "GetTreeService",
			Handler:    _TreeService_GetTreeService_Handler,
		},
		{
			MethodName: "ListTreeService",
			Handler:    _TreeService_ListTreeService_Handler,
		},
		{
			MethodName: "UpdateTreeService",
			Handler:    _TreeService_UpdateTreeService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// ProjectMembersServiceClient is the client API for ProjectMembersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectMembersServiceClient interface {
	// Get a collection with PersonEntities
	ListProjectMembersService(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error)
}

type projectMembersServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectMembersServiceClient(cc *grpc.ClientConn) ProjectMembersServiceClient {
	return &projectMembersServiceClient{cc}
}

func (c *projectMembersServiceClient) ListProjectMembersService(ctx context.Context, in *ListProjectMembersServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error) {
	out := new(PersonCollection)
	err := c.cc.Invoke(ctx, "/bundled.ProjectMembersService/ListProjectMembersService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectMembersServiceClient) UnsubscribeProjectMembersService(ctx context.Context, in *UnsubscribeProjectMembersServiceRequest, opts ...grpc.CallOption) (*PersonCollection, error) {
	out := new(PersonCollection)
	err := c.cc.Invoke(ctx, "/bundled.ProjectMembersService/UnsubscribeProjectMembersService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectMembersServiceServer is the server API for ProjectMembersService service.
type ProjectMembersServiceServer interface {
	// Get a collection with PersonEntities
	ListProjectMembersService(context.Context, *ListProjectMembersServiceRequest) (*PersonCollection, error)
	// Custom method to unsubscribe a member, complete PersonEntity is expected
	UnsubscribeProjectMembersService(context.Context, *UnsubscribeProjectMembersServiceRequest) (*PersonCollection, error)
}

func RegisterProjectMembersServiceServer(s *grpc.Server, srv ProjectMembersServiceServer) {
	s.RegisterService(&_ProjectMembersService_serviceDesc, srv)
}

func _ProjectMembersService_ListProjectMembersService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMembersServiceServer).ListProjectMembersService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectMembersService/ListProjectMembersService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMembersServiceServer).ListProjectMembersService(ctx, req.(*ListProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectMembersService_UnsubscribeProjectMembersService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeProjectMembersServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectMembersServiceServer).UnsubscribeProjectMembersService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.ProjectMembersService/UnsubscribeProjectMembersService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectMembersServiceServer).UnsubscribeProjectMembersService(ctx, req.(*UnsubscribeProjectMembersServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectMembersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bundled.ProjectMembersService",
	HandlerType: (*ProjectMembersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListProjectMembersService",
			Handler:    _ProjectMembersService_ListProjectMembersService_Handler,
		},
		{
			MethodName: "UnsubscribeProjectMembersService",
			Handler:    _ProjectMembersService_UnsubscribeProjectMembersService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	// Creates a new Task
	CreateTaskService(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error)
	// Delete a Task
	DeleteTaskService(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTaskService(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTaskService(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*TaskCollection, error)
	// Updates a Task, partial updates are supported
	UpdateTaskService(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) CreateTaskService(ctx context.Context, in *CreateTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error) {
	out := new(TaskEntity)
	err := c.cc.Invoke(ctx, "/bundled.TaskService/CreateTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) DeleteTaskService(ctx context.Context, in *DeleteTaskServiceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/bundled.TaskService/DeleteTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) GetTaskService(ctx context.Context, in *GetTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error) {
	out := new(TaskEntity)
	err := c.cc.Invoke(ctx, "/bundled.TaskService/GetTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) ListTaskService(ctx context.Context, in *ListTaskServiceRequest, opts ...grpc.CallOption) (*TaskCollection, error) {
	out := new(TaskCollection)
	err := c.cc.Invoke(ctx, "/bundled.TaskService/ListTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskServiceClient) UpdateTaskService(ctx context.Context, in *UpdateTaskServiceRequest, opts ...grpc.CallOption) (*TaskEntity, error) {
	out := new(TaskEntity)
	err := c.cc.Invoke(ctx, "/bundled.TaskService/UpdateTaskService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	// Creates a new Task
	CreateTaskService(context.Context, *CreateTaskServiceRequest) (*TaskEntity, error)
	// Delete a Task
	DeleteTaskService(context.Context, *DeleteTaskServiceRequest) (*Empty, error)
	// The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
	GetTaskService(context.Context, *GetTaskServiceRequest) (*TaskEntity, error)
	// The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
	ListTaskService(context.Context, *ListTaskServiceRequest) (*TaskCollection, error)
	// Updates a Task, partial updates are supported
	UpdateTaskService(context.Context, *UpdateTaskServiceRequest) (*TaskEntity, error)
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_CreateTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TaskService/CreateTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTaskService(ctx, req.(*CreateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_DeleteTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).DeleteTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TaskService/DeleteTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).DeleteTaskService(ctx, req.(*DeleteTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_GetTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).GetTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TaskService/GetTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).GetTaskService(ctx, req.(*GetTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_ListTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).ListTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TaskService/ListTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).ListTaskService(ctx, req.(*ListTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaskService_UpdateTaskService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).UpdateTaskService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bundled.TaskService/UpdateTaskService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).UpdateTaskService(ctx, req.(*UpdateTaskServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bundled.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTaskService",
			Handler:    _TaskService_CreateTaskService_Handler,
		},
		{
			MethodName: "DeleteTaskService",
			Handler:    _TaskService_DeleteTaskService_Handler,
		},
		{
			MethodName: "GetTaskService",
			Handler:    _TaskService_GetTaskService_Handler,
		},
		{
			MethodName: "ListTaskService",
			Handler:    _TaskService_ListTaskService_Handler,
		},
		{
			MethodName: "UpdateTaskService",
			Handler:    _TaskService_UpdateTaskService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

func (m *CreateProjectServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateProjectServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n1, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteProjectServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteProjectServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Var) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Var)))
		i += copy(dAtA[i:], m.Var)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n2, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetProjectServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProjectServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Var) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Var)))
		i += copy(dAtA[i:], m.Var)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListProjectServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListProjectServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Fields) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Fields)))
		i += copy(dAtA[i:], m.Fields)
	}
	if len(m.Sort) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sort)))
		i += copy(dAtA[i:], m.Sort)
	}
	if len(m.Filter) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Filter)))
		i += copy(dAtA[i:], m.Filter)
	}
	if m.Page != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Page))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Limit))
	}
	if m.Count {
		dAtA[i] = 0x30
		i++
		if m.Count {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Sum) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sum)))
		i += copy(dAtA[i:], m.Sum)
	}
	if len(m.View) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.View)))
		i += copy(dAtA[i:], m.View)
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateProjectServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateProjectServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Var) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Var)))
		i += copy(dAtA[i:], m.Var)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n3, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreatePersonServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatePersonServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n4, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeletePersonServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeletePersonServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Prs) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Prs)))
		i += copy(dAtA[i:], m.Prs)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n5, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetPersonServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPersonServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Prs) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Prs)))
		i += copy(dAtA[i:], m.Prs)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListPersonServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPersonServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Fields) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Fields)))
		i += copy(dAtA[i:], m.Fields)
	}
	if len(m.Sort) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sort)))
		i += copy(dAtA[i:], m.Sort)
	}
	if len(m.Filter) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Filter)))
		i += copy(dAtA[i:], m.Filter)
	}
	if m.Page != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Page))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Limit))
	}
	if m.Count {
		dAtA[i] = 0x30
		i++
		if m.Count {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Sum) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sum)))
		i += copy(dAtA[i:], m.Sum)
	}
	if len(m.View) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.View)))
		i += copy(dAtA[i:], m.View)
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdatePersonServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdatePersonServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Prs) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Prs)))
		i += copy(dAtA[i:], m.Prs)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n6, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateTreeServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTreeServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n7, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteTreeServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteTreeServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tre) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tre)))
		i += copy(dAtA[i:], m.Tre)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n8, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTreeServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTreeServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tre) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tre)))
		i += copy(dAtA[i:], m.Tre)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListTreeServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListTreeServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Fields) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Fields)))
		i += copy(dAtA[i:], m.Fields)
	}
	if len(m.Sort) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sort)))
		i += copy(dAtA[i:], m.Sort)
	}
	if len(m.Filter) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Filter)))
		i += copy(dAtA[i:], m.Filter)
	}
	if m.Page != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Page))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Limit))
	}
	if m.Count {
		dAtA[i] = 0x30
		i++
		if m.Count {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Sum) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sum)))
		i += copy(dAtA[i:], m.Sum)
	}
	if len(m.View) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.View)))
		i += copy(dAtA[i:], m.View)
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateTreeServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateTreeServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tre) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tre)))
		i += copy(dAtA[i:], m.Tre)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n9, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListProjectMembersServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListProjectMembersServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Fields) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Fields)))
		i += copy(dAtA[i:], m.Fields)
	}
	if len(m.Sort) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sort)))
		i += copy(dAtA[i:], m.Sort)
	}
	if len(m.Filter) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Filter)))
		i += copy(dAtA[i:], m.Filter)
	}
	if m.Page != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Page))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Limit))
	}
	if m.Count {
		dAtA[i] = 0x30
		i++
		if m.Count {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Sum) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sum)))
		i += copy(dAtA[i:], m.Sum)
	}
	if len(m.View) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.View)))
		i += copy(dAtA[i:], m.View)
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UnsubscribeProjectMembersServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnsubscribeProjectMembersServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Prs) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Prs)))
		i += copy(dAtA[i:], m.Prs)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n10, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreateTaskServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateTaskServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n11, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeleteTaskServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteTaskServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tsk) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tsk)))
		i += copy(dAtA[i:], m.Tsk)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n12, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetTaskServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTaskServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tsk) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tsk)))
		i += copy(dAtA[i:], m.Tsk)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ListTaskServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListTaskServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Fields) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Fields)))
		i += copy(dAtA[i:], m.Fields)
	}
	if len(m.Sort) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sort)))
		i += copy(dAtA[i:], m.Sort)
	}
	if len(m.Filter) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Filter)))
		i += copy(dAtA[i:], m.Filter)
	}
	if m.Page != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Page))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Limit))
	}
	if m.Count {
		dAtA[i] = 0x30
		i++
		if m.Count {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Sum) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Sum)))
		i += copy(dAtA[i:], m.Sum)
	}
	if len(m.View) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.View)))
		i += copy(dAtA[i:], m.View)
	}
	if len(m.Q) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateTaskServiceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateTaskServiceRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Tsk) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintServices(dAtA, i, uint64(len(m.Tsk)))
		i += copy(dAtA[i:], m.Tsk)
	}
	if m.Data != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintServices(dAtA, i, uint64(m.Data.Size()))
		n13, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Empty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Empty) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintServices(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CreateProjectServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteProjectServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Var)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProjectServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Var)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListProjectServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Fields)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Sort)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Filter)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovServices(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovServices(uint64(m.Limit))
	}
	if m.Count {
		n += 2
	}
	l = len(m.Sum)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.View)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateProjectServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Var)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreatePersonServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeletePersonServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Prs)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPersonServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Prs)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListPersonServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Fields)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Sort)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Filter)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovServices(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovServices(uint64(m.Limit))
	}
	if m.Count {
		n += 2
	}
	l = len(m.Sum)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.View)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdatePersonServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Prs)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateTreeServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteTreeServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tre)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTreeServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tre)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListTreeServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Fields)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Sort)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Filter)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovServices(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovServices(uint64(m.Limit))
	}
	if m.Count {
		n += 2
	}
	l = len(m.Sum)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.View)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateTreeServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tre)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListProjectMembersServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Fields)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Sort)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Filter)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovServices(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovServices(uint64(m.Limit))
	}
	if m.Count {
		n += 2
	}
	l = len(m.Sum)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.View)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnsubscribeProjectMembersServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Prs)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateTaskServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteTaskServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsk)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTaskServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsk)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListTaskServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Fields)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Sort)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Filter)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Page != 0 {
		n += 1 + sovServices(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovServices(uint64(m.Limit))
	}
	if m.Count {
		n += 2
	}
	l = len(m.Sum)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.View)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateTaskServiceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Tsk)
	if l > 0 {
		n += 1 + l + sovServices(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovServices(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Empty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServices(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozServices(x uint64) (n int) {
	return sovServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateProjectServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateProjectServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateProjectServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Project{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteProjectServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteProjectServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteProjectServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Var", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Var = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Empty{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProjectServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProjectServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProjectServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Var", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Var = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListProjectServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListProjectServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListProjectServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.View = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateProjectServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateProjectServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateProjectServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Var", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Var = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Project{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreatePersonServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatePersonServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatePersonServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Person{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeletePersonServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeletePersonServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeletePersonServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Empty{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPersonServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPersonServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPersonServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPersonServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListPersonServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListPersonServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.View = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdatePersonServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdatePersonServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdatePersonServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Person{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateTreeServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTreeServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTreeServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Tree{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteTreeServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteTreeServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteTreeServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tre", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tre = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Empty{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTreeServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTreeServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTreeServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tre", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tre = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListTreeServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListTreeServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListTreeServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.View = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateTreeServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateTreeServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateTreeServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tre", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tre = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Tree{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListProjectMembersServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListProjectMembersServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListProjectMembersServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.View = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnsubscribeProjectMembersServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnsubscribeProjectMembersServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnsubscribeProjectMembersServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &PersonEntity{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateTaskServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateTaskServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateTaskServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Task{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteTaskServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteTaskServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteTaskServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsk", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsk = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Empty{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTaskServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTaskServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTaskServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsk", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsk = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListTaskServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListTaskServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListTaskServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Count = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sum", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sum = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field View", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.View = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateTaskServiceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateTaskServiceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateTaskServiceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tsk", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tsk = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServices
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &Task{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Empty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Empty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Empty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthServices
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowServices
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipServices(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthServices = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServices   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("services.proto", fileDescriptor_services_c852a0a2becf40a0) }

var fileDescriptor_services_c852a0a2becf40a0 = []byte{
	// 1098 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0xcd, 0x4e, 0x23, 0x47,
	0x10, 0xd6, 0x80, 0x81, 0xdd, 0x02, 0x8c, 0x29, 0x6c, 0x98, 0x1d, 0x47, 0x8e, 0x19, 0x50, 0x02,
	0x64, 0x85, 0x23, 0xe7, 0x16, 0x29, 0x87, 0x84, 0xac, 0xf6, 0x92, 0x28, 0x2b, 0x13, 0xce, 0xc9,
	0xd8, 0x6e, 0xac, 0x89, 0x7f, 0xc6, 0x74, 0xb7, 0x41, 0x11, 0xe2, 0x12, 0x29, 0x4f, 0x90, 0x73,
	0x1e, 0x21, 0x52, 0x5e, 0x21, 0xb7, 0x1c, 0x57, 0xd9, 0x5b, 0x4e, 0x11, 0xca, 0x83, 0x44, 0xd3,
	0xd3, 0xb6, 0xbb, 0x67, 0xba, 0xcd, 0x70, 0x24, 0x27, 0xe6, 0xa7, 0xbb, 0xbe, 0xaa, 0xfa, 0xea,
	0x9b, 0xfe, 0x30, 0x14, 0x19, 0xa1, 0xd7, 0x61, 0x87, 0xb0, 0xd3, 0x31, 0x8d, 0x78, 0x84, 0x6b,
	0xed, 0xc9, 0xa8, 0x3b, 0x20, 0x5d, 0xef, 0xbd, 0x5e, 0x14, 0xf5, 0x06, 0xa4, 0x11, 0x8c, 0xc3,
	0x46, 0x30, 0x1a, 0x45, 0x3c, 0xe0, 0x61, 0x34, 0x92, 0xcb, 0xbc, 0xe2, 0x90, 0x30, 0x16, 0xf4,
	0xa6, 0xdb, 0xbc, 0xb2, 0xf8, 0xd3, 0x9e, 0x5c, 0x36, 0xc8, 0x70, 0xcc, 0x7f, 0x4c, 0x9e, 0xfa,
	0x67, 0x50, 0x3d, 0xa3, 0x24, 0xe0, 0xe4, 0x0d, 0x8d, 0x7e, 0x20, 0x1d, 0x7e, 0x9e, 0x60, 0xb5,
	0xc8, 0xd5, 0x84, 0x30, 0x8e, 0x87, 0x50, 0xe8, 0x06, 0x3c, 0x70, 0x9d, 0xba, 0x73, 0xb4, 0xde,
	0x2c, 0x9d, 0x4a, 0xe8, 0x53, 0xb9, 0xba, 0x25, 0xde, 0xfa, 0xe7, 0x50, 0xfd, 0x92, 0x0c, 0x88,
	0x2d, 0x48, 0x09, 0x96, 0xaf, 0x03, 0x2a, 0x62, 0x3c, 0x6f, 0xc5, 0x97, 0xe8, 0xcb, 0xb0, 0x4b,
	0x22, 0x6c, 0x71, 0x16, 0xf6, 0x55, 0x9c, 0x99, 0x0c, 0xfa, 0x12, 0xdc, 0xd7, 0x84, 0xe7, 0x8c,
	0xe8, 0xbf, 0x73, 0xe0, 0xc5, 0x57, 0x21, 0xb3, 0xac, 0xdf, 0x85, 0xd5, 0xcb, 0x90, 0x0c, 0xba,
	0x4c, 0x6e, 0x91, 0x77, 0x88, 0x50, 0x60, 0x11, 0xe5, 0x22, 0x8f, 0xe7, 0x2d, 0x71, 0x9d, 0xac,
	0x1d, 0x70, 0x42, 0xdd, 0xe5, 0xe9, 0xda, 0xf8, 0x2e, 0x5e, 0x3b, 0x0e, 0x7a, 0xc4, 0x2d, 0xd4,
	0x9d, 0xa3, 0x95, 0x96, 0xb8, 0xc6, 0x32, 0xac, 0x0c, 0xc2, 0x61, 0xc8, 0xdd, 0x15, 0xf1, 0x30,
	0xb9, 0x89, 0x9f, 0x76, 0xa2, 0xc9, 0x88, 0xbb, 0xab, 0x75, 0xe7, 0xe8, 0x59, 0x2b, 0xb9, 0x89,
	0x73, 0x66, 0x93, 0xa1, 0xbb, 0x96, 0xe4, 0xcc, 0x26, 0xc3, 0x38, 0xe2, 0x75, 0x48, 0x6e, 0xdc,
	0x67, 0x09, 0x7a, 0x7c, 0x8d, 0x1b, 0xe0, 0x5c, 0xb9, 0xeb, 0xe2, 0x81, 0x73, 0xe5, 0x5f, 0x40,
	0xf5, 0x62, 0xdc, 0x0d, 0xf2, 0x37, 0xf6, 0x50, 0x6b, 0xac, 0x8d, 0xaf, 0xcf, 0xc1, 0x93, 0xa4,
	0x13, 0xca, 0xa2, 0x51, 0x2a, 0xea, 0x81, 0xc6, 0xf9, 0xd6, 0x3c, 0x86, 0x58, 0x2c, 0x43, 0xb4,
	0xc0, 0x93, 0x94, 0x9b, 0x42, 0x94, 0x60, 0x79, 0x4c, 0xa7, 0xcd, 0x8e, 0x2f, 0x73, 0x31, 0xfe,
	0x11, 0xec, 0xc5, 0x8c, 0xe7, 0x0a, 0xe8, 0xff, 0xe5, 0x80, 0x2b, 0x08, 0x37, 0x2d, 0x7f, 0xaa,
	0x7c, 0x9f, 0x83, 0x27, 0xf9, 0xce, 0xd7, 0xd5, 0x03, 0xad, 0xab, 0x16, 0xaa, 0x3e, 0x03, 0x37,
	0x61, 0xfb, 0x5b, 0x4a, 0x48, 0x2a, 0xe4, 0xbe, 0xc6, 0xf5, 0xe6, 0x2c, 0x40, 0xbc, 0x54, 0x6e,
	0x7f, 0x03, 0x6e, 0xc2, 0xb4, 0x61, 0x7b, 0x09, 0x96, 0x39, 0x25, 0xd3, 0x8c, 0x38, 0x25, 0xb9,
	0x78, 0x3e, 0x86, 0xca, 0x6b, 0xc2, 0xf3, 0x84, 0xf3, 0xdf, 0x3a, 0xb0, 0x1b, 0xb3, 0x6c, 0x58,
	0xfc, 0x54, 0x39, 0xfe, 0x06, 0xdc, 0x84, 0xe3, 0x5c, 0xfd, 0xdc, 0xd7, 0xfa, 0x69, 0x24, 0xe8,
	0x6f, 0x07, 0xea, 0xca, 0xa7, 0xef, 0x6b, 0x32, 0x6c, 0x13, 0xca, 0xfe, 0x27, 0xdd, 0xba, 0x84,
	0x0f, 0x2f, 0x46, 0x6c, 0xd2, 0x66, 0x1d, 0x1a, 0xb6, 0xc9, 0xc2, 0x12, 0xb3, 0xf2, 0x38, 0xd6,
	0x9a, 0x57, 0x49, 0xc9, 0xe3, 0xd5, 0x88, 0x87, 0xb3, 0x99, 0x9c, 0x8b, 0x24, 0x60, 0xfd, 0xbc,
	0x22, 0x09, 0x58, 0x3f, 0x23, 0x92, 0xec, 0xf6, 0x98, 0x54, 0xd6, 0x9f, 0x91, 0xca, 0xfa, 0x8f,
	0x11, 0x49, 0x8e, 0x70, 0x73, 0x91, 0x64, 0x17, 0x3f, 0x7d, 0x91, 0xe4, 0xe9, 0xa7, 0x55, 0x24,
	0x73, 0x82, 0xd6, 0x60, 0x45, 0x74, 0xb7, 0xf9, 0x47, 0x01, 0x8a, 0xfa, 0x69, 0x8a, 0x57, 0x50,
	0x36, 0x79, 0x20, 0x3c, 0x9c, 0x05, 0x5a, 0x60, 0x91, 0xbc, 0xdd, 0xf4, 0x21, 0x9b, 0xcc, 0x95,
	0x5f, 0xfd, 0xe9, 0xdd, 0xbf, 0xbf, 0x2c, 0x55, 0xfc, 0x4d, 0xe1, 0xcf, 0xc6, 0xc9, 0x3b, 0xf6,
	0xa9, 0x48, 0x07, 0x43, 0x28, 0x9b, 0x1c, 0x93, 0x02, 0xb9, 0xc0, 0x50, 0x79, 0xa9, 0x89, 0x99,
	0x42, 0x9d, 0xec, 0x68, 0x50, 0x8d, 0xdb, 0xeb, 0x80, 0xde, 0x61, 0x1f, 0xb6, 0x33, 0x3e, 0x0a,
	0xf7, 0x67, 0x11, 0x6c, 0x1e, 0xeb, 0xa1, 0xba, 0xd0, 0x02, 0x86, 0x59, 0x17, 0x86, 0xfe, 0x2c,
	0x94, 0xd5, 0xa2, 0x79, 0x5e, 0x1a, 0xee, 0x2c, 0x1a, 0x0c, 0x48, 0x27, 0x76, 0xb4, 0x7e, 0x45,
	0x40, 0x6e, 0xa1, 0xde, 0x4a, 0xbc, 0x81, 0xb2, 0xc9, 0x1d, 0x29, 0x4d, 0x5c, 0x60, 0x9e, 0xac,
	0xf5, 0xed, 0x0b, 0xb0, 0x6a, 0xd3, 0x54, 0x5f, 0xc2, 0x5e, 0xf3, 0xb7, 0x02, 0x6c, 0x6a, 0x27,
	0x34, 0x0e, 0x61, 0xc7, 0xe0, 0xa8, 0xf0, 0x20, 0x3d, 0x41, 0x86, 0x63, 0xdd, 0x33, 0x7f, 0x97,
	0x7c, 0x4f, 0xe4, 0x51, 0xf6, 0x37, 0x92, 0x3c, 0xc4, 0xab, 0xe9, 0xf8, 0x5c, 0xc2, 0x8e, 0xc1,
	0x7d, 0x29, 0x70, 0x76, 0x6f, 0x96, 0x19, 0x1e, 0x89, 0x73, 0x82, 0x2a, 0x4e, 0xe3, 0x76, 0x4c,
	0xd9, 0x1d, 0xf6, 0xa0, 0x94, 0x76, 0x64, 0x58, 0xd7, 0x46, 0xe7, 0xf1, 0x05, 0xa1, 0x19, 0x68,
	0x3b, 0x63, 0xe6, 0x94, 0x21, 0xb5, 0x19, 0x3d, 0xef, 0x45, 0x0a, 0x4a, 0x19, 0x9a, 0xb2, 0x80,
	0x2b, 0xa2, 0xd6, 0x3f, 0x64, 0xb0, 0x63, 0x70, 0x58, 0x4a, 0xe7, 0xec, 0xfe, 0xcb, 0x56, 0x57,
	0x5d, 0x00, 0x79, 0x4d, 0x43, 0x5d, 0x72, 0x5e, 0x7e, 0x2e, 0xc0, 0xba, 0x72, 0xda, 0x23, 0x81,
	0xed, 0x8c, 0x23, 0x53, 0xaa, 0xb5, 0xb9, 0x35, 0x6f, 0x47, 0x3b, 0xfe, 0x25, 0xbc, 0x2b, 0xe0,
	0xd1, 0x07, 0x01, 0xcf, 0x29, 0x21, 0xd3, 0x29, 0xf9, 0x1e, 0xb6, 0x33, 0xce, 0x4d, 0x81, 0xb1,
	0xb9, 0xba, 0xcc, 0x84, 0x48, 0x84, 0x93, 0xd2, 0x1c, 0xa1, 0x71, 0xcb, 0x29, 0xb9, 0xc3, 0xef,
	0xa0, 0xa8, 0x3b, 0x39, 0xac, 0xa9, 0xd3, 0xf1, 0xc8, 0x12, 0xd0, 0x04, 0xb0, 0x95, 0xb2, 0x7f,
	0xf8, 0xbe, 0x36, 0x15, 0x06, 0x88, 0x3d, 0x0d, 0x42, 0x99, 0x08, 0x14, 0x30, 0x1b, 0xa8, 0x74,
	0x2a, 0xfe, 0x3a, 0x66, 0xdc, 0x98, 0xd2, 0x23, 0x9b, 0x53, 0x33, 0xd7, 0x51, 0x13, 0x00, 0x6e,
	0x33, 0x53, 0x87, 0x9c, 0x83, 0xdf, 0x97, 0xa0, 0x62, 0xb4, 0x30, 0x78, 0xa3, 0xfd, 0xf7, 0x9a,
	0x7a, 0x79, 0x6c, 0xfa, 0x7c, 0x1a, 0x3d, 0x50, 0x7e, 0x3d, 0x0c, 0x93, 0xed, 0xf8, 0xab, 0x03,
	0xf5, 0x87, 0x0c, 0x16, 0x7e, 0x3c, 0xef, 0x47, 0x3e, 0x2f, 0xb6, 0x28, 0x8f, 0x97, 0x22, 0x8f,
	0x0f, 0xfc, 0x9a, 0x9a, 0x87, 0x94, 0xcb, 0x64, 0x1e, 0x5e, 0x95, 0xce, 0xdc, 0x03, 0x28, 0xd2,
	0x51, 0x1e, 0x66, 0xa4, 0x93, 0x31, 0x0d, 0x2a, 0x5f, 0x01, 0xeb, 0x9b, 0xa5, 0x13, 0xb0, 0x7e,
	0x56, 0x3a, 0x46, 0x18, 0x9b, 0xd7, 0x7b, 0x48, 0x3a, 0x31, 0x42, 0xe3, 0x96, 0xb3, 0xfe, 0x4c,
	0x3a, 0x4a, 0x78, 0x5d, 0x3a, 0x8f, 0x2b, 0x01, 0x4d, 0x00, 0x5b, 0x29, 0x53, 0x98, 0x96, 0x4e,
	0x16, 0x62, 0x4f, 0x83, 0xb0, 0x4b, 0x27, 0x86, 0x51, 0xa4, 0x63, 0xec, 0x91, 0xcd, 0xbf, 0x99,
	0xeb, 0x48, 0x49, 0x67, 0x5e, 0x47, 0x42, 0xc8, 0x17, 0x1b, 0x7f, 0xde, 0xd7, 0x9c, 0xb7, 0xf7,
	0x35, 0xe7, 0x9f, 0xfb, 0x9a, 0xd3, 0x5e, 0x15, 0x3f, 0x5e, 0x7d, 0xf2, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa5, 0x6a, 0x93, 0x1c, 0x1b, 0x13, 0x00, 0x00,
}
