// Code generated by furo-proto-gen. DO NOT EDIT.

syntax = "proto3";
package experimentservice;



import "google/api/annotations.proto";

import "experiment/experiment.proto";
import "google/protobuf/empty.proto";



// service specs for the experiment api
service ExperimentService {                       
   
    // Creates a new Experiment
    rpc CreateExperiment (CreateExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            post: "/mockdata/experiments"
            body: "data"
        };
    }   
    // Delete a Experiment
    rpc DeleteExperiment (DeleteExperimentServiceRequest) returns (google.protobuf.Empty){
        //
        option (google.api.http) = {
            delete: "/mockdata/experiments/{exp}"
            
        };
    }   
    // The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
    rpc GetExperiment (GetExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/experiments/{exp}/get.json"
        };
    }   
    // The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
    rpc ListExperiments (ListExperimentServiceRequest) returns (experiment.ExperimentCollection){
        //Describe_the_query_params_if_you_have
        option (google.api.http) = {
            get: "/mockdata/experiments"
        };
    }   
    // Updates a Experiment, partial updates are supported
    rpc UpdateExperiment (UpdateExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            patch: "/mockdata/experiments/{exp}"
            body: "data"
        };
    }
}


   
message CreateExperimentServiceRequest { 
    
    experiment.Experiment data =  1;  
}

   
message DeleteExperimentServiceRequest { 
    
    string exp = 1;
    google.protobuf.Empty data =  2;  
}

   
message GetExperimentServiceRequest { 
    
    string exp = 1; 
}

   
message ListExperimentServiceRequest { 
    
    //Partial representation, fields=id,name
    string fields = 1;
    /**
     * Sort fields, comma separated list for the ordering
     * use **?filter=-display_name** with a dash to sort descending
     * use **?filter=display_name** to sort ascending
     */
    string order_by = 2;
    //Filter
    string filter = 3;
    //Page number for paginated content. Tipp: follow the HATEOAS next, prev,...
    int32 page = 4;
    //Number of elements to return per page
    int32 limit = 5;
    //https://cloud.google.com/apis/design/design_patterns#resource_view
    string view = 8;       
       
    //Query term to search a experiment
    string q = 11;
}

   
message UpdateExperimentServiceRequest { 
    
    string exp = 1;
    experiment.Experiment data =  2;  
}



