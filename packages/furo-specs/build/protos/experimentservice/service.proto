// Code generated by furo-proto-gen. DO NOT EDIT.

syntax = "proto3";
package experimentservice;



import "google/api/annotations.proto";

import "experiment/experiment.proto";
import "google/protobuf/empty.proto";



// service specs for the experiment api
service ExperimentService {                           
       
    // Creates a new Experiment
    rpc CreateExperiment (CreateExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            post: "/mockdata/experiments"
            body: "data"
        };
    }   
    // Delete a Experiment
    rpc DeleteExperiment (DeleteExperimentServiceRequest) returns (google.protobuf.Empty){
        //
        option (google.api.http) = {
            delete: "/mockdata/experiments/{exp}"
            
        };
    }   
    // The Get method takes zero or more parameters, and returns a ExperimentEntity which contains a Experiment
    rpc GetExperiment (GetExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/experiments/{exp}/get.json"
        };
    }   
    // The List method takes zero or more parameters as input, and returns a ExperimentCollection of ExperimentEntity that match the input parameters.
    rpc ListExperiments (ListExperimentServiceRequest) returns (experiment.ExperimentCollection){
        //Describe_the_query_params_if_you_have
        option (google.api.http) = {
            get: "/mockdata/experiments"
        };
    }   
    // Releases experiment
    rpc ReleaseExperiment (ReleaseExperimentServiceRequest) returns (google.protobuf.Empty){
        //
        option (google.api.http) = {
            post: "/mockdata/experiments/1:release"
            body: "data"
        };
    }   
    // Updates a Experiment, partial updates are supported
    rpc UpdateExperiment (UpdateExperimentServiceRequest) returns (experiment.ExperimentEntity){
        //
        option (google.api.http) = {
            patch: "/mockdata/experiments/{exp}"
            body: "data"
        };
    }
}

   
message CreateExperimentServiceRequest { 

    experiment.Experiment data = 1;  
}
       
message DeleteExperimentServiceRequest { 

    string exp = 1;
    google.protobuf.Empty data = 2;  
}
       
message GetExperimentServiceRequest { 

    string exp = 1; 
}
       
message ListExperimentServiceRequest { 
      
   
    //Query term to search a experiment
    string q = 1;
}
       
message ReleaseExperimentServiceRequest { 

    experiment.ExperimentEntity data = 1;  
}
       
message UpdateExperimentServiceRequest { 

    string exp = 1;
    experiment.Experiment data = 2;  
}
    

