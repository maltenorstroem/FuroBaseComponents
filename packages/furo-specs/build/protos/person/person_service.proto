// Code generated by furo-proto-gen. DO NOT EDIT.
// generation date: 2019-08-17 10:06:34

syntax = "proto3";
package person;

import "google/api/annotations.proto";

import "person.proto";
import "person_entity.proto";
import "person_collection.proto";
import "protobuf/empty.proto";



// service specs for the person api
service PersonService {                       
   
    // Creates a new Person
    rpc CreatePersonService (CreatePersonServiceRequest) returns (person.PersonEntity){
        //
        option (google.api.http) = {
            post: "/api/persons"
            body: "data"
        };
    }   
    // Delete a Person
    rpc DeletePersonService (DeletePersonServiceRequest) returns (protobuf.Empty){
        //
        option (google.api.http) = {
            delete: "/api/persons/{prs}"
            
        };
    }   
    // The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
    rpc GetPersonService (GetPersonServiceRequest) returns (person.PersonEntity){
        //
        option (google.api.http) = {
            get: "/api/persons/{prs}"
        };
    }   
    // The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
    rpc ListPersonService (ListPersonServiceRequest) returns (person.PersonCollection){
        //Describe_the_query_params_if_you_have
        option (google.api.http) = {
            get: "/api/persons"
        };
    }   
    // Updates a Person, partial updates are supported
    rpc UpdatePersonService (UpdatePersonServiceRequest) returns (person.PersonEntity){
        //
        option (google.api.http) = {
            patch: "/api/persons/{prs}"
            body: "data"
        };
    }
}


   
message CreatePersonServiceRequest { 
    
    person.Person data =  1;  
}

   
message DeletePersonServiceRequest { 
    
    string prs = 1;
    protobuf.Empty data =  2;  
}

   
message GetPersonServiceRequest { 
    
    string prs = 1; 
}

   
message ListPersonServiceRequest { 
    
    //Partielle Repr채sentation fields=id,name // 10
    string fields = 1;
    //Sortierung nach feldern
    //**?filter=-completed** um completed absteigend zu bekommen
    //**?filter=completed** um completed aufsteigend zu bekommen
    string sort = 2;
    //Filter
    string filter = 3;
    //Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...
    int32 page = 4;
    //Anzahl Elemente pro Seite, maximal sind 99 erlaubt
    int32 limit = 5;
    //Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt
    bool count = 6;
    //not implemented
    string sum = 7;
    //not implemented (ehemals context)
    string view = 8;       
       
    //Query term to search a person
    string q = 11;
}

   
message UpdatePersonServiceRequest { 
    
    string prs = 1;
    person.Person data =  2;  
}

