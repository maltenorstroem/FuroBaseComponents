// Code generated by furo-proto-gen. DO NOT EDIT.

syntax = "proto3";
package taskservice;



import "google/api/annotations.proto";

import "task/task.proto";
import "google/protobuf/empty.proto";



// service specs for the task api
service TaskService {                       
       
    // Creates a new Task
    rpc CreateTask (CreateTaskServiceRequest) returns (task.TaskEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/tasks/create.json"
            
        };
    }   
    // Delete a Task
    rpc DeleteTask (DeleteTaskServiceRequest) returns (google.protobuf.Empty){
        //
        option (google.api.http) = {
            get: "/mockdata/tasks/{tsk}/delete.json"
            
        };
    }   
    // The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task
    rpc GetTask (GetTaskServiceRequest) returns (task.TaskEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/tasks/{tsk}/get.json"
        };
    }   
    // The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.
    rpc ListTasks (ListTaskServiceRequest) returns (task.TaskCollection){
        //Describe_the_query_params_if_you_have
        option (google.api.http) = {
            get: "/mockdata/tasks/list.json"
        };
    }   
    // Updates a Task, partial updates are not supported
    rpc UpdateTask (UpdateTaskServiceRequest) returns (task.TaskEntity){
        //
        option (google.api.http) = {
            get: "/mockdata/tasks/{tsk}/update.json"
            
        };
    }
}

   
message CreateTaskServiceRequest { 

    task.Task data = 1;  
}
       
message DeleteTaskServiceRequest { 

    string tsk = 1;
    google.protobuf.Empty data = 2;  
}
       
message GetTaskServiceRequest { 

    string tsk = 1; 
}
       
message ListTaskServiceRequest { 
                
   
    //Partial representation (comma separated list of field names), ?fields=
    string fields = 1;   
    //The response message will be filtered by the fields before being sent back to the client, filter=[[&#39;id&#39;,&#39;eq&#39;,&#39;1&#39;]]
    string filter = 2;   
    //Specifies the result ordering for List requests. The default sorting order is ascending, ?order_by=foo desc,bar
    string order_by = 3;   
    //Use this field to specify the maximum number of results to be returned by the server. 
    //The server may further constrain the maximum number of results returned in a single page. 
    //If the page_size is 0, the server will decide the number of results to be returned. page_size=15
    string page_size = 4;   
    //Query term to search a {{.name}}
    string q = 5;   
    //allows the client to specify which view of the resource it wants to receive in the response. view=BASIC
    string view = 6;
}
       
message UpdateTaskServiceRequest { 

    string tsk = 1;
    task.Task data = 2;  
}
    

