// Code generated by furo-proto-gen. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: authservice/authservice.proto

package authservice

import (
	auth "../auth"
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *auth.Auth `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateAuthServiceRequest) Reset() {
	*x = CreateAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authservice_authservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthServiceRequest) ProtoMessage() {}

func (x *CreateAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authservice_authservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file_authservice_authservice_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAuthServiceRequest) GetData() *auth.Auth {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *empty.Empty `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DeleteAuthServiceRequest) Reset() {
	*x = DeleteAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authservice_authservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthServiceRequest) ProtoMessage() {}

func (x *DeleteAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authservice_authservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file_authservice_authservice_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteAuthServiceRequest) GetData() *empty.Empty {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetAuthServiceRequest) Reset() {
	*x = GetAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authservice_authservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthServiceRequest) ProtoMessage() {}

func (x *GetAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authservice_authservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*GetAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file_authservice_authservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuthServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Query term to search a auth
	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *ListAuthServiceRequest) Reset() {
	*x = ListAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authservice_authservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthServiceRequest) ProtoMessage() {}

func (x *ListAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authservice_authservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*ListAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file_authservice_authservice_proto_rawDescGZIP(), []int{3}
}

func (x *ListAuthServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UpdateAuthServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string     `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Data *auth.Auth `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateAuthServiceRequest) Reset() {
	*x = UpdateAuthServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authservice_authservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthServiceRequest) ProtoMessage() {}

func (x *UpdateAuthServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authservice_authservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthServiceRequest) Descriptor() ([]byte, []int) {
	return file_authservice_authservice_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAuthServiceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UpdateAuthServiceRequest) GetData() *auth.Auth {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_authservice_authservice_proto protoreflect.FileDescriptor

var file_authservice_authservice_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x75, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x61, 0x75, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22,
	0x4c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe8, 0x03,
	0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x25, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a,
	0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x2a,
	0x09, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x59, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x2f,
	0x7b, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x5a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x73, 0x12, 0x65, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x32, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x73, 0x2f, 0x7b, 0x75, 0x69,
	0x64, 0x7d, 0x3a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authservice_authservice_proto_rawDescOnce sync.Once
	file_authservice_authservice_proto_rawDescData = file_authservice_authservice_proto_rawDesc
)

func file_authservice_authservice_proto_rawDescGZIP() []byte {
	file_authservice_authservice_proto_rawDescOnce.Do(func() {
		file_authservice_authservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_authservice_authservice_proto_rawDescData)
	})
	return file_authservice_authservice_proto_rawDescData
}

var file_authservice_authservice_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_authservice_authservice_proto_goTypes = []interface{}{
	(*CreateAuthServiceRequest)(nil), // 0: authservice.CreateAuthServiceRequest
	(*DeleteAuthServiceRequest)(nil), // 1: authservice.DeleteAuthServiceRequest
	(*GetAuthServiceRequest)(nil),    // 2: authservice.GetAuthServiceRequest
	(*ListAuthServiceRequest)(nil),   // 3: authservice.ListAuthServiceRequest
	(*UpdateAuthServiceRequest)(nil), // 4: authservice.UpdateAuthServiceRequest
	(*auth.Auth)(nil),                // 5: auth.Auth
	(*empty.Empty)(nil),              // 6: google.protobuf.Empty
	(*auth.AuthEntity)(nil),          // 7: auth.AuthEntity
	(*auth.AuthCollection)(nil),      // 8: auth.AuthCollection
}
var file_authservice_authservice_proto_depIdxs = []int32{
	5, // 0: authservice.CreateAuthServiceRequest.data:type_name -> auth.Auth
	6, // 1: authservice.DeleteAuthServiceRequest.data:type_name -> google.protobuf.Empty
	5, // 2: authservice.UpdateAuthServiceRequest.data:type_name -> auth.Auth
	0, // 3: authservice.AuthService.CreateAuth:input_type -> authservice.CreateAuthServiceRequest
	1, // 4: authservice.AuthService.Logout:input_type -> authservice.DeleteAuthServiceRequest
	2, // 5: authservice.AuthService.GetAuth:input_type -> authservice.GetAuthServiceRequest
	3, // 6: authservice.AuthService.ListAuths:input_type -> authservice.ListAuthServiceRequest
	4, // 7: authservice.AuthService.UpdateAuth:input_type -> authservice.UpdateAuthServiceRequest
	7, // 8: authservice.AuthService.CreateAuth:output_type -> auth.AuthEntity
	6, // 9: authservice.AuthService.Logout:output_type -> google.protobuf.Empty
	7, // 10: authservice.AuthService.GetAuth:output_type -> auth.AuthEntity
	8, // 11: authservice.AuthService.ListAuths:output_type -> auth.AuthCollection
	7, // 12: authservice.AuthService.UpdateAuth:output_type -> auth.AuthEntity
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_authservice_authservice_proto_init() }
func file_authservice_authservice_proto_init() {
	if File_authservice_authservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authservice_authservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authservice_authservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authservice_authservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authservice_authservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authservice_authservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authservice_authservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authservice_authservice_proto_goTypes,
		DependencyIndexes: file_authservice_authservice_proto_depIdxs,
		MessageInfos:      file_authservice_authservice_proto_msgTypes,
	}.Build()
	File_authservice_authservice_proto = out.File
	file_authservice_authservice_proto_rawDesc = nil
	file_authservice_authservice_proto_goTypes = nil
	file_authservice_authservice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	// Creates a new Auth
	CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) CreateAuth(ctx context.Context, in *CreateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/authservice.AuthService/CreateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Logout(ctx context.Context, in *DeleteAuthServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/authservice.AuthService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetAuth(ctx context.Context, in *GetAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/authservice.AuthService/GetAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ListAuths(ctx context.Context, in *ListAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthCollection, error) {
	out := new(auth.AuthCollection)
	err := c.cc.Invoke(ctx, "/authservice.AuthService/ListAuths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) UpdateAuth(ctx context.Context, in *UpdateAuthServiceRequest, opts ...grpc.CallOption) (*auth.AuthEntity, error) {
	out := new(auth.AuthEntity)
	err := c.cc.Invoke(ctx, "/authservice.AuthService/UpdateAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	// Creates a new Auth
	CreateAuth(context.Context, *CreateAuthServiceRequest) (*auth.AuthEntity, error)
	// Logout ala delete a auth session
	Logout(context.Context, *DeleteAuthServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a AuthEntity which contains a Auth
	GetAuth(context.Context, *GetAuthServiceRequest) (*auth.AuthEntity, error)
	// The List method takes zero or more parameters as input, and returns a AuthCollection of AuthEntity that match the input parameters.
	ListAuths(context.Context, *ListAuthServiceRequest) (*auth.AuthCollection, error)
	// Updates a Auth, partial updates are supported
	UpdateAuth(context.Context, *UpdateAuthServiceRequest) (*auth.AuthEntity, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) CreateAuth(context.Context, *CreateAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuth not implemented")
}
func (*UnimplementedAuthServiceServer) Logout(context.Context, *DeleteAuthServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedAuthServiceServer) GetAuth(context.Context, *GetAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuth not implemented")
}
func (*UnimplementedAuthServiceServer) ListAuths(context.Context, *ListAuthServiceRequest) (*auth.AuthCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuths not implemented")
}
func (*UnimplementedAuthServiceServer) UpdateAuth(context.Context, *UpdateAuthServiceRequest) (*auth.AuthEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuth not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_CreateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).CreateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authservice.AuthService/CreateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).CreateAuth(ctx, req.(*CreateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authservice.AuthService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Logout(ctx, req.(*DeleteAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authservice.AuthService/GetAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetAuth(ctx, req.(*GetAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ListAuths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ListAuths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authservice.AuthService/ListAuths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ListAuths(ctx, req.(*ListAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_UpdateAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).UpdateAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authservice.AuthService/UpdateAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).UpdateAuth(ctx, req.(*UpdateAuthServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authservice.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAuth",
			Handler:    _AuthService_CreateAuth_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _AuthService_Logout_Handler,
		},
		{
			MethodName: "GetAuth",
			Handler:    _AuthService_GetAuth_Handler,
		},
		{
			MethodName: "ListAuths",
			Handler:    _AuthService_ListAuths_Handler,
		},
		{
			MethodName: "UpdateAuth",
			Handler:    _AuthService_UpdateAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authservice/authservice.proto",
}
