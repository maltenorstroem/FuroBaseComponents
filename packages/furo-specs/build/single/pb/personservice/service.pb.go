// Code generated by protoc-gen-go. DO NOT EDIT.
// source: personservice/service.proto

package personservice

import (
	person "../person"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreatePersonServiceRequest struct {
	Data                 *person.Person `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreatePersonServiceRequest) Reset()         { *m = CreatePersonServiceRequest{} }
func (m *CreatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePersonServiceRequest) ProtoMessage()    {}
func (*CreatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5216fe5474b1b6ea, []int{0}
}

func (m *CreatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePersonServiceRequest.Unmarshal(m, b)
}
func (m *CreatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePersonServiceRequest.Merge(m, src)
}
func (m *CreatePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePersonServiceRequest.Size(m)
}
func (m *CreatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePersonServiceRequest proto.InternalMessageInfo

func (m *CreatePersonServiceRequest) GetData() *person.Person {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeletePersonServiceRequest struct {
	Prs                  string       `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeletePersonServiceRequest) Reset()         { *m = DeletePersonServiceRequest{} }
func (m *DeletePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePersonServiceRequest) ProtoMessage()    {}
func (*DeletePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5216fe5474b1b6ea, []int{1}
}

func (m *DeletePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePersonServiceRequest.Unmarshal(m, b)
}
func (m *DeletePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeletePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePersonServiceRequest.Merge(m, src)
}
func (m *DeletePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePersonServiceRequest.Size(m)
}
func (m *DeletePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePersonServiceRequest proto.InternalMessageInfo

func (m *DeletePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *DeletePersonServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetPersonServiceRequest struct {
	Prs                  string   `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPersonServiceRequest) Reset()         { *m = GetPersonServiceRequest{} }
func (m *GetPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetPersonServiceRequest) ProtoMessage()    {}
func (*GetPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5216fe5474b1b6ea, []int{2}
}

func (m *GetPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPersonServiceRequest.Unmarshal(m, b)
}
func (m *GetPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPersonServiceRequest.Merge(m, src)
}
func (m *GetPersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetPersonServiceRequest.Size(m)
}
func (m *GetPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPersonServiceRequest proto.InternalMessageInfo

func (m *GetPersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

type ListPersonServiceRequest struct {
	//Query term to search a person
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPersonServiceRequest) Reset()         { *m = ListPersonServiceRequest{} }
func (m *ListPersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListPersonServiceRequest) ProtoMessage()    {}
func (*ListPersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5216fe5474b1b6ea, []int{3}
}

func (m *ListPersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPersonServiceRequest.Unmarshal(m, b)
}
func (m *ListPersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListPersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPersonServiceRequest.Merge(m, src)
}
func (m *ListPersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListPersonServiceRequest.Size(m)
}
func (m *ListPersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPersonServiceRequest proto.InternalMessageInfo

func (m *ListPersonServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdatePersonServiceRequest struct {
	Prs                  string         `protobuf:"bytes,1,opt,name=prs,proto3" json:"prs,omitempty"`
	Data                 *person.Person `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdatePersonServiceRequest) Reset()         { *m = UpdatePersonServiceRequest{} }
func (m *UpdatePersonServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePersonServiceRequest) ProtoMessage()    {}
func (*UpdatePersonServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5216fe5474b1b6ea, []int{4}
}

func (m *UpdatePersonServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePersonServiceRequest.Unmarshal(m, b)
}
func (m *UpdatePersonServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePersonServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePersonServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePersonServiceRequest.Merge(m, src)
}
func (m *UpdatePersonServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePersonServiceRequest.Size(m)
}
func (m *UpdatePersonServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePersonServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePersonServiceRequest proto.InternalMessageInfo

func (m *UpdatePersonServiceRequest) GetPrs() string {
	if m != nil {
		return m.Prs
	}
	return ""
}

func (m *UpdatePersonServiceRequest) GetData() *person.Person {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreatePersonServiceRequest)(nil), "personservice.CreatePersonServiceRequest")
	proto.RegisterType((*DeletePersonServiceRequest)(nil), "personservice.DeletePersonServiceRequest")
	proto.RegisterType((*GetPersonServiceRequest)(nil), "personservice.GetPersonServiceRequest")
	proto.RegisterType((*ListPersonServiceRequest)(nil), "personservice.ListPersonServiceRequest")
	proto.RegisterType((*UpdatePersonServiceRequest)(nil), "personservice.UpdatePersonServiceRequest")
}

func init() { proto.RegisterFile("personservice/service.proto", fileDescriptor_5216fe5474b1b6ea) }

var fileDescriptor_5216fe5474b1b6ea = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6e, 0xda, 0x30,
	0x18, 0xc7, 0x15, 0x86, 0x26, 0x61, 0xc2, 0x34, 0x79, 0xd3, 0x86, 0xcc, 0xd0, 0x90, 0x11, 0x1b,
	0x1b, 0x92, 0xad, 0xd2, 0x5b, 0x4f, 0x95, 0x28, 0xea, 0xa5, 0x87, 0x2a, 0x55, 0x2f, 0xbd, 0x85,
	0xe0, 0xa2, 0xb4, 0x21, 0x0e, 0xb1, 0x83, 0x84, 0xaa, 0xf6, 0xc0, 0x2b, 0xf4, 0xd1, 0xfa, 0x0a,
	0x7d, 0x88, 0x1e, 0xab, 0xd8, 0x6e, 0x4b, 0x08, 0x96, 0x38, 0x39, 0x89, 0x3f, 0xff, 0x7f, 0x9f,
	0xff, 0xff, 0x2f, 0xa0, 0x95, 0xb0, 0x54, 0xf0, 0x58, 0xb0, 0x74, 0x19, 0x06, 0x8c, 0x9a, 0x95,
	0x24, 0x29, 0x97, 0x1c, 0x36, 0x0a, 0x9b, 0xe8, 0xd7, 0x8c, 0xf3, 0x59, 0xc4, 0xa8, 0x9f, 0x84,
	0xd4, 0x8f, 0x63, 0x2e, 0x7d, 0x19, 0xf2, 0x58, 0xe8, 0x62, 0xf4, 0x4d, 0x17, 0x53, 0xbd, 0x98,
	0x8f, 0x2d, 0x73, 0x44, 0xbd, 0x4d, 0xb2, 0x6b, 0xca, 0xe6, 0x89, 0x5c, 0xe9, 0x4d, 0x7c, 0x0c,
	0xd0, 0x28, 0x65, 0xbe, 0x64, 0xe7, 0xea, 0xc8, 0x85, 0xc6, 0x78, 0x6c, 0x91, 0x31, 0x21, 0x21,
	0x06, 0xd5, 0xa9, 0x2f, 0xfd, 0xa6, 0xd3, 0x71, 0xfa, 0xf5, 0xe1, 0x17, 0x62, 0x74, 0x75, 0xad,
	0xa7, 0xf6, 0xf0, 0x15, 0x40, 0x27, 0x2c, 0x62, 0x16, 0x85, 0xaf, 0xe0, 0x53, 0x92, 0x0a, 0x25,
	0x50, 0xf3, 0xf2, 0x47, 0xf8, 0xdf, 0x68, 0x56, 0x94, 0xe6, 0x0f, 0xa2, 0xbb, 0x23, 0x6f, 0xdd,
	0x91, 0x71, 0xde, 0x9d, 0xd1, 0x1e, 0x80, 0x9f, 0xa7, 0x4c, 0xee, 0x27, 0x8c, 0xfb, 0xa0, 0x79,
	0x16, 0x8a, 0xdd, 0xd5, 0x2e, 0x70, 0x16, 0xa6, 0xd6, 0x59, 0x60, 0x0f, 0xa0, 0xcb, 0x64, 0xea,
	0xef, 0xdd, 0x32, 0x2e, 0xb4, 0xbc, 0xd3, 0x86, 0xe1, 0x4b, 0x15, 0x34, 0x0a, 0x72, 0x70, 0x09,
	0xdc, 0x4d, 0x6b, 0xe1, 0x3f, 0x52, 0x88, 0x92, 0xd8, 0x7d, 0x47, 0xdf, 0x8b, 0x88, 0x71, 0x2c,
	0x43, 0xb9, 0xc2, 0xbd, 0xf5, 0xd3, 0xf3, 0x63, 0xe5, 0x37, 0x6c, 0xd3, 0x39, 0x0f, 0x6e, 0x73,
	0xaa, 0x09, 0x5a, 0xd0, 0x40, 0x69, 0x91, 0x9b, 0x9c, 0xf3, 0x00, 0xdc, 0xcd, 0x40, 0x4a, 0x5c,
	0x7b, 0x5a, 0xc8, 0x92, 0x06, 0x1e, 0x28, 0x72, 0x0f, 0x76, 0xcb, 0xe4, 0xbb, 0x24, 0x15, 0xf7,
	0x74, 0xaa, 0x34, 0x35, 0x5f, 0x80, 0xda, 0x7b, 0x68, 0xf0, 0xcf, 0x16, 0xdc, 0x12, 0xa7, 0xe5,
	0xc6, 0x7d, 0xc5, 0xc5, 0xb0, 0x63, 0xe3, 0xce, 0x98, 0xd4, 0xd0, 0x0c, 0xd4, 0x3f, 0xc2, 0x17,
	0xf0, 0xef, 0x16, 0xd6, 0x36, 0x18, 0xa8, 0x59, 0xe4, 0x8e, 0x78, 0x14, 0xb1, 0x20, 0xff, 0xa5,
	0x70, 0x57, 0xb1, 0xdb, 0xb0, 0x55, 0x66, 0x47, 0xa1, 0x30, 0xd8, 0xb5, 0x03, 0xdc, 0xcd, 0x51,
	0x2a, 0x99, 0x6d, 0x9f, 0x33, 0xcb, 0x95, 0x0f, 0x14, 0x76, 0x30, 0xb4, 0x5a, 0x9d, 0x29, 0x45,
	0x85, 0x3f, 0x52, 0xa3, 0x37, 0xf9, 0xac, 0xd2, 0x3a, 0x7c, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x13,
	0x2e, 0xc7, 0x0e, 0x48, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PersonServiceClient is the client API for PersonService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PersonServiceClient interface {
	// Creates a new Person
	CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error)
}

type personServiceClient struct {
	cc *grpc.ClientConn
}

func NewPersonServiceClient(cc *grpc.ClientConn) PersonServiceClient {
	return &personServiceClient{cc}
}

func (c *personServiceClient) CreatePerson(ctx context.Context, in *CreatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/personservice.PersonService/CreatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) DeletePerson(ctx context.Context, in *DeletePersonServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/personservice.PersonService/DeletePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) GetPerson(ctx context.Context, in *GetPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/personservice.PersonService/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) ListPersons(ctx context.Context, in *ListPersonServiceRequest, opts ...grpc.CallOption) (*person.PersonCollection, error) {
	out := new(person.PersonCollection)
	err := c.cc.Invoke(ctx, "/personservice.PersonService/ListPersons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personServiceClient) UpdatePerson(ctx context.Context, in *UpdatePersonServiceRequest, opts ...grpc.CallOption) (*person.PersonEntity, error) {
	out := new(person.PersonEntity)
	err := c.cc.Invoke(ctx, "/personservice.PersonService/UpdatePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonServiceServer is the server API for PersonService service.
type PersonServiceServer interface {
	// Creates a new Person
	CreatePerson(context.Context, *CreatePersonServiceRequest) (*person.PersonEntity, error)
	// Delete a Person
	DeletePerson(context.Context, *DeletePersonServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a PersonEntity which contains a Person
	GetPerson(context.Context, *GetPersonServiceRequest) (*person.PersonEntity, error)
	// The List method takes zero or more parameters as input, and returns a PersonCollection of PersonEntity that match the input parameters.
	ListPersons(context.Context, *ListPersonServiceRequest) (*person.PersonCollection, error)
	// Updates a Person, partial updates are supported
	UpdatePerson(context.Context, *UpdatePersonServiceRequest) (*person.PersonEntity, error)
}

// UnimplementedPersonServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPersonServiceServer struct {
}

func (*UnimplementedPersonServiceServer) CreatePerson(ctx context.Context, req *CreatePersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePerson not implemented")
}
func (*UnimplementedPersonServiceServer) DeletePerson(ctx context.Context, req *DeletePersonServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePerson not implemented")
}
func (*UnimplementedPersonServiceServer) GetPerson(ctx context.Context, req *GetPersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerson not implemented")
}
func (*UnimplementedPersonServiceServer) ListPersons(ctx context.Context, req *ListPersonServiceRequest) (*person.PersonCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPersons not implemented")
}
func (*UnimplementedPersonServiceServer) UpdatePerson(ctx context.Context, req *UpdatePersonServiceRequest) (*person.PersonEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePerson not implemented")
}

func RegisterPersonServiceServer(s *grpc.Server, srv PersonServiceServer) {
	s.RegisterService(&_PersonService_serviceDesc, srv)
}

func _PersonService_CreatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).CreatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personservice.PersonService/CreatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).CreatePerson(ctx, req.(*CreatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_DeletePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).DeletePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personservice.PersonService/DeletePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).DeletePerson(ctx, req.(*DeletePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personservice.PersonService/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).GetPerson(ctx, req.(*GetPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_ListPersons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).ListPersons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personservice.PersonService/ListPersons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).ListPersons(ctx, req.(*ListPersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonService_UpdatePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePersonServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonServiceServer).UpdatePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/personservice.PersonService/UpdatePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonServiceServer).UpdatePerson(ctx, req.(*UpdatePersonServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PersonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "personservice.PersonService",
	HandlerType: (*PersonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePerson",
			Handler:    _PersonService_CreatePerson_Handler,
		},
		{
			MethodName: "DeletePerson",
			Handler:    _PersonService_DeletePerson_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _PersonService_GetPerson_Handler,
		},
		{
			MethodName: "ListPersons",
			Handler:    _PersonService_ListPersons_Handler,
		},
		{
			MethodName: "UpdatePerson",
			Handler:    _PersonService_UpdatePerson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "personservice/service.proto",
}
