// Code generated by protoc-gen-go. DO NOT EDIT.
// source: projectservice/service.proto

package projectservice

import (
	project "../project"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateProjectServiceRequest struct {
	Data                 *project.Project `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateProjectServiceRequest) Reset()         { *m = CreateProjectServiceRequest{} }
func (m *CreateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectServiceRequest) ProtoMessage()    {}
func (*CreateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c31cc769e894134, []int{0}
}

func (m *CreateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectServiceRequest.Unmarshal(m, b)
}
func (m *CreateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectServiceRequest.Merge(m, src)
}
func (m *CreateProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectServiceRequest.Size(m)
}
func (m *CreateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectServiceRequest proto.InternalMessageInfo

func (m *CreateProjectServiceRequest) GetData() *project.Project {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteProjectServiceRequest struct {
	Prj                  string       `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data                 *empty.Empty `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteProjectServiceRequest) Reset()         { *m = DeleteProjectServiceRequest{} }
func (m *DeleteProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectServiceRequest) ProtoMessage()    {}
func (*DeleteProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c31cc769e894134, []int{1}
}

func (m *DeleteProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectServiceRequest.Unmarshal(m, b)
}
func (m *DeleteProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectServiceRequest.Merge(m, src)
}
func (m *DeleteProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectServiceRequest.Size(m)
}
func (m *DeleteProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectServiceRequest proto.InternalMessageInfo

func (m *DeleteProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

func (m *DeleteProjectServiceRequest) GetData() *empty.Empty {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetProjectServiceRequest struct {
	Prj                  string   `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectServiceRequest) Reset()         { *m = GetProjectServiceRequest{} }
func (m *GetProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectServiceRequest) ProtoMessage()    {}
func (*GetProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c31cc769e894134, []int{2}
}

func (m *GetProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectServiceRequest.Unmarshal(m, b)
}
func (m *GetProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectServiceRequest.Merge(m, src)
}
func (m *GetProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectServiceRequest.Size(m)
}
func (m *GetProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectServiceRequest proto.InternalMessageInfo

func (m *GetProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

type ListProjectServiceRequest struct {
	//Query term to search a project
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectServiceRequest) Reset()         { *m = ListProjectServiceRequest{} }
func (m *ListProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectServiceRequest) ProtoMessage()    {}
func (*ListProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c31cc769e894134, []int{3}
}

func (m *ListProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectServiceRequest.Unmarshal(m, b)
}
func (m *ListProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectServiceRequest.Merge(m, src)
}
func (m *ListProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectServiceRequest.Size(m)
}
func (m *ListProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectServiceRequest proto.InternalMessageInfo

func (m *ListProjectServiceRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UpdateProjectServiceRequest struct {
	Prj                  string           `protobuf:"bytes,1,opt,name=prj,proto3" json:"prj,omitempty"`
	Data                 *project.Project `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateProjectServiceRequest) Reset()         { *m = UpdateProjectServiceRequest{} }
func (m *UpdateProjectServiceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProjectServiceRequest) ProtoMessage()    {}
func (*UpdateProjectServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c31cc769e894134, []int{4}
}

func (m *UpdateProjectServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProjectServiceRequest.Unmarshal(m, b)
}
func (m *UpdateProjectServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProjectServiceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProjectServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProjectServiceRequest.Merge(m, src)
}
func (m *UpdateProjectServiceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProjectServiceRequest.Size(m)
}
func (m *UpdateProjectServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProjectServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProjectServiceRequest proto.InternalMessageInfo

func (m *UpdateProjectServiceRequest) GetPrj() string {
	if m != nil {
		return m.Prj
	}
	return ""
}

func (m *UpdateProjectServiceRequest) GetData() *project.Project {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateProjectServiceRequest)(nil), "projectservice.CreateProjectServiceRequest")
	proto.RegisterType((*DeleteProjectServiceRequest)(nil), "projectservice.DeleteProjectServiceRequest")
	proto.RegisterType((*GetProjectServiceRequest)(nil), "projectservice.GetProjectServiceRequest")
	proto.RegisterType((*ListProjectServiceRequest)(nil), "projectservice.ListProjectServiceRequest")
	proto.RegisterType((*UpdateProjectServiceRequest)(nil), "projectservice.UpdateProjectServiceRequest")
}

func init() { proto.RegisterFile("projectservice/service.proto", fileDescriptor_3c31cc769e894134) }

var fileDescriptor_3c31cc769e894134 = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6a, 0xe2, 0x40,
	0x14, 0xc6, 0x89, 0xfb, 0x07, 0xf6, 0xac, 0x8a, 0x0c, 0xac, 0xb8, 0x89, 0x88, 0x9b, 0x0d, 0xa2,
	0xbb, 0x32, 0x03, 0xee, 0x23, 0xb8, 0xd2, 0x9b, 0x5e, 0x14, 0x8b, 0x57, 0xbd, 0x8a, 0x71, 0x2a,
	0x49, 0x63, 0x26, 0x66, 0xc6, 0x82, 0xd8, 0xde, 0xf8, 0x04, 0x85, 0x3e, 0x5a, 0x5f, 0xa1, 0x0f,
	0x52, 0x32, 0x19, 0xb1, 0x89, 0x8e, 0xf5, 0x6a, 0x92, 0xcc, 0x99, 0xef, 0xf7, 0xcd, 0xf9, 0x4e,
	0xa0, 0x19, 0x27, 0x2c, 0xa0, 0x9e, 0xe0, 0x34, 0xb9, 0xf7, 0x3d, 0x4a, 0xd4, 0x8a, 0xe3, 0x84,
	0x09, 0x86, 0xaa, 0xf9, 0x5d, 0xb3, 0x39, 0x67, 0x6c, 0x1e, 0x52, 0xe2, 0xc6, 0x3e, 0x71, 0xa3,
	0x88, 0x09, 0x57, 0xf8, 0x2c, 0xe2, 0x59, 0xb5, 0xf9, 0x43, 0x55, 0x13, 0xb5, 0xaa, 0xcf, 0x96,
	0x3a, 0x24, 0xdf, 0xa6, 0xab, 0x5b, 0x42, 0x17, 0xb1, 0x58, 0x67, 0x9b, 0xf6, 0x10, 0xac, 0x61,
	0x42, 0x5d, 0x41, 0xaf, 0xb2, 0x33, 0xd7, 0x19, 0x69, 0x4c, 0x97, 0x2b, 0xca, 0x05, 0x72, 0xe0,
	0xf3, 0xcc, 0x15, 0x6e, 0xc3, 0x68, 0x1b, 0xdd, 0xef, 0x83, 0x1a, 0xde, 0x29, 0xab, 0xea, 0xb1,
	0xdc, 0xb5, 0x6f, 0xc0, 0xfa, 0x4f, 0x43, 0xaa, 0x13, 0xa9, 0xc1, 0xa7, 0x38, 0x09, 0xa4, 0xc6,
	0xb7, 0x71, 0xfa, 0x88, 0xfe, 0x28, 0xd9, 0x92, 0x94, 0xad, 0xe3, 0xcc, 0x21, 0xde, 0x39, 0xc4,
	0xa3, 0xd4, 0xa1, 0x12, 0xef, 0x43, 0xe3, 0x82, 0x8a, 0x33, 0x95, 0xed, 0x1e, 0xfc, 0xbc, 0xf4,
	0xb9, 0xa6, 0xbc, 0x0c, 0xc6, 0x52, 0x15, 0x1b, 0x4b, 0x7b, 0x02, 0xd6, 0x24, 0x9e, 0xb9, 0xe7,
	0xbb, 0x76, 0x72, 0xae, 0x35, 0xcd, 0x18, 0x3c, 0x7d, 0x81, 0x6a, 0x5e, 0x11, 0x3d, 0x40, 0x25,
	0xd7, 0x64, 0xf4, 0x17, 0xe7, 0x83, 0xc5, 0x27, 0x32, 0x30, 0xeb, 0x45, 0xd0, 0x28, 0x12, 0xbe,
	0x58, 0xdb, 0x9d, 0xed, 0xcb, 0xeb, 0x73, 0xa9, 0x8d, 0x5a, 0x64, 0xc1, 0xbc, 0xbb, 0x94, 0xbd,
	0x0b, 0x9e, 0x13, 0x4f, 0xea, 0xe1, 0x80, 0xb3, 0x08, 0x6d, 0x0d, 0xa8, 0xe4, 0xe2, 0x39, 0xc4,
	0x9f, 0x48, 0xcf, 0xd4, 0xa4, 0x63, 0xf7, 0x25, 0xbe, 0x83, 0x9c, 0x23, 0xf8, 0x4d, 0x9c, 0x04,
	0x8f, 0x64, 0x26, 0x55, 0x33, 0x13, 0x6b, 0x80, 0x7d, 0x8a, 0xa8, 0x5b, 0x34, 0xa0, 0x4b, 0x58,
	0x7b, 0xf9, 0x9e, 0xa4, 0xff, 0x46, 0xbf, 0xb4, 0xf4, 0x39, 0x15, 0x19, 0x7a, 0x03, 0xe5, 0x77,
	0x23, 0xc1, 0x51, 0xaf, 0x08, 0xd7, 0x0e, 0x8c, 0x69, 0x16, 0xe9, 0x43, 0x16, 0x86, 0xd4, 0x4b,
	0x7f, 0x3a, 0xdb, 0x91, 0x0e, 0x5a, 0xa8, 0x79, 0xc4, 0x41, 0xe8, 0x73, 0xb1, 0x6f, 0x7e, 0x6e,
	0xca, 0x0e, 0x9b, 0x7f, 0x62, 0x08, 0xb5, 0xd7, 0xff, 0xb8, 0xf9, 0x2b, 0xa9, 0x2a, 0x4d, 0x4c,
	0xbf, 0xca, 0xe8, 0xfe, 0xbd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x58, 0x90, 0x70, 0xef, 0x6d, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectServiceClient is the client API for ProjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectServiceClient interface {
	// Creates a new Project
	CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error)
}

type projectServiceClient struct {
	cc *grpc.ClientConn
}

func NewProjectServiceClient(cc *grpc.ClientConn) ProjectServiceClient {
	return &projectServiceClient{cc}
}

func (c *projectServiceClient) CreateProject(ctx context.Context, in *CreateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/projectservice.ProjectService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectServiceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/projectservice.ProjectService/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) GetProject(ctx context.Context, in *GetProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/projectservice.ProjectService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) ListProjects(ctx context.Context, in *ListProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectCollection, error) {
	out := new(project.ProjectCollection)
	err := c.cc.Invoke(ctx, "/projectservice.ProjectService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectServiceClient) UpdateProject(ctx context.Context, in *UpdateProjectServiceRequest, opts ...grpc.CallOption) (*project.ProjectEntity, error) {
	out := new(project.ProjectEntity)
	err := c.cc.Invoke(ctx, "/projectservice.ProjectService/UpdateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectServiceServer is the server API for ProjectService service.
type ProjectServiceServer interface {
	// Creates a new Project
	CreateProject(context.Context, *CreateProjectServiceRequest) (*project.ProjectEntity, error)
	// Delete a Project
	DeleteProject(context.Context, *DeleteProjectServiceRequest) (*empty.Empty, error)
	// The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project
	GetProject(context.Context, *GetProjectServiceRequest) (*project.ProjectEntity, error)
	// The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.
	ListProjects(context.Context, *ListProjectServiceRequest) (*project.ProjectCollection, error)
	// Updates a Project, partial updates are supported
	UpdateProject(context.Context, *UpdateProjectServiceRequest) (*project.ProjectEntity, error)
}

// UnimplementedProjectServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectServiceServer struct {
}

func (*UnimplementedProjectServiceServer) CreateProject(ctx context.Context, req *CreateProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedProjectServiceServer) DeleteProject(ctx context.Context, req *DeleteProjectServiceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedProjectServiceServer) GetProject(ctx context.Context, req *GetProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedProjectServiceServer) ListProjects(ctx context.Context, req *ListProjectServiceRequest) (*project.ProjectCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedProjectServiceServer) UpdateProject(ctx context.Context, req *UpdateProjectServiceRequest) (*project.ProjectEntity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProject not implemented")
}

func RegisterProjectServiceServer(s *grpc.Server, srv ProjectServiceServer) {
	s.RegisterService(&_ProjectService_serviceDesc, srv)
}

func _ProjectService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/projectservice.ProjectService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).CreateProject(ctx, req.(*CreateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/projectservice.ProjectService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).DeleteProject(ctx, req.(*DeleteProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/projectservice.ProjectService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).GetProject(ctx, req.(*GetProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/projectservice.ProjectService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).ListProjects(ctx, req.(*ListProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectService_UpdateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProjectServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectServiceServer).UpdateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/projectservice.ProjectService/UpdateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectServiceServer).UpdateProject(ctx, req.(*UpdateProjectServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "projectservice.ProjectService",
	HandlerType: (*ProjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _ProjectService_CreateProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ProjectService_DeleteProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _ProjectService_GetProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _ProjectService_ListProjects_Handler,
		},
		{
			MethodName: "UpdateProject",
			Handler:    _ProjectService_UpdateProject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "projectservice/service.proto",
}
