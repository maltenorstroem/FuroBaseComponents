{
  "swagger": "2.0",
  "info": {
    "title": "project_service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/projects": {
      "get": {
        "summary": "The List method takes zero or more parameters as input, and returns a ProjectCollection of ProjectEntity that match the input parameters.",
        "operationId": "ListProjectService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectCollection"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "description": "Partielle Repr채sentation fields=id,name // 10.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "description": "Sortierung nach feldern\n**?filter=-completed** um completed absteigend zu bekommen\n**?filter=completed** um completed aufsteigend zu bekommen.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Gew체nschte Seite. Tipp: Folge dem HATEOAS next, prev,...",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Anzahl Elemente pro Seite, maximal sind 99 erlaubt.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "description": "Meta f체r die Anzahl der Elemente der Resource, bei true ist in der Antwort Meta der count aufgef체hrt.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sum",
            "description": "not implemented.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "not implemented (ehemals context).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "description": "Query term to search a project.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "post": {
        "summary": "Creates a new Project",
        "operationId": "CreateProjectService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProject"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/projects/{var}": {
      "get": {
        "summary": "The Get method takes zero or more parameters, and returns a ProjectEntity which contains a Project",
        "operationId": "GetProjectService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "var",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "delete": {
        "summary": "Delete a Project",
        "operationId": "DeleteProjectService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "var",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "patch": {
        "summary": "Updates a Project, partial updates are supported",
        "operationId": "UpdateProjectService",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "var",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProject"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    }
  },
  "definitions": {
    "furoFieldconstraint": {
      "type": "object",
      "properties": {
        "constraint": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "constrain of a field"
        }
      },
      "title": "constrains of fields"
    },
    "furoFieldmeta": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "title": "meta information of a field"
        }
      },
      "title": "meta"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "title": "link"
        },
        "method": {
          "type": "string",
          "title": "method of curl"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetafield"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetafield": {
      "type": "object",
      "properties": {
        "constraints": {
          "$ref": "#/definitions/furoFieldconstraint",
          "title": "constraints of a field"
        },
        "meta": {
          "$ref": "#/definitions/furoFieldmeta",
          "title": "meta information of a field"
        }
      },
      "title": "fields of meta info"
    },
    "googleDate": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0. if specifying a year by itself or a year and month where the day is not significant."
        },
        "display_name": {
          "type": "string",
          "title": "Localized String representation of date"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day."
        },
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year."
        }
      },
      "title": "Date, https://github.com/googleapis/googleapis/blob/master/google/date.proto"
    },
    "googleMoney": {
      "type": "object",
      "properties": {
        "currency_code": {
          "type": "string",
          "description": "The 3-letter currency code defined in ISO 4217."
        },
        "display_name": {
          "type": "string",
          "title": "String representation of money entity"
        },
        "nanos": {
          "type": "string",
          "format": "int64",
          "description": "Number of nano (10^-9) units of the amount. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount."
        }
      },
      "title": "Represents an amount of money with its currency type. https://github.com/googleapis/googleapis/blob/master/google/money.proto"
    },
    "personPerson": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string",
          "title": "Localized String representation of a person"
        },
        "first_name": {
          "type": "string",
          "title": "First name of a person"
        },
        "name": {
          "type": "string",
          "title": "Name of a person"
        },
        "phone_nr": {
          "type": "string",
          "title": "Internal phone number"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of main skills of a person"
        }
      },
      "title": "Person message type"
    },
    "projectProject": {
      "type": "object",
      "properties": {
        "cost_limit": {
          "$ref": "#/definitions/googleMoney",
          "title": "Project cost limit"
        },
        "description": {
          "type": "string",
          "title": "Short project description"
        },
        "display_name": {
          "type": "string",
          "title": "Localized String representation of a project"
        },
        "end": {
          "$ref": "#/definitions/googleDate",
          "title": "Prospective end date of the project"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/personPerson"
          },
          "title": "List of project members"
        },
        "start": {
          "$ref": "#/definitions/googleDate",
          "title": "Start date of the project"
        }
      },
      "title": "Project description"
    },
    "projectProjectCollection": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/projectProjectEntity"
          },
          "title": "Contains a project.ProjectEntity repeated"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "ProjectCollection with repeated ProjectEntity"
    },
    "projectProjectEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/projectProject",
          "title": "contains a project.Project"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "ProjectEntity with Project"
    },
    "protobufEmpty": {
      "type": "object",
      "title": "https://github.com/protocolbuffers/protobuf/blob/master/src/protobuf/empty.proto"
    }
  }
}
