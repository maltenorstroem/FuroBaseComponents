{
  "swagger": "2.0",
  "info": {
    "title": "taskservice/service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/mockdata/tasks/create.json": {
      "get": {
        "summary": "Creates a new Task",
        "operationId": "CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskTaskEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "data.description",
            "description": "Short task description.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.display_name",
            "description": "Localized String representation of a task.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.estimated_time",
            "description": "Estimated time in days.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.id",
            "description": "Identity of a task.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.display_name",
            "description": "String representation of the reference.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.href",
            "description": "link.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.id",
            "description": "Id of the reference.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.method",
            "description": "method of curl GET, POST, PUT, PATCH, DELETE.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.rel",
            "description": "the relationship.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.type",
            "description": "mime type.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/mockdata/tasks/list.json": {
      "get": {
        "summary": "The List method takes zero or more parameters as input, and returns a TaskCollection of TaskEntity that match the input parameters.",
        "operationId": "ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskTaskCollection"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "description": "Partial representation, fields=id,name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "description": "*\nSort fields, comma separated list for the ordering\nuse **?filter=-display_name** with a dash to sort descending\nuse **?filter=display_name** to sort ascending.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "description": "Page number for paginated content. Tipp: follow the HATEOAS next, prev,...",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "description": "Number of elements to return per page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "view",
            "description": "https://cloud.google.com/apis/design/design_patterns#resource_view.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "description": "Query term to search a task.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/mockdata/tasks/{tsk}/delete.json": {
      "get": {
        "summary": "Delete a Task",
        "operationId": "DeleteTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "tsk",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/mockdata/tasks/{tsk}/get.json": {
      "get": {
        "summary": "The Get method takes zero or more parameters, and returns a TaskEntity which contains a Task",
        "operationId": "GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskTaskEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "tsk",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    },
    "/mockdata/tasks/{tsk}/update.json": {
      "get": {
        "summary": "Updates a Task, partial updates are supported",
        "operationId": "UpdateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/taskTaskEntity"
            }
          }
        },
        "parameters": [
          {
            "name": "tsk",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "data.description",
            "description": "Short task description.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.display_name",
            "description": "Localized String representation of a task.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.estimated_time",
            "description": "Estimated time in days.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data.id",
            "description": "Identity of a task.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.display_name",
            "description": "String representation of the reference.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.href",
            "description": "link.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.id",
            "description": "Id of the reference.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.method",
            "description": "method of curl GET, POST, PUT, PATCH, DELETE.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.rel",
            "description": "the relationship.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "data.owner.type",
            "description": "mime type.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TaskService"
        ]
      }
    }
  },
  "definitions": {
    "furoFieldConstraint": {
      "type": "object",
      "properties": {
        "constraint": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "constrain of a field"
        }
      },
      "title": "constrains of fields"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "title": "link"
        },
        "method": {
          "type": "string",
          "title": "method of curl"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetaField"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetaField": {
      "type": "object",
      "properties": {
        "constraints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoFieldConstraint"
          },
          "title": "constrain of a field"
        },
        "meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "meta information of a field"
        }
      },
      "title": "fields of meta info"
    },
    "furoReference": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string",
          "title": "String representation of the reference"
        },
        "href": {
          "type": "string",
          "title": "link"
        },
        "id": {
          "type": "string",
          "title": "Id of the reference"
        },
        "method": {
          "type": "string",
          "title": "method of curl GET, POST, PUT, PATCH, DELETE"
        },
        "rel": {
          "type": "string",
          "title": "the relationship"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        }
      },
      "title": "reference"
    },
    "taskTask": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Short task description"
        },
        "display_name": {
          "type": "string",
          "title": "Localized String representation of a task"
        },
        "estimated_time": {
          "type": "integer",
          "format": "int32",
          "title": "Estimated time in days"
        },
        "id": {
          "type": "string",
          "title": "Identity of a task"
        },
        "owner": {
          "$ref": "#/definitions/furoReference",
          "title": "Owner of a task"
        },
        "subtasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/taskTask"
          },
          "title": "List of subtasks"
        }
      },
      "title": "Task data description"
    },
    "taskTaskCollection": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/taskTaskEntity"
          },
          "title": "Contains a task.TaskEntity repeated"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "TaskCollection with repeated TaskEntity"
    },
    "taskTaskEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/taskTask",
          "title": "contains a task.Task"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "TaskEntity with Task"
    }
  }
}
